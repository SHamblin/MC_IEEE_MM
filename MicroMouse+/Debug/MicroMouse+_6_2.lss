
MicroMouse+_6_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000045a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000406  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000045a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000048c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000138  00000000  00000000  000004c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001609  00000000  00000000  00000600  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000044e  00000000  00000000  00001c09  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000bce  00000000  00000000  00002057  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000304  00000000  00000000  00002c28  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000639  00000000  00000000  00002f2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000115e  00000000  00000000  00003565  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000130  00000000  00000000  000046c3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a0 30       	cpi	r26, 0x00	; 0
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 c4 01 	call	0x388	; 0x388 <main>
  88:	0c 94 01 02 	jmp	0x402	; 0x402 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <_Z8I2CStarth>:
	result = resultMSB;
	result = result << 8;//Shifts data from MSB to the right
	result += resultLSB;//Adds in the LSB
	
	return result;
}
  90:	94 ea       	ldi	r25, 0xA4	; 164
  92:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  96:	ec eb       	ldi	r30, 0xBC	; 188
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	90 81       	ld	r25, Z
  9c:	99 23       	and	r25, r25
  9e:	ec f7       	brge	.-6      	; 0x9a <_Z8I2CStarth+0xa>
  a0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
  a4:	84 e8       	ldi	r24, 0x84	; 132
  a6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  aa:	ec eb       	ldi	r30, 0xBC	; 188
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	80 81       	ld	r24, Z
  b0:	88 23       	and	r24, r24
  b2:	ec f7       	brge	.-6      	; 0xae <_Z8I2CStarth+0x1e>
  b4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  b8:	08 95       	ret

000000ba <_Z11I2CDataSendh>:
  ba:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
  be:	84 e8       	ldi	r24, 0x84	; 132
  c0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  c4:	ec eb       	ldi	r30, 0xBC	; 188
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	88 23       	and	r24, r24
  cc:	ec f7       	brge	.-6      	; 0xc8 <_Z11I2CDataSendh+0xe>
  ce:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  d2:	08 95       	ret

000000d4 <_Z11I2CDataReadb>:
  d4:	88 23       	and	r24, r24
  d6:	31 f0       	breq	.+12     	; 0xe4 <_Z11I2CDataReadb+0x10>
  d8:	84 ec       	ldi	r24, 0xC4	; 196
  da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  de:	ec eb       	ldi	r30, 0xBC	; 188
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	04 c0       	rjmp	.+8      	; 0xec <_Z11I2CDataReadb+0x18>
  e4:	84 e8       	ldi	r24, 0x84	; 132
  e6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  ea:	f9 cf       	rjmp	.-14     	; 0xde <_Z11I2CDataReadb+0xa>
  ec:	80 81       	ld	r24, Z
  ee:	88 23       	and	r24, r24
  f0:	ec f7       	brge	.-6      	; 0xec <_Z11I2CDataReadb+0x18>
  f2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
  f6:	08 95       	ret

000000f8 <_Z8I2CPurgeh>:
  f8:	98 e2       	ldi	r25, 0x28	; 40
  fa:	9a 95       	dec	r25
  fc:	f1 f7       	brne	.-4      	; 0xfa <_Z8I2CPurgeh+0x2>
  fe:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 102:	3d 9a       	sbi	0x07, 5	; 7
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	ac 01       	movw	r20, r24
 108:	44 0f       	add	r20, r20
 10a:	55 1f       	adc	r21, r21
 10c:	44 0f       	add	r20, r20
 10e:	55 1f       	adc	r21, r21
 110:	44 0f       	add	r20, r20
 112:	55 1f       	adc	r21, r21
 114:	48 0f       	add	r20, r24
 116:	59 1f       	adc	r21, r25
 118:	14 16       	cp	r1, r20
 11a:	15 06       	cpc	r1, r21
 11c:	9c f5       	brge	.+102    	; 0x184 <_Z8I2CPurgeh+0x8c>
 11e:	20 e0       	ldi	r18, 0x00	; 0
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	e8 eb       	ldi	r30, 0xB8	; 184
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	45 9a       	sbi	0x08, 5	; 8
 128:	90 81       	ld	r25, Z
 12a:	90 32       	cpi	r25, 0x20	; 32
 12c:	29 f4       	brne	.+10     	; 0x138 <_Z8I2CPurgeh+0x40>
 12e:	8a e4       	ldi	r24, 0x4A	; 74
 130:	8a 95       	dec	r24
 132:	f1 f7       	brne	.-4      	; 0x130 <_Z8I2CPurgeh+0x38>
 134:	00 c0       	rjmp	.+0      	; 0x136 <_Z8I2CPurgeh+0x3e>
 136:	0c c0       	rjmp	.+24     	; 0x150 <_Z8I2CPurgeh+0x58>
 138:	90 81       	ld	r25, Z
 13a:	92 30       	cpi	r25, 0x02	; 2
 13c:	29 f4       	brne	.+10     	; 0x148 <_Z8I2CPurgeh+0x50>
 13e:	92 e1       	ldi	r25, 0x12	; 18
 140:	9a 95       	dec	r25
 142:	f1 f7       	brne	.-4      	; 0x140 <_Z8I2CPurgeh+0x48>
 144:	00 c0       	rjmp	.+0      	; 0x146 <_Z8I2CPurgeh+0x4e>
 146:	04 c0       	rjmp	.+8      	; 0x150 <_Z8I2CPurgeh+0x58>
 148:	8a e4       	ldi	r24, 0x4A	; 74
 14a:	8a 95       	dec	r24
 14c:	f1 f7       	brne	.-4      	; 0x14a <_Z8I2CPurgeh+0x52>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <_Z8I2CPurgeh+0x58>
 150:	45 98       	cbi	0x08, 5	; 8
 152:	90 81       	ld	r25, Z
 154:	90 32       	cpi	r25, 0x20	; 32
 156:	29 f4       	brne	.+10     	; 0x162 <_Z8I2CPurgeh+0x6a>
 158:	9a e4       	ldi	r25, 0x4A	; 74
 15a:	9a 95       	dec	r25
 15c:	f1 f7       	brne	.-4      	; 0x15a <_Z8I2CPurgeh+0x62>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <_Z8I2CPurgeh+0x68>
 160:	0c c0       	rjmp	.+24     	; 0x17a <_Z8I2CPurgeh+0x82>
 162:	90 81       	ld	r25, Z
 164:	92 30       	cpi	r25, 0x02	; 2
 166:	29 f4       	brne	.+10     	; 0x172 <_Z8I2CPurgeh+0x7a>
 168:	82 e1       	ldi	r24, 0x12	; 18
 16a:	8a 95       	dec	r24
 16c:	f1 f7       	brne	.-4      	; 0x16a <_Z8I2CPurgeh+0x72>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <_Z8I2CPurgeh+0x78>
 170:	04 c0       	rjmp	.+8      	; 0x17a <_Z8I2CPurgeh+0x82>
 172:	9a e4       	ldi	r25, 0x4A	; 74
 174:	9a 95       	dec	r25
 176:	f1 f7       	brne	.-4      	; 0x174 <_Z8I2CPurgeh+0x7c>
 178:	00 c0       	rjmp	.+0      	; 0x17a <_Z8I2CPurgeh+0x82>
 17a:	2f 5f       	subi	r18, 0xFF	; 255
 17c:	3f 4f       	sbci	r19, 0xFF	; 255
 17e:	24 17       	cp	r18, r20
 180:	35 07       	cpc	r19, r21
 182:	89 f6       	brne	.-94     	; 0x126 <_Z8I2CPurgeh+0x2e>
 184:	80 e3       	ldi	r24, 0x30	; 48
 186:	88 b9       	out	0x08, r24	; 8
 188:	8a e6       	ldi	r24, 0x6A	; 106
 18a:	8a 95       	dec	r24
 18c:	f1 f7       	brne	.-4      	; 0x18a <_Z8I2CPurgeh+0x92>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <_Z8I2CPurgeh+0x98>
 190:	08 95       	ret

00000192 <_Z11setUpInitalv>:
 192:	8f e1       	ldi	r24, 0x1F	; 31
 194:	9e e4       	ldi	r25, 0x4E	; 78
 196:	01 97       	sbiw	r24, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <_Z11setUpInitalv+0x4>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <_Z11setUpInitalv+0xa>
 19c:	00 00       	nop
 19e:	82 e0       	ldi	r24, 0x02	; 2
 1a0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
 1a4:	87 b1       	in	r24, 0x07	; 7
 1a6:	80 7f       	andi	r24, 0xF0	; 240
 1a8:	87 b9       	out	0x07, r24	; 7
 1aa:	18 b8       	out	0x08, r1	; 8
 1ac:	88 b1       	in	r24, 0x08	; 8
 1ae:	8f 60       	ori	r24, 0x0F	; 15
 1b0:	88 b9       	out	0x08, r24	; 8
 1b2:	08 95       	ret

000001b4 <_Z8setUpADCv>:
 1b4:	e4 e6       	ldi	r30, 0x64	; 100
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	80 81       	ld	r24, Z
 1ba:	8e 7f       	andi	r24, 0xFE	; 254
 1bc:	80 83       	st	Z, r24
 1be:	86 e6       	ldi	r24, 0x66	; 102
 1c0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 1c4:	86 e8       	ldi	r24, 0x86	; 134
 1c6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 1ca:	08 95       	ret

000001cc <_Z8setUpIMUv>:
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z8I2CPurgeh>
 1d2:	86 ed       	ldi	r24, 0xD6	; 214
 1d4:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
 1d8:	80 e1       	ldi	r24, 0x10	; 16
 1da:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 1de:	83 e9       	ldi	r24, 0x93	; 147
 1e0:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 1e4:	84 e9       	ldi	r24, 0x94	; 148
 1e6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1ea:	08 95       	ret

000001ec <_Z14IRsensorSelecth>:
 1ec:	cf 93       	push	r28
 1ee:	c8 2f       	mov	r28, r24
 1f0:	8e ee       	ldi	r24, 0xEE	; 238
 1f2:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
 1f6:	c4 30       	cpi	r28, 0x04	; 4
 1f8:	91 f0       	breq	.+36     	; 0x21e <_Z14IRsensorSelecth+0x32>
 1fa:	28 f4       	brcc	.+10     	; 0x206 <_Z14IRsensorSelecth+0x1a>
 1fc:	c1 30       	cpi	r28, 0x01	; 1
 1fe:	b9 f0       	breq	.+46     	; 0x22e <_Z14IRsensorSelecth+0x42>
 200:	c2 30       	cpi	r28, 0x02	; 2
 202:	89 f0       	breq	.+34     	; 0x226 <_Z14IRsensorSelecth+0x3a>
 204:	17 c0       	rjmp	.+46     	; 0x234 <_Z14IRsensorSelecth+0x48>
 206:	c8 30       	cpi	r28, 0x08	; 8
 208:	31 f0       	breq	.+12     	; 0x216 <_Z14IRsensorSelecth+0x2a>
 20a:	c0 31       	cpi	r28, 0x10	; 16
 20c:	99 f4       	brne	.+38     	; 0x234 <_Z14IRsensorSelecth+0x48>
 20e:	80 e1       	ldi	r24, 0x10	; 16
 210:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 214:	0f c0       	rjmp	.+30     	; 0x234 <_Z14IRsensorSelecth+0x48>
 216:	88 e0       	ldi	r24, 0x08	; 8
 218:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 21c:	0b c0       	rjmp	.+22     	; 0x234 <_Z14IRsensorSelecth+0x48>
 21e:	84 e0       	ldi	r24, 0x04	; 4
 220:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 224:	07 c0       	rjmp	.+14     	; 0x234 <_Z14IRsensorSelecth+0x48>
 226:	82 e0       	ldi	r24, 0x02	; 2
 228:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 22c:	03 c0       	rjmp	.+6      	; 0x234 <_Z14IRsensorSelecth+0x48>
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 234:	84 e9       	ldi	r24, 0x94	; 148
 236:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 23a:	cf 91       	pop	r28
 23c:	08 95       	ret

0000023e <_Z7setupIRv>:
 23e:	ef 92       	push	r14
 240:	ff 92       	push	r15
 242:	1f 93       	push	r17
 244:	cf 93       	push	r28
 246:	df 93       	push	r29
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z8I2CPurgeh>
 24e:	c0 e0       	ldi	r28, 0x00	; 0
 250:	d0 e0       	ldi	r29, 0x00	; 0
 252:	0f 2e       	mov	r0, r31
 254:	fc eb       	ldi	r31, 0xBC	; 188
 256:	ef 2e       	mov	r14, r31
 258:	f1 2c       	mov	r15, r1
 25a:	f0 2d       	mov	r31, r0
 25c:	14 e9       	ldi	r17, 0x94	; 148
 25e:	c1 30       	cpi	r28, 0x01	; 1
 260:	d1 05       	cpc	r29, r1
 262:	49 f0       	breq	.+18     	; 0x276 <_Z7setupIRv+0x38>
 264:	c2 30       	cpi	r28, 0x02	; 2
 266:	d1 05       	cpc	r29, r1
 268:	51 f0       	breq	.+20     	; 0x27e <_Z7setupIRv+0x40>
 26a:	20 97       	sbiw	r28, 0x00	; 0
 26c:	59 f4       	brne	.+22     	; 0x284 <_Z7setupIRv+0x46>
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z14IRsensorSelecth>
 274:	07 c0       	rjmp	.+14     	; 0x284 <_Z7setupIRv+0x46>
 276:	84 e0       	ldi	r24, 0x04	; 4
 278:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z14IRsensorSelecth>
 27c:	03 c0       	rjmp	.+6      	; 0x284 <_Z7setupIRv+0x46>
 27e:	80 e1       	ldi	r24, 0x10	; 16
 280:	0e 94 f6 00 	call	0x1ec	; 0x1ec <_Z14IRsensorSelecth>
 284:	82 e0       	ldi	r24, 0x02	; 2
 286:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z8I2CPurgeh>
 28a:	86 e2       	ldi	r24, 0x26	; 38
 28c:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
 290:	82 e8       	ldi	r24, 0x82	; 130
 292:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 296:	85 e0       	ldi	r24, 0x05	; 5
 298:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 29c:	f7 01       	movw	r30, r14
 29e:	10 83       	st	Z, r17
 2a0:	fa e1       	ldi	r31, 0x1A	; 26
 2a2:	fa 95       	dec	r31
 2a4:	f1 f7       	brne	.-4      	; 0x2a2 <_Z7setupIRv+0x64>
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <_Z7setupIRv+0x6a>
 2a8:	86 e2       	ldi	r24, 0x26	; 38
 2aa:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
 2ae:	83 e8       	ldi	r24, 0x83	; 131
 2b0:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 2b4:	84 e1       	ldi	r24, 0x14	; 20
 2b6:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 2ba:	f7 01       	movw	r30, r14
 2bc:	10 83       	st	Z, r17
 2be:	fa e1       	ldi	r31, 0x1A	; 26
 2c0:	fa 95       	dec	r31
 2c2:	f1 f7       	brne	.-4      	; 0x2c0 <_Z7setupIRv+0x82>
 2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <_Z7setupIRv+0x88>
 2c6:	86 e2       	ldi	r24, 0x26	; 38
 2c8:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
 2cc:	80 e8       	ldi	r24, 0x80	; 128
 2ce:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 2d2:	83 e0       	ldi	r24, 0x03	; 3
 2d4:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 2d8:	f7 01       	movw	r30, r14
 2da:	10 83       	st	Z, r17
 2dc:	fa e1       	ldi	r31, 0x1A	; 26
 2de:	fa 95       	dec	r31
 2e0:	f1 f7       	brne	.-4      	; 0x2de <_Z7setupIRv+0xa0>
 2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <_Z7setupIRv+0xa6>
 2e4:	21 96       	adiw	r28, 0x01	; 1
 2e6:	c3 30       	cpi	r28, 0x03	; 3
 2e8:	d1 05       	cpc	r29, r1
 2ea:	09 f0       	breq	.+2      	; 0x2ee <_Z7setupIRv+0xb0>
 2ec:	b8 cf       	rjmp	.-144    	; 0x25e <_Z7setupIRv+0x20>
 2ee:	df 91       	pop	r29
 2f0:	cf 91       	pop	r28
 2f2:	1f 91       	pop	r17
 2f4:	ff 90       	pop	r15
 2f6:	ef 90       	pop	r14
 2f8:	08 95       	ret

000002fa <_Z9readGyroZv>:

int16_t readGyroZ(){//Reads the Z axis of the gyro
 2fa:	cf 93       	push	r28
	uint8_t MSByte, LSByte;
	int16_t result = 0;
	
	I2CStart(IMU_GYRO_WRITE);
 2fc:	86 ed       	ldi	r24, 0xD6	; 214
 2fe:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
	I2CDataSend(0x1C);//Selects OUT_Z_G MSB byte, value is expresesed in a 16bit word two's complement
 302:	8c e1       	ldi	r24, 0x1C	; 28
 304:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
	I2CStart(IMU_GYRO_READ);
 308:	87 ed       	ldi	r24, 0xD7	; 215
 30a:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
	LSByte = I2CDataRead(true);
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z11I2CDataReadb>
 314:	c8 2f       	mov	r28, r24
	MSByte = I2CDataRead(false);
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z11I2CDataReadb>
	return(TWDR);
	//TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
}

void I2CStop(){//Stops and finishes I2C transmission
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);//Sets hardware for an I2C stop condition
 31c:	94 e9       	ldi	r25, 0x94	; 148
 31e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	I2CStart(IMU_GYRO_READ);
	LSByte = I2CDataRead(true);
	MSByte = I2CDataRead(false);
	I2CStop();
	
	result = MSByte;
 322:	90 e0       	ldi	r25, 0x00	; 0
	result = result << 8;
 324:	98 2f       	mov	r25, r24
 326:	88 27       	eor	r24, r24
	result += LSByte;
	
	return result;
}
 328:	8c 0f       	add	r24, r28
 32a:	91 1d       	adc	r25, r1
 32c:	cf 91       	pop	r28
 32e:	08 95       	ret

00000330 <_Z4beepv>:

void beep(){//Simple short beep
	DDRD  |= 0b00010000;
 330:	54 9a       	sbi	0x0a, 4	; 10
	PORTD |= 0b00010000;
 332:	5c 9a       	sbi	0x0b, 4	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 334:	2f ef       	ldi	r18, 0xFF	; 255
 336:	80 e7       	ldi	r24, 0x70	; 112
 338:	92 e0       	ldi	r25, 0x02	; 2
 33a:	21 50       	subi	r18, 0x01	; 1
 33c:	80 40       	sbci	r24, 0x00	; 0
 33e:	90 40       	sbci	r25, 0x00	; 0
 340:	e1 f7       	brne	.-8      	; 0x33a <_Z4beepv+0xa>
 342:	00 c0       	rjmp	.+0      	; 0x344 <_Z4beepv+0x14>
 344:	00 00       	nop
	
	_delay_ms(100);
	
	PORTD &= 0b11101111;
 346:	5c 98       	cbi	0x0b, 4	; 11
 348:	08 95       	ret

0000034a <_Z7lowBattv>:
}

void lowBatt(){//low battery warning. This is needed since a lipo is damaged if it gets bellow 3V per cell
	ADCSRA |= 0b01000000;
 34a:	ea e7       	ldi	r30, 0x7A	; 122
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	80 81       	ld	r24, Z
 350:	80 64       	ori	r24, 0x40	; 64
 352:	80 83       	st	Z, r24
 354:	2f ef       	ldi	r18, 0xFF	; 255
 356:	80 e7       	ldi	r24, 0x70	; 112
 358:	92 e0       	ldi	r25, 0x02	; 2
 35a:	21 50       	subi	r18, 0x01	; 1
 35c:	80 40       	sbci	r24, 0x00	; 0
 35e:	90 40       	sbci	r25, 0x00	; 0
 360:	e1 f7       	brne	.-8      	; 0x35a <_Z7lowBattv+0x10>
 362:	00 c0       	rjmp	.+0      	; 0x364 <_Z7lowBattv+0x1a>
 364:	00 00       	nop
	//	_delay_us(1);
	//}
	
	_delay_ms(100);
	
	if(ADCH < 185){//This works out to be about 7.2 volts, 217 is 8.4 volts
 366:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 36a:	89 3b       	cpi	r24, 0xB9	; 185
 36c:	60 f4       	brcc	.+24     	; 0x386 <_Z7lowBattv+0x3c>
		for(;;){
			beep();
 36e:	0e 94 98 01 	call	0x330	; 0x330 <_Z4beepv>
 372:	2f ef       	ldi	r18, 0xFF	; 255
 374:	84 e3       	ldi	r24, 0x34	; 52
 376:	9c e0       	ldi	r25, 0x0C	; 12
 378:	21 50       	subi	r18, 0x01	; 1
 37a:	80 40       	sbci	r24, 0x00	; 0
 37c:	90 40       	sbci	r25, 0x00	; 0
 37e:	e1 f7       	brne	.-8      	; 0x378 <_Z7lowBattv+0x2e>
 380:	00 c0       	rjmp	.+0      	; 0x382 <_Z7lowBattv+0x38>
 382:	00 00       	nop
 384:	f4 cf       	rjmp	.-24     	; 0x36e <_Z7lowBattv+0x24>
 386:	08 95       	ret

00000388 <main>:
#include "MMLib.h"//Include for custom MM library
uint8_t IRDistance[5];//Global int for IR values

int main()
{
	setUpInital();
 388:	0e 94 c9 00 	call	0x192	; 0x192 <_Z11setUpInitalv>
	setUpADC();
 38c:	0e 94 da 00 	call	0x1b4	; 0x1b4 <_Z8setUpADCv>
	setUpIMU();
 390:	0e 94 e6 00 	call	0x1cc	; 0x1cc <_Z8setUpIMUv>
	setupIR();
 394:	0e 94 1f 01 	call	0x23e	; 0x23e <_Z7setupIRv>
	I2C_MODE_FAST
 398:	82 e0       	ldi	r24, 0x02	; 2
 39a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	//motorSpeed(100,100);
	//for(;;){_delay_ms(10);}
	int presses = 0;
 39e:	80 e0       	ldi	r24, 0x00	; 0
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	05 c0       	rjmp	.+10     	; 0x3ae <main+0x26>
		}else{
			presses = 0;
		}
	}
	
	while(BUTTON_1 > 0){ 
 3a4:	32 99       	sbic	0x06, 2	; 6
 3a6:	10 c0       	rjmp	.+32     	; 0x3c8 <main+0x40>
 3a8:	1a c0       	rjmp	.+52     	; 0x3de <main+0x56>
		_delay_ms(10);
		
		if(BUTTON_1 > 0){
			presses++;
		}else{
			presses = 0;
 3aa:	80 e0       	ldi	r24, 0x00	; 0
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	ef e1       	ldi	r30, 0x1F	; 31
 3b0:	fe e4       	ldi	r31, 0x4E	; 78
 3b2:	31 97       	sbiw	r30, 0x01	; 1
 3b4:	f1 f7       	brne	.-4      	; 0x3b2 <main+0x2a>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <main+0x30>
 3b8:	00 00       	nop
	//for(;;){_delay_ms(10);}
	int presses = 0;
	while( presses < 4 ){//This block keeps the code from running until a button is pressed
		_delay_ms(10);
		
		if(BUTTON_1 > 0){
 3ba:	32 9b       	sbis	0x06, 2	; 6
 3bc:	f6 cf       	rjmp	.-20     	; 0x3aa <main+0x22>
			presses++;
 3be:	01 96       	adiw	r24, 0x01	; 1
	setupIR();
	I2C_MODE_FAST
	//motorSpeed(100,100);
	//for(;;){_delay_ms(10);}
	int presses = 0;
	while( presses < 4 ){//This block keeps the code from running until a button is pressed
 3c0:	84 30       	cpi	r24, 0x04	; 4
 3c2:	91 05       	cpc	r25, r1
 3c4:	a4 f3       	brlt	.-24     	; 0x3ae <main+0x26>
 3c6:	ee cf       	rjmp	.-36     	; 0x3a4 <main+0x1c>
 3c8:	ff e7       	ldi	r31, 0x7F	; 127
 3ca:	28 e3       	ldi	r18, 0x38	; 56
 3cc:	81 e0       	ldi	r24, 0x01	; 1
 3ce:	f1 50       	subi	r31, 0x01	; 1
 3d0:	20 40       	sbci	r18, 0x00	; 0
 3d2:	80 40       	sbci	r24, 0x00	; 0
 3d4:	e1 f7       	brne	.-8      	; 0x3ce <main+0x46>
 3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <main+0x50>
 3d8:	00 00       	nop
		}else{
			presses = 0;
		}
	}
	
	while(BUTTON_1 > 0){ 
 3da:	32 99       	sbic	0x06, 2	; 6
 3dc:	f5 cf       	rjmp	.-22     	; 0x3c8 <main+0x40>
		_delay_ms(50); 
	}
	
	beep();
 3de:	0e 94 98 01 	call	0x330	; 0x330 <_Z4beepv>
	
	lowBatt();
 3e2:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z7lowBattv>
	
	int16_t gyroZ;
	
	for(;;){
		gyroZ = readGyroZ();
 3e6:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_Z9readGyroZv>
		
		if(gyroZ > 200){
 3ea:	89 3c       	cpi	r24, 0xC9	; 201
 3ec:	91 05       	cpc	r25, r1
 3ee:	14 f0       	brlt	.+4      	; 0x3f4 <main+0x6c>
			beep();
 3f0:	0e 94 98 01 	call	0x330	; 0x330 <_Z4beepv>
 3f4:	ef e3       	ldi	r30, 0x3F	; 63
 3f6:	fc e9       	ldi	r31, 0x9C	; 156
 3f8:	31 97       	sbiw	r30, 0x01	; 1
 3fa:	f1 f7       	brne	.-4      	; 0x3f8 <main+0x70>
 3fc:	00 c0       	rjmp	.+0      	; 0x3fe <main+0x76>
 3fe:	00 00       	nop
 400:	f2 cf       	rjmp	.-28     	; 0x3e6 <main+0x5e>

00000402 <_exit>:
 402:	f8 94       	cli

00000404 <__stop_program>:
 404:	ff cf       	rjmp	.-2      	; 0x404 <__stop_program>
