
MicroMouse+_6_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001570  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014fc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000f  00800100  00800100  00001570  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001570  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000015a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b0  00000000  00000000  000015dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003634  00000000  00000000  0000178c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000546  00000000  00000000  00004dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000185a  00000000  00000000  00005306  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005ec  00000000  00000000  00006b60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009d8  00000000  00000000  0000714c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003112  00000000  00000000  00007b24  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  0000ac36  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
       8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
       c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
      60:	0c 94 ef 06 	jmp	0xdde	; 0xdde <__vector_24>
      64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	21 e0       	ldi	r18, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	af 30       	cpi	r26, 0x0F	; 15
      80:	b2 07       	cpc	r27, r18
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
      84:	0e 94 76 07 	call	0xeec	; 0xeec <main>
      88:	0c 94 7c 0a 	jmp	0x14f8	; 0x14f8 <_exit>

0000008c <__bad_interrupt>:
      8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <_Z8I2CStarth>:
void leftTurn(){
	leftTurnGyro();
}

void rightTurn(){
	rightTurnGyro();
      90:	ec eb       	ldi	r30, 0xBC	; 188
      92:	f0 e0       	ldi	r31, 0x00	; 0
      94:	10 82       	st	Z, r1
      96:	94 ea       	ldi	r25, 0xA4	; 164
      98:	90 83       	st	Z, r25
      9a:	90 81       	ld	r25, Z
      9c:	99 23       	and	r25, r25
      9e:	ec f7       	brge	.-6      	; 0x9a <_Z8I2CStarth+0xa>
      a0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
      a4:	84 e8       	ldi	r24, 0x84	; 132
      a6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
      aa:	ec eb       	ldi	r30, 0xBC	; 188
      ac:	f0 e0       	ldi	r31, 0x00	; 0
      ae:	80 81       	ld	r24, Z
      b0:	88 23       	and	r24, r24
      b2:	ec f7       	brge	.-6      	; 0xae <_Z8I2CStarth+0x1e>
      b4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
      b8:	08 95       	ret

000000ba <_Z11I2CDataSendh>:
      ba:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
      be:	84 e8       	ldi	r24, 0x84	; 132
      c0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
      c4:	ec eb       	ldi	r30, 0xBC	; 188
      c6:	f0 e0       	ldi	r31, 0x00	; 0
      c8:	80 81       	ld	r24, Z
      ca:	88 23       	and	r24, r24
      cc:	ec f7       	brge	.-6      	; 0xc8 <_Z11I2CDataSendh+0xe>
      ce:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
      d2:	08 95       	ret

000000d4 <_Z11I2CDataReadb>:
      d4:	88 23       	and	r24, r24
      d6:	31 f0       	breq	.+12     	; 0xe4 <_Z11I2CDataReadb+0x10>
      d8:	84 ec       	ldi	r24, 0xC4	; 196
      da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
      de:	ec eb       	ldi	r30, 0xBC	; 188
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	04 c0       	rjmp	.+8      	; 0xec <_Z11I2CDataReadb+0x18>
      e4:	84 e8       	ldi	r24, 0x84	; 132
      e6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
      ea:	f9 cf       	rjmp	.-14     	; 0xde <_Z11I2CDataReadb+0xa>
      ec:	80 81       	ld	r24, Z
      ee:	88 23       	and	r24, r24
      f0:	ec f7       	brge	.-6      	; 0xec <_Z11I2CDataReadb+0x18>
      f2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
      f6:	08 95       	ret

000000f8 <_Z7I2CStopv>:
      f8:	ec eb       	ldi	r30, 0xBC	; 188
      fa:	f0 e0       	ldi	r31, 0x00	; 0
      fc:	84 e9       	ldi	r24, 0x94	; 148
      fe:	80 83       	st	Z, r24
     100:	8a e0       	ldi	r24, 0x0A	; 10
     102:	8a 95       	dec	r24
     104:	f1 f7       	brne	.-4      	; 0x102 <_Z7I2CStopv+0xa>
     106:	00 c0       	rjmp	.+0      	; 0x108 <_Z7I2CStopv+0x10>
     108:	85 ec       	ldi	r24, 0xC5	; 197
     10a:	80 83       	st	Z, r24
     10c:	08 95       	ret

0000010e <_Z8I2CPurgeh>:
     10e:	98 e2       	ldi	r25, 0x28	; 40
     110:	9a 95       	dec	r25
     112:	f1 f7       	brne	.-4      	; 0x110 <_Z8I2CPurgeh+0x2>
     114:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     118:	3d 9a       	sbi	0x07, 5	; 7
     11a:	90 e0       	ldi	r25, 0x00	; 0
     11c:	ac 01       	movw	r20, r24
     11e:	44 0f       	add	r20, r20
     120:	55 1f       	adc	r21, r21
     122:	44 0f       	add	r20, r20
     124:	55 1f       	adc	r21, r21
     126:	44 0f       	add	r20, r20
     128:	55 1f       	adc	r21, r21
     12a:	48 0f       	add	r20, r24
     12c:	59 1f       	adc	r21, r25
     12e:	14 16       	cp	r1, r20
     130:	15 06       	cpc	r1, r21
     132:	9c f5       	brge	.+102    	; 0x19a <_Z8I2CPurgeh+0x8c>
     134:	20 e0       	ldi	r18, 0x00	; 0
     136:	30 e0       	ldi	r19, 0x00	; 0
     138:	e8 eb       	ldi	r30, 0xB8	; 184
     13a:	f0 e0       	ldi	r31, 0x00	; 0
     13c:	45 9a       	sbi	0x08, 5	; 8
     13e:	90 81       	ld	r25, Z
     140:	90 32       	cpi	r25, 0x20	; 32
     142:	29 f4       	brne	.+10     	; 0x14e <_Z8I2CPurgeh+0x40>
     144:	8a e4       	ldi	r24, 0x4A	; 74
     146:	8a 95       	dec	r24
     148:	f1 f7       	brne	.-4      	; 0x146 <_Z8I2CPurgeh+0x38>
     14a:	00 c0       	rjmp	.+0      	; 0x14c <_Z8I2CPurgeh+0x3e>
     14c:	0c c0       	rjmp	.+24     	; 0x166 <_Z8I2CPurgeh+0x58>
     14e:	90 81       	ld	r25, Z
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	29 f4       	brne	.+10     	; 0x15e <_Z8I2CPurgeh+0x50>
     154:	92 e1       	ldi	r25, 0x12	; 18
     156:	9a 95       	dec	r25
     158:	f1 f7       	brne	.-4      	; 0x156 <_Z8I2CPurgeh+0x48>
     15a:	00 c0       	rjmp	.+0      	; 0x15c <_Z8I2CPurgeh+0x4e>
     15c:	04 c0       	rjmp	.+8      	; 0x166 <_Z8I2CPurgeh+0x58>
     15e:	8a e4       	ldi	r24, 0x4A	; 74
     160:	8a 95       	dec	r24
     162:	f1 f7       	brne	.-4      	; 0x160 <_Z8I2CPurgeh+0x52>
     164:	00 c0       	rjmp	.+0      	; 0x166 <_Z8I2CPurgeh+0x58>
     166:	45 98       	cbi	0x08, 5	; 8
     168:	90 81       	ld	r25, Z
     16a:	90 32       	cpi	r25, 0x20	; 32
     16c:	29 f4       	brne	.+10     	; 0x178 <_Z8I2CPurgeh+0x6a>
     16e:	9a e4       	ldi	r25, 0x4A	; 74
     170:	9a 95       	dec	r25
     172:	f1 f7       	brne	.-4      	; 0x170 <_Z8I2CPurgeh+0x62>
     174:	00 c0       	rjmp	.+0      	; 0x176 <_Z8I2CPurgeh+0x68>
     176:	0c c0       	rjmp	.+24     	; 0x190 <_Z8I2CPurgeh+0x82>
     178:	90 81       	ld	r25, Z
     17a:	92 30       	cpi	r25, 0x02	; 2
     17c:	29 f4       	brne	.+10     	; 0x188 <_Z8I2CPurgeh+0x7a>
     17e:	82 e1       	ldi	r24, 0x12	; 18
     180:	8a 95       	dec	r24
     182:	f1 f7       	brne	.-4      	; 0x180 <_Z8I2CPurgeh+0x72>
     184:	00 c0       	rjmp	.+0      	; 0x186 <_Z8I2CPurgeh+0x78>
     186:	04 c0       	rjmp	.+8      	; 0x190 <_Z8I2CPurgeh+0x82>
     188:	9a e4       	ldi	r25, 0x4A	; 74
     18a:	9a 95       	dec	r25
     18c:	f1 f7       	brne	.-4      	; 0x18a <_Z8I2CPurgeh+0x7c>
     18e:	00 c0       	rjmp	.+0      	; 0x190 <_Z8I2CPurgeh+0x82>
     190:	2f 5f       	subi	r18, 0xFF	; 255
     192:	3f 4f       	sbci	r19, 0xFF	; 255
     194:	24 17       	cp	r18, r20
     196:	35 07       	cpc	r19, r21
     198:	89 f6       	brne	.-94     	; 0x13c <_Z8I2CPurgeh+0x2e>
     19a:	80 e3       	ldi	r24, 0x30	; 48
     19c:	88 b9       	out	0x08, r24	; 8
     19e:	8a e6       	ldi	r24, 0x6A	; 106
     1a0:	8a 95       	dec	r24
     1a2:	f1 f7       	brne	.-4      	; 0x1a0 <_Z8I2CPurgeh+0x92>
     1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <_Z8I2CPurgeh+0x98>
     1a6:	08 95       	ret

000001a8 <_Z11setUpInitalv>:
     1a8:	8f e1       	ldi	r24, 0x1F	; 31
     1aa:	9e e4       	ldi	r25, 0x4E	; 78
     1ac:	01 97       	sbiw	r24, 0x01	; 1
     1ae:	f1 f7       	brne	.-4      	; 0x1ac <_Z11setUpInitalv+0x4>
     1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <_Z11setUpInitalv+0xa>
     1b2:	00 00       	nop
     1b4:	82 e0       	ldi	r24, 0x02	; 2
     1b6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     1ba:	52 9a       	sbi	0x0a, 2	; 10
     1bc:	5a 98       	cbi	0x0b, 2	; 11
     1be:	87 b1       	in	r24, 0x07	; 7
     1c0:	80 7f       	andi	r24, 0xF0	; 240
     1c2:	87 b9       	out	0x07, r24	; 7
     1c4:	18 b8       	out	0x08, r1	; 8
     1c6:	88 b1       	in	r24, 0x08	; 8
     1c8:	8f 60       	ori	r24, 0x0F	; 15
     1ca:	88 b9       	out	0x08, r24	; 8
     1cc:	82 e4       	ldi	r24, 0x42	; 66
     1ce:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7e00ba>
     1d2:	85 ec       	ldi	r24, 0xC5	; 197
     1d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     1d8:	08 95       	ret

000001da <_Z8setUpADCv>:
     1da:	e4 e6       	ldi	r30, 0x64	; 100
     1dc:	f0 e0       	ldi	r31, 0x00	; 0
     1de:	80 81       	ld	r24, Z
     1e0:	8e 7f       	andi	r24, 0xFE	; 254
     1e2:	80 83       	st	Z, r24
     1e4:	86 e6       	ldi	r24, 0x66	; 102
     1e6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     1ea:	86 e8       	ldi	r24, 0x86	; 134
     1ec:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     1f0:	08 95       	ret

000001f2 <_Z8setUpIMUv>:
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	0e 94 87 00 	call	0x10e	; 0x10e <_Z8I2CPurgeh>
     1f8:	86 ed       	ldi	r24, 0xD6	; 214
     1fa:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
     1fe:	80 e1       	ldi	r24, 0x10	; 16
     200:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     204:	83 e9       	ldi	r24, 0x93	; 147
     206:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     20a:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z7I2CStopv>
     20e:	8c e3       	ldi	r24, 0x3C	; 60
     210:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
     214:	80 e2       	ldi	r24, 0x20	; 32
     216:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     21a:	8c e7       	ldi	r24, 0x7C	; 124
     21c:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     220:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z7I2CStopv>
     224:	8c e3       	ldi	r24, 0x3C	; 60
     226:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
     22a:	82 e2       	ldi	r24, 0x22	; 34
     22c:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     230:	80 e0       	ldi	r24, 0x00	; 0
     232:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     236:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z7I2CStopv>
     23a:	08 95       	ret

0000023c <_Z14IRsensorSelecth>:
     23c:	cf 93       	push	r28
     23e:	c8 2f       	mov	r28, r24
     240:	8e ee       	ldi	r24, 0xEE	; 238
     242:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
     246:	c4 30       	cpi	r28, 0x04	; 4
     248:	91 f0       	breq	.+36     	; 0x26e <_Z14IRsensorSelecth+0x32>
     24a:	28 f4       	brcc	.+10     	; 0x256 <_Z14IRsensorSelecth+0x1a>
     24c:	c1 30       	cpi	r28, 0x01	; 1
     24e:	b9 f0       	breq	.+46     	; 0x27e <_Z14IRsensorSelecth+0x42>
     250:	c2 30       	cpi	r28, 0x02	; 2
     252:	89 f0       	breq	.+34     	; 0x276 <_Z14IRsensorSelecth+0x3a>
     254:	17 c0       	rjmp	.+46     	; 0x284 <_Z14IRsensorSelecth+0x48>
     256:	c8 30       	cpi	r28, 0x08	; 8
     258:	31 f0       	breq	.+12     	; 0x266 <_Z14IRsensorSelecth+0x2a>
     25a:	c0 31       	cpi	r28, 0x10	; 16
     25c:	99 f4       	brne	.+38     	; 0x284 <_Z14IRsensorSelecth+0x48>
     25e:	80 e1       	ldi	r24, 0x10	; 16
     260:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     264:	0f c0       	rjmp	.+30     	; 0x284 <_Z14IRsensorSelecth+0x48>
     266:	88 e0       	ldi	r24, 0x08	; 8
     268:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     26c:	0b c0       	rjmp	.+22     	; 0x284 <_Z14IRsensorSelecth+0x48>
     26e:	84 e0       	ldi	r24, 0x04	; 4
     270:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     274:	07 c0       	rjmp	.+14     	; 0x284 <_Z14IRsensorSelecth+0x48>
     276:	82 e0       	ldi	r24, 0x02	; 2
     278:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     27c:	03 c0       	rjmp	.+6      	; 0x284 <_Z14IRsensorSelecth+0x48>
     27e:	81 e0       	ldi	r24, 0x01	; 1
     280:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     284:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z7I2CStopv>
     288:	cf 91       	pop	r28
     28a:	08 95       	ret

0000028c <_Z7setupIRv>:
     28c:	cf 93       	push	r28
     28e:	df 93       	push	r29
     290:	81 e0       	ldi	r24, 0x01	; 1
     292:	0e 94 87 00 	call	0x10e	; 0x10e <_Z8I2CPurgeh>
     296:	c0 e0       	ldi	r28, 0x00	; 0
     298:	d0 e0       	ldi	r29, 0x00	; 0
     29a:	c1 30       	cpi	r28, 0x01	; 1
     29c:	d1 05       	cpc	r29, r1
     29e:	49 f0       	breq	.+18     	; 0x2b2 <_Z7setupIRv+0x26>
     2a0:	c2 30       	cpi	r28, 0x02	; 2
     2a2:	d1 05       	cpc	r29, r1
     2a4:	51 f0       	breq	.+20     	; 0x2ba <_Z7setupIRv+0x2e>
     2a6:	20 97       	sbiw	r28, 0x00	; 0
     2a8:	59 f4       	brne	.+22     	; 0x2c0 <_Z7setupIRv+0x34>
     2aa:	81 e0       	ldi	r24, 0x01	; 1
     2ac:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z14IRsensorSelecth>
     2b0:	07 c0       	rjmp	.+14     	; 0x2c0 <_Z7setupIRv+0x34>
     2b2:	84 e0       	ldi	r24, 0x04	; 4
     2b4:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z14IRsensorSelecth>
     2b8:	03 c0       	rjmp	.+6      	; 0x2c0 <_Z7setupIRv+0x34>
     2ba:	80 e1       	ldi	r24, 0x10	; 16
     2bc:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z14IRsensorSelecth>
     2c0:	82 e0       	ldi	r24, 0x02	; 2
     2c2:	0e 94 87 00 	call	0x10e	; 0x10e <_Z8I2CPurgeh>
     2c6:	86 e2       	ldi	r24, 0x26	; 38
     2c8:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
     2cc:	82 e8       	ldi	r24, 0x82	; 130
     2ce:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     2d2:	87 e0       	ldi	r24, 0x07	; 7
     2d4:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     2d8:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z7I2CStopv>
     2dc:	8a e1       	ldi	r24, 0x1A	; 26
     2de:	8a 95       	dec	r24
     2e0:	f1 f7       	brne	.-4      	; 0x2de <_Z7setupIRv+0x52>
     2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <_Z7setupIRv+0x58>
     2e4:	86 e2       	ldi	r24, 0x26	; 38
     2e6:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
     2ea:	83 e8       	ldi	r24, 0x83	; 131
     2ec:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     2f0:	84 e1       	ldi	r24, 0x14	; 20
     2f2:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     2f6:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z7I2CStopv>
     2fa:	8a e1       	ldi	r24, 0x1A	; 26
     2fc:	8a 95       	dec	r24
     2fe:	f1 f7       	brne	.-4      	; 0x2fc <_Z7setupIRv+0x70>
     300:	00 c0       	rjmp	.+0      	; 0x302 <_Z7setupIRv+0x76>
     302:	86 e2       	ldi	r24, 0x26	; 38
     304:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
     308:	80 e8       	ldi	r24, 0x80	; 128
     30a:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     30e:	83 e0       	ldi	r24, 0x03	; 3
     310:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     314:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z7I2CStopv>
     318:	8a e1       	ldi	r24, 0x1A	; 26
     31a:	8a 95       	dec	r24
     31c:	f1 f7       	brne	.-4      	; 0x31a <_Z7setupIRv+0x8e>
     31e:	00 c0       	rjmp	.+0      	; 0x320 <_Z7setupIRv+0x94>
     320:	21 96       	adiw	r28, 0x01	; 1
     322:	c3 30       	cpi	r28, 0x03	; 3
     324:	d1 05       	cpc	r29, r1
     326:	09 f0       	breq	.+2      	; 0x32a <_Z7setupIRv+0x9e>
     328:	b8 cf       	rjmp	.-144    	; 0x29a <_Z7setupIRv+0xe>
     32a:	df 91       	pop	r29
     32c:	cf 91       	pop	r28
     32e:	08 95       	ret

00000330 <_Z6readIRh>:
     330:	cf 93       	push	r28
     332:	df 93       	push	r29
     334:	0e 94 1e 01 	call	0x23c	; 0x23c <_Z14IRsensorSelecth>
     338:	86 e2       	ldi	r24, 0x26	; 38
     33a:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
     33e:	87 e8       	ldi	r24, 0x87	; 135
     340:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     344:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z7I2CStopv>
     348:	8a e1       	ldi	r24, 0x1A	; 26
     34a:	8a 95       	dec	r24
     34c:	f1 f7       	brne	.-4      	; 0x34a <_Z6readIRh+0x1a>
     34e:	00 c0       	rjmp	.+0      	; 0x350 <_Z6readIRh+0x20>
     350:	87 e2       	ldi	r24, 0x27	; 39
     352:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z11I2CDataReadb>
     35c:	c8 2f       	mov	r28, r24
     35e:	80 e0       	ldi	r24, 0x00	; 0
     360:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z11I2CDataReadb>
     364:	d8 2f       	mov	r29, r24
     366:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z7I2CStopv>
     36a:	8a e1       	ldi	r24, 0x1A	; 26
     36c:	8a 95       	dec	r24
     36e:	f1 f7       	brne	.-4      	; 0x36c <_Z6readIRh+0x3c>
     370:	00 c0       	rjmp	.+0      	; 0x372 <_Z6readIRh+0x42>
     372:	8c 2f       	mov	r24, r28
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	98 2f       	mov	r25, r24
     378:	88 27       	eor	r24, r24
     37a:	8d 0f       	add	r24, r29
     37c:	91 1d       	adc	r25, r1
     37e:	df 91       	pop	r29
     380:	cf 91       	pop	r28
     382:	08 95       	ret

00000384 <_Z9readGyroZv>:
     384:	cf 93       	push	r28
     386:	df 93       	push	r29
     388:	86 ed       	ldi	r24, 0xD6	; 214
     38a:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
     38e:	8c e1       	ldi	r24, 0x1C	; 28
     390:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
     394:	87 ed       	ldi	r24, 0xD7	; 215
     396:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
     39a:	81 e0       	ldi	r24, 0x01	; 1
     39c:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z11I2CDataReadb>
     3a0:	d8 2f       	mov	r29, r24
     3a2:	80 e0       	ldi	r24, 0x00	; 0
     3a4:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z11I2CDataReadb>
     3a8:	c8 2f       	mov	r28, r24
     3aa:	0e 94 7c 00 	call	0xf8	; 0xf8 <_Z7I2CStopv>
     3ae:	8c 2f       	mov	r24, r28
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	98 2f       	mov	r25, r24
     3b4:	88 27       	eor	r24, r24
     3b6:	8d 0f       	add	r24, r29
     3b8:	91 1d       	adc	r25, r1
     3ba:	df 91       	pop	r29
     3bc:	cf 91       	pop	r28
     3be:	08 95       	ret

000003c0 <_Z4beepv>:
     3c0:	54 9a       	sbi	0x0a, 4	; 10
     3c2:	5c 9a       	sbi	0x0b, 4	; 11
     3c4:	2f ef       	ldi	r18, 0xFF	; 255
     3c6:	80 e7       	ldi	r24, 0x70	; 112
     3c8:	92 e0       	ldi	r25, 0x02	; 2
     3ca:	21 50       	subi	r18, 0x01	; 1
     3cc:	80 40       	sbci	r24, 0x00	; 0
     3ce:	90 40       	sbci	r25, 0x00	; 0
     3d0:	e1 f7       	brne	.-8      	; 0x3ca <_Z4beepv+0xa>
     3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <_Z4beepv+0x14>
     3d4:	00 00       	nop
     3d6:	5c 98       	cbi	0x0b, 4	; 11
     3d8:	08 95       	ret

000003da <_Z14pidCalculationiiP10PID_STRUCT>:
     3da:	8f 92       	push	r8
     3dc:	9f 92       	push	r9
     3de:	af 92       	push	r10
     3e0:	bf 92       	push	r11
     3e2:	cf 92       	push	r12
     3e4:	df 92       	push	r13
     3e6:	ef 92       	push	r14
     3e8:	ff 92       	push	r15
     3ea:	cf 93       	push	r28
     3ec:	df 93       	push	r29
     3ee:	ea 01       	movw	r28, r20
     3f0:	86 1b       	sub	r24, r22
     3f2:	97 0b       	sbc	r25, r23
     3f4:	4c 01       	movw	r8, r24
     3f6:	99 0f       	add	r25, r25
     3f8:	aa 08       	sbc	r10, r10
     3fa:	bb 08       	sbc	r11, r11
     3fc:	c5 01       	movw	r24, r10
     3fe:	b4 01       	movw	r22, r8
     400:	0e 94 83 09 	call	0x1306	; 0x1306 <__floatsisf>
     404:	28 81       	ld	r18, Y
     406:	39 81       	ldd	r19, Y+1	; 0x01
     408:	4a 81       	ldd	r20, Y+2	; 0x02
     40a:	5b 81       	ldd	r21, Y+3	; 0x03
     40c:	0e 94 0f 0a 	call	0x141e	; 0x141e <__mulsf3>
     410:	0e 94 4b 09 	call	0x1296	; 0x1296 <__fixsfsi>
     414:	6b 01       	movw	r12, r22
     416:	7c 01       	movw	r14, r24
     418:	88 85       	ldd	r24, Y+8	; 0x08
     41a:	99 85       	ldd	r25, Y+9	; 0x09
     41c:	aa 85       	ldd	r26, Y+10	; 0x0a
     41e:	bb 85       	ldd	r27, Y+11	; 0x0b
     420:	bc 01       	movw	r22, r24
     422:	cd 01       	movw	r24, r26
     424:	68 0d       	add	r22, r8
     426:	79 1d       	adc	r23, r9
     428:	8a 1d       	adc	r24, r10
     42a:	9b 1d       	adc	r25, r11
     42c:	68 87       	std	Y+8, r22	; 0x08
     42e:	79 87       	std	Y+9, r23	; 0x09
     430:	8a 87       	std	Y+10, r24	; 0x0a
     432:	9b 87       	std	Y+11, r25	; 0x0b
     434:	0e 94 83 09 	call	0x1306	; 0x1306 <__floatsisf>
     438:	2c 81       	ldd	r18, Y+4	; 0x04
     43a:	3d 81       	ldd	r19, Y+5	; 0x05
     43c:	4e 81       	ldd	r20, Y+6	; 0x06
     43e:	5f 81       	ldd	r21, Y+7	; 0x07
     440:	0e 94 0f 0a 	call	0x141e	; 0x141e <__mulsf3>
     444:	0e 94 4b 09 	call	0x1296	; 0x1296 <__fixsfsi>
     448:	61 15       	cp	r22, r1
     44a:	20 e8       	ldi	r18, 0x80	; 128
     44c:	72 07       	cpc	r23, r18
     44e:	81 05       	cpc	r24, r1
     450:	91 05       	cpc	r25, r1
     452:	64 f4       	brge	.+24     	; 0x46c <__FUSE_REGION_LENGTH__+0x6c>
     454:	61 30       	cpi	r22, 0x01	; 1
     456:	20 e8       	ldi	r18, 0x80	; 128
     458:	72 07       	cpc	r23, r18
     45a:	2f ef       	ldi	r18, 0xFF	; 255
     45c:	82 07       	cpc	r24, r18
     45e:	92 07       	cpc	r25, r18
     460:	4c f4       	brge	.+18     	; 0x474 <__FUSE_REGION_LENGTH__+0x74>
     462:	62 e0       	ldi	r22, 0x02	; 2
     464:	70 e8       	ldi	r23, 0x80	; 128
     466:	8f ef       	ldi	r24, 0xFF	; 255
     468:	9f ef       	ldi	r25, 0xFF	; 255
     46a:	04 c0       	rjmp	.+8      	; 0x474 <__FUSE_REGION_LENGTH__+0x74>
     46c:	6e ef       	ldi	r22, 0xFE	; 254
     46e:	7f e7       	ldi	r23, 0x7F	; 127
     470:	80 e0       	ldi	r24, 0x00	; 0
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	0d 2c       	mov	r0, r13
     476:	00 0c       	add	r0, r0
     478:	ee 08       	sbc	r14, r14
     47a:	ff 08       	sbc	r15, r15
     47c:	dc 01       	movw	r26, r24
     47e:	cb 01       	movw	r24, r22
     480:	8c 0d       	add	r24, r12
     482:	9d 1d       	adc	r25, r13
     484:	ae 1d       	adc	r26, r14
     486:	bf 1d       	adc	r27, r15
     488:	81 38       	cpi	r24, 0x81	; 129
     48a:	2f ef       	ldi	r18, 0xFF	; 255
     48c:	92 07       	cpc	r25, r18
     48e:	a2 07       	cpc	r26, r18
     490:	b2 07       	cpc	r27, r18
     492:	24 f4       	brge	.+8      	; 0x49c <__FUSE_REGION_LENGTH__+0x9c>
     494:	81 e8       	ldi	r24, 0x81	; 129
     496:	9f ef       	ldi	r25, 0xFF	; 255
     498:	af ef       	ldi	r26, 0xFF	; 255
     49a:	bf ef       	ldi	r27, 0xFF	; 255
     49c:	80 38       	cpi	r24, 0x80	; 128
     49e:	91 05       	cpc	r25, r1
     4a0:	a1 05       	cpc	r26, r1
     4a2:	b1 05       	cpc	r27, r1
     4a4:	24 f0       	brlt	.+8      	; 0x4ae <__FUSE_REGION_LENGTH__+0xae>
     4a6:	8f e7       	ldi	r24, 0x7F	; 127
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	a0 e0       	ldi	r26, 0x00	; 0
     4ac:	b0 e0       	ldi	r27, 0x00	; 0
     4ae:	df 91       	pop	r29
     4b0:	cf 91       	pop	r28
     4b2:	ff 90       	pop	r15
     4b4:	ef 90       	pop	r14
     4b6:	df 90       	pop	r13
     4b8:	cf 90       	pop	r12
     4ba:	bf 90       	pop	r11
     4bc:	af 90       	pop	r10
     4be:	9f 90       	pop	r9
     4c0:	8f 90       	pop	r8
     4c2:	08 95       	ret

000004c4 <_Z14motorSpeedLefta>:
     4c4:	68 2f       	mov	r22, r24
     4c6:	84 b1       	in	r24, 0x04	; 4
     4c8:	86 60       	ori	r24, 0x06	; 6
     4ca:	84 b9       	out	0x04, r24	; 4
     4cc:	83 e0       	ldi	r24, 0x03	; 3
     4ce:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     4d2:	66 23       	and	r22, r22
     4d4:	c4 f4       	brge	.+48     	; 0x506 <_Z14motorSpeedLefta+0x42>
     4d6:	61 95       	neg	r22
     4d8:	81 e8       	ldi	r24, 0x81	; 129
     4da:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     4de:	06 2e       	mov	r0, r22
     4e0:	00 0c       	add	r0, r0
     4e2:	77 0b       	sbc	r23, r23
     4e4:	88 0b       	sbc	r24, r24
     4e6:	99 0b       	sbc	r25, r25
     4e8:	0e 94 83 09 	call	0x1306	; 0x1306 <__floatsisf>
     4ec:	23 e3       	ldi	r18, 0x33	; 51
     4ee:	33 e3       	ldi	r19, 0x33	; 51
     4f0:	43 e2       	ldi	r20, 0x23	; 35
     4f2:	50 e4       	ldi	r21, 0x40	; 64
     4f4:	0e 94 0f 0a 	call	0x141e	; 0x141e <__mulsf3>
     4f8:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__fixunssfsi>
     4fc:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     500:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     504:	08 95       	ret
     506:	61 11       	cpse	r22, r1
     508:	04 c0       	rjmp	.+8      	; 0x512 <_Z14motorSpeedLefta+0x4e>
     50a:	81 e0       	ldi	r24, 0x01	; 1
     50c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     510:	08 95       	ret
     512:	81 e2       	ldi	r24, 0x21	; 33
     514:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     518:	06 2e       	mov	r0, r22
     51a:	00 0c       	add	r0, r0
     51c:	77 0b       	sbc	r23, r23
     51e:	88 0b       	sbc	r24, r24
     520:	99 0b       	sbc	r25, r25
     522:	0e 94 83 09 	call	0x1306	; 0x1306 <__floatsisf>
     526:	23 e3       	ldi	r18, 0x33	; 51
     528:	33 e3       	ldi	r19, 0x33	; 51
     52a:	43 e2       	ldi	r20, 0x23	; 35
     52c:	50 e4       	ldi	r21, 0x40	; 64
     52e:	0e 94 0f 0a 	call	0x141e	; 0x141e <__mulsf3>
     532:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__fixunssfsi>
     536:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     53a:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     53e:	08 95       	ret

00000540 <_Z15motorSpeedRighta>:
     540:	68 2f       	mov	r22, r24
     542:	8a b1       	in	r24, 0x0a	; 10
     544:	80 66       	ori	r24, 0x60	; 96
     546:	8a b9       	out	0x0a, r24	; 10
     548:	83 e0       	ldi	r24, 0x03	; 3
     54a:	85 bd       	out	0x25, r24	; 37
     54c:	66 23       	and	r22, r22
     54e:	a4 f4       	brge	.+40     	; 0x578 <_Z15motorSpeedRighta+0x38>
     550:	61 95       	neg	r22
     552:	81 e2       	ldi	r24, 0x21	; 33
     554:	84 bd       	out	0x24, r24	; 36
     556:	06 2e       	mov	r0, r22
     558:	00 0c       	add	r0, r0
     55a:	77 0b       	sbc	r23, r23
     55c:	88 0b       	sbc	r24, r24
     55e:	99 0b       	sbc	r25, r25
     560:	0e 94 83 09 	call	0x1306	; 0x1306 <__floatsisf>
     564:	23 e3       	ldi	r18, 0x33	; 51
     566:	33 e3       	ldi	r19, 0x33	; 51
     568:	43 e2       	ldi	r20, 0x23	; 35
     56a:	50 e4       	ldi	r21, 0x40	; 64
     56c:	0e 94 0f 0a 	call	0x141e	; 0x141e <__mulsf3>
     570:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__fixunssfsi>
     574:	68 bd       	out	0x28, r22	; 40
     576:	08 95       	ret
     578:	61 11       	cpse	r22, r1
     57a:	03 c0       	rjmp	.+6      	; 0x582 <_Z15motorSpeedRighta+0x42>
     57c:	81 e0       	ldi	r24, 0x01	; 1
     57e:	84 bd       	out	0x24, r24	; 36
     580:	08 95       	ret
     582:	81 e8       	ldi	r24, 0x81	; 129
     584:	84 bd       	out	0x24, r24	; 36
     586:	06 2e       	mov	r0, r22
     588:	00 0c       	add	r0, r0
     58a:	77 0b       	sbc	r23, r23
     58c:	88 0b       	sbc	r24, r24
     58e:	99 0b       	sbc	r25, r25
     590:	0e 94 83 09 	call	0x1306	; 0x1306 <__floatsisf>
     594:	23 e3       	ldi	r18, 0x33	; 51
     596:	33 e3       	ldi	r19, 0x33	; 51
     598:	43 e2       	ldi	r20, 0x23	; 35
     59a:	50 e4       	ldi	r21, 0x40	; 64
     59c:	0e 94 0f 0a 	call	0x141e	; 0x141e <__mulsf3>
     5a0:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__fixunssfsi>
     5a4:	67 bd       	out	0x27, r22	; 39
     5a6:	08 95       	ret

000005a8 <_Z14motorSpeedBothaa>:
     5a8:	cf 93       	push	r28
     5aa:	c6 2f       	mov	r28, r22
     5ac:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_Z14motorSpeedLefta>
     5b0:	8c 2f       	mov	r24, r28
     5b2:	0e 94 a0 02 	call	0x540	; 0x540 <_Z15motorSpeedRighta>
     5b6:	cf 91       	pop	r28
     5b8:	08 95       	ret

000005ba <_Z14motorSpeedLefthb>:
     5ba:	94 b1       	in	r25, 0x04	; 4
     5bc:	96 60       	ori	r25, 0x06	; 6
     5be:	94 b9       	out	0x04, r25	; 4
     5c0:	93 e0       	ldi	r25, 0x03	; 3
     5c2:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     5c6:	66 23       	and	r22, r22
     5c8:	49 f0       	breq	.+18     	; 0x5dc <_Z14motorSpeedLefthb+0x22>
     5ca:	91 e8       	ldi	r25, 0x81	; 129
     5cc:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     5d6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     5da:	08 95       	ret
     5dc:	81 11       	cpse	r24, r1
     5de:	04 c0       	rjmp	.+8      	; 0x5e8 <_Z14motorSpeedLefthb+0x2e>
     5e0:	81 e0       	ldi	r24, 0x01	; 1
     5e2:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     5e6:	08 95       	ret
     5e8:	91 e2       	ldi	r25, 0x21	; 33
     5ea:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     5f4:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     5f8:	08 95       	ret

000005fa <_Z15motorSpeedRighthb>:
     5fa:	9a b1       	in	r25, 0x0a	; 10
     5fc:	90 66       	ori	r25, 0x60	; 96
     5fe:	9a b9       	out	0x0a, r25	; 10
     600:	93 e0       	ldi	r25, 0x03	; 3
     602:	95 bd       	out	0x25, r25	; 37
     604:	66 23       	and	r22, r22
     606:	21 f0       	breq	.+8      	; 0x610 <_Z15motorSpeedRighthb+0x16>
     608:	91 e2       	ldi	r25, 0x21	; 33
     60a:	94 bd       	out	0x24, r25	; 36
     60c:	88 bd       	out	0x28, r24	; 40
     60e:	08 95       	ret
     610:	81 11       	cpse	r24, r1
     612:	03 c0       	rjmp	.+6      	; 0x61a <_Z15motorSpeedRighthb+0x20>
     614:	81 e0       	ldi	r24, 0x01	; 1
     616:	84 bd       	out	0x24, r24	; 36
     618:	08 95       	ret
     61a:	91 e8       	ldi	r25, 0x81	; 129
     61c:	94 bd       	out	0x24, r25	; 36
     61e:	87 bd       	out	0x27, r24	; 39
     620:	08 95       	ret

00000622 <_Z16moveStraightGyrojb>:
     622:	2f 92       	push	r2
     624:	3f 92       	push	r3
     626:	4f 92       	push	r4
     628:	5f 92       	push	r5
     62a:	6f 92       	push	r6
     62c:	7f 92       	push	r7
     62e:	8f 92       	push	r8
     630:	9f 92       	push	r9
     632:	af 92       	push	r10
     634:	bf 92       	push	r11
     636:	cf 92       	push	r12
     638:	df 92       	push	r13
     63a:	ef 92       	push	r14
     63c:	ff 92       	push	r15
     63e:	0f 93       	push	r16
     640:	1f 93       	push	r17
     642:	cf 93       	push	r28
     644:	df 93       	push	r29
     646:	cd b7       	in	r28, 0x3d	; 61
     648:	de b7       	in	r29, 0x3e	; 62
     64a:	64 97       	sbiw	r28, 0x14	; 20
     64c:	0f b6       	in	r0, 0x3f	; 63
     64e:	f8 94       	cli
     650:	de bf       	out	0x3e, r29	; 62
     652:	0f be       	out	0x3f, r0	; 63
     654:	cd bf       	out	0x3d, r28	; 61
     656:	2c 01       	movw	r4, r24
     658:	0e 94 c2 01 	call	0x384	; 0x384 <_Z9readGyroZv>
     65c:	4c 01       	movw	r8, r24
     65e:	86 b1       	in	r24, 0x06	; 6
     660:	81 70       	andi	r24, 0x01	; 1
     662:	8b 8b       	std	Y+19, r24	; 0x13
     664:	86 b1       	in	r24, 0x06	; 6
     666:	82 70       	andi	r24, 0x02	; 2
     668:	8c 8b       	std	Y+20, r24	; 0x14
     66a:	8f e8       	ldi	r24, 0x8F	; 143
     66c:	92 ec       	ldi	r25, 0xC2	; 194
     66e:	a5 ef       	ldi	r26, 0xF5	; 245
     670:	bb e3       	ldi	r27, 0x3B	; 59
     672:	89 83       	std	Y+1, r24	; 0x01
     674:	9a 83       	std	Y+2, r25	; 0x02
     676:	ab 83       	std	Y+3, r26	; 0x03
     678:	bc 83       	std	Y+4, r27	; 0x04
     67a:	8f e6       	ldi	r24, 0x6F	; 111
     67c:	92 e1       	ldi	r25, 0x12	; 18
     67e:	a3 e8       	ldi	r26, 0x83	; 131
     680:	ba e3       	ldi	r27, 0x3A	; 58
     682:	8d 83       	std	Y+5, r24	; 0x05
     684:	9e 83       	std	Y+6, r25	; 0x06
     686:	af 83       	std	Y+7, r26	; 0x07
     688:	b8 87       	std	Y+8, r27	; 0x08
     68a:	19 86       	std	Y+9, r1	; 0x09
     68c:	1a 86       	std	Y+10, r1	; 0x0a
     68e:	1b 86       	std	Y+11, r1	; 0x0b
     690:	1c 86       	std	Y+12, r1	; 0x0c
     692:	8e e7       	ldi	r24, 0x7E	; 126
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	9e 87       	std	Y+14, r25	; 0x0e
     698:	8d 87       	std	Y+13, r24	; 0x0d
     69a:	80 ec       	ldi	r24, 0xC0	; 192
     69c:	91 ea       	ldi	r25, 0xA1	; 161
     69e:	af ee       	ldi	r26, 0xEF	; 239
     6a0:	bf e3       	ldi	r27, 0x3F	; 63
     6a2:	8f 87       	std	Y+15, r24	; 0x0f
     6a4:	98 8b       	std	Y+16, r25	; 0x10
     6a6:	a9 8b       	std	Y+17, r26	; 0x11
     6a8:	ba 8b       	std	Y+18, r27	; 0x12
     6aa:	e1 2c       	mov	r14, r1
     6ac:	f1 2c       	mov	r15, r1
     6ae:	31 2c       	mov	r3, r1
     6b0:	0f 2e       	mov	r0, r31
     6b2:	f1 e4       	ldi	r31, 0x41	; 65
     6b4:	2f 2e       	mov	r2, r31
     6b6:	f0 2d       	mov	r31, r0
     6b8:	81 e0       	ldi	r24, 0x01	; 1
     6ba:	0e 94 98 01 	call	0x330	; 0x330 <_Z6readIRh>
     6be:	6c 01       	movw	r12, r24
     6c0:	80 e1       	ldi	r24, 0x10	; 16
     6c2:	0e 94 98 01 	call	0x330	; 0x330 <_Z6readIRh>
     6c6:	5c 01       	movw	r10, r24
     6c8:	0e 94 c2 01 	call	0x384	; 0x384 <_Z9readGyroZv>
     6cc:	bc 01       	movw	r22, r24
     6ce:	68 19       	sub	r22, r8
     6d0:	79 09       	sbc	r23, r9
     6d2:	ae 01       	movw	r20, r28
     6d4:	4f 5f       	subi	r20, 0xFF	; 255
     6d6:	5f 4f       	sbci	r21, 0xFF	; 255
     6d8:	80 e0       	ldi	r24, 0x00	; 0
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	0e 94 ed 01 	call	0x3da	; 0x3da <_Z14pidCalculationiiP10PID_STRUCT>
     6e0:	8c 01       	movw	r16, r24
     6e2:	21 e8       	ldi	r18, 0x81	; 129
     6e4:	c2 16       	cp	r12, r18
     6e6:	2c e0       	ldi	r18, 0x0C	; 12
     6e8:	d2 06       	cpc	r13, r18
     6ea:	e4 f0       	brlt	.+56     	; 0x724 <_Z16moveStraightGyrojb+0x102>
     6ec:	41 e8       	ldi	r20, 0x81	; 129
     6ee:	a4 16       	cp	r10, r20
     6f0:	4c e0       	ldi	r20, 0x0C	; 12
     6f2:	b4 06       	cpc	r11, r20
     6f4:	9c f5       	brge	.+102    	; 0x75c <_Z16moveStraightGyrojb+0x13a>
     6f6:	69 85       	ldd	r22, Y+9	; 0x09
     6f8:	7a 85       	ldd	r23, Y+10	; 0x0a
     6fa:	8b 85       	ldd	r24, Y+11	; 0x0b
     6fc:	9c 85       	ldd	r25, Y+12	; 0x0c
     6fe:	0e 94 83 09 	call	0x1306	; 0x1306 <__floatsisf>
     702:	23 e3       	ldi	r18, 0x33	; 51
     704:	33 e3       	ldi	r19, 0x33	; 51
     706:	43 e3       	ldi	r20, 0x33	; 51
     708:	5f e3       	ldi	r21, 0x3F	; 63
     70a:	0e 94 0f 0a 	call	0x141e	; 0x141e <__mulsf3>
     70e:	0e 94 4b 09 	call	0x1296	; 0x1296 <__fixsfsi>
     712:	69 87       	std	Y+9, r22	; 0x09
     714:	7a 87       	std	Y+10, r23	; 0x0a
     716:	8b 87       	std	Y+11, r24	; 0x0b
     718:	9c 87       	std	Y+12, r25	; 0x0c
     71a:	0f 2e       	mov	r0, r31
     71c:	f6 e0       	ldi	r31, 0x06	; 6
     71e:	df 2e       	mov	r13, r31
     720:	f0 2d       	mov	r31, r0
     722:	1f c0       	rjmp	.+62     	; 0x762 <_Z16moveStraightGyrojb+0x140>
     724:	81 e8       	ldi	r24, 0x81	; 129
     726:	a8 16       	cp	r10, r24
     728:	8c e0       	ldi	r24, 0x0C	; 12
     72a:	b8 06       	cpc	r11, r24
     72c:	cc f0       	brlt	.+50     	; 0x760 <_Z16moveStraightGyrojb+0x13e>
     72e:	69 85       	ldd	r22, Y+9	; 0x09
     730:	7a 85       	ldd	r23, Y+10	; 0x0a
     732:	8b 85       	ldd	r24, Y+11	; 0x0b
     734:	9c 85       	ldd	r25, Y+12	; 0x0c
     736:	0e 94 83 09 	call	0x1306	; 0x1306 <__floatsisf>
     73a:	23 e3       	ldi	r18, 0x33	; 51
     73c:	33 e3       	ldi	r19, 0x33	; 51
     73e:	43 e3       	ldi	r20, 0x33	; 51
     740:	5f e3       	ldi	r21, 0x3F	; 63
     742:	0e 94 0f 0a 	call	0x141e	; 0x141e <__mulsf3>
     746:	0e 94 4b 09 	call	0x1296	; 0x1296 <__fixsfsi>
     74a:	69 87       	std	Y+9, r22	; 0x09
     74c:	7a 87       	std	Y+10, r23	; 0x0a
     74e:	8b 87       	std	Y+11, r24	; 0x0b
     750:	9c 87       	std	Y+12, r25	; 0x0c
     752:	0f 2e       	mov	r0, r31
     754:	fa ef       	ldi	r31, 0xFA	; 250
     756:	df 2e       	mov	r13, r31
     758:	f0 2d       	mov	r31, r0
     75a:	03 c0       	rjmp	.+6      	; 0x762 <_Z16moveStraightGyrojb+0x140>
     75c:	d3 2c       	mov	r13, r3
     75e:	01 c0       	rjmp	.+2      	; 0x762 <_Z16moveStraightGyrojb+0x140>
     760:	d3 2c       	mov	r13, r3
     762:	c8 01       	movw	r24, r16
     764:	8f 5b       	subi	r24, 0xBF	; 191
     766:	9f 4f       	sbci	r25, 0xFF	; 255
     768:	83 38       	cpi	r24, 0x83	; 131
     76a:	91 05       	cpc	r25, r1
     76c:	24 f4       	brge	.+8      	; 0x776 <_Z16moveStraightGyrojb+0x154>
     76e:	99 23       	and	r25, r25
     770:	24 f4       	brge	.+8      	; 0x77a <_Z16moveStraightGyrojb+0x158>
     772:	0f eb       	ldi	r16, 0xBF	; 191
     774:	02 c0       	rjmp	.+4      	; 0x77a <_Z16moveStraightGyrojb+0x158>
     776:	01 e4       	ldi	r16, 0x41	; 65
     778:	10 e0       	ldi	r17, 0x00	; 0
     77a:	82 2d       	mov	r24, r2
     77c:	8d 19       	sub	r24, r13
     77e:	63 2d       	mov	r22, r3
     780:	80 1b       	sub	r24, r16
     782:	0e 94 dd 02 	call	0x5ba	; 0x5ba <_Z14motorSpeedLefthb>
     786:	81 e4       	ldi	r24, 0x41	; 65
     788:	8d 0d       	add	r24, r13
     78a:	63 2d       	mov	r22, r3
     78c:	80 0f       	add	r24, r16
     78e:	0e 94 fd 02 	call	0x5fa	; 0x5fa <_Z15motorSpeedRighthb>
     792:	86 b1       	in	r24, 0x06	; 6
     794:	80 fb       	bst	r24, 0
     796:	66 24       	eor	r6, r6
     798:	60 f8       	bld	r6, 0
     79a:	71 2c       	mov	r7, r1
     79c:	2b 89       	ldd	r18, Y+19	; 0x13
     79e:	82 2f       	mov	r24, r18
     7a0:	22 0f       	add	r18, r18
     7a2:	99 0b       	sbc	r25, r25
     7a4:	68 16       	cp	r6, r24
     7a6:	79 06       	cpc	r7, r25
     7a8:	31 f0       	breq	.+12     	; 0x7b6 <_Z16moveStraightGyrojb+0x194>
     7aa:	86 b1       	in	r24, 0x06	; 6
     7ac:	81 70       	andi	r24, 0x01	; 1
     7ae:	8b 8b       	std	Y+19, r24	; 0x13
     7b0:	4f ef       	ldi	r20, 0xFF	; 255
     7b2:	e4 1a       	sub	r14, r20
     7b4:	f4 0a       	sbc	r15, r20
     7b6:	86 b1       	in	r24, 0x06	; 6
     7b8:	82 70       	andi	r24, 0x02	; 2
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	4c 89       	ldd	r20, Y+20	; 0x14
     7be:	24 2f       	mov	r18, r20
     7c0:	44 0f       	add	r20, r20
     7c2:	33 0b       	sbc	r19, r19
     7c4:	82 17       	cp	r24, r18
     7c6:	93 07       	cpc	r25, r19
     7c8:	31 f0       	breq	.+12     	; 0x7d6 <_Z16moveStraightGyrojb+0x1b4>
     7ca:	86 b1       	in	r24, 0x06	; 6
     7cc:	82 70       	andi	r24, 0x02	; 2
     7ce:	8c 8b       	std	Y+20, r24	; 0x14
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	e8 1a       	sub	r14, r24
     7d4:	f8 0a       	sbc	r15, r24
     7d6:	e4 14       	cp	r14, r4
     7d8:	f5 04       	cpc	r15, r5
     7da:	b0 f0       	brcs	.+44     	; 0x808 <_Z16moveStraightGyrojb+0x1e6>
     7dc:	84 e0       	ldi	r24, 0x04	; 4
     7de:	0e 94 98 01 	call	0x330	; 0x330 <_Z6readIRh>
     7e2:	81 3f       	cpi	r24, 0xF1	; 241
     7e4:	2a e0       	ldi	r18, 0x0A	; 10
     7e6:	92 07       	cpc	r25, r18
     7e8:	54 f0       	brlt	.+20     	; 0x7fe <_Z16moveStraightGyrojb+0x1dc>
     7ea:	89 3d       	cpi	r24, 0xD9	; 217
     7ec:	9e 40       	sbci	r25, 0x0E	; 14
     7ee:	64 f0       	brlt	.+24     	; 0x808 <_Z16moveStraightGyrojb+0x1e6>
     7f0:	60 e0       	ldi	r22, 0x00	; 0
     7f2:	80 e0       	ldi	r24, 0x00	; 0
     7f4:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_Z14motorSpeedBothaa>
     7f8:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
     7fc:	0c c0       	rjmp	.+24     	; 0x816 <_Z16moveStraightGyrojb+0x1f4>
     7fe:	60 e0       	ldi	r22, 0x00	; 0
     800:	80 e0       	ldi	r24, 0x00	; 0
     802:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_Z14motorSpeedBothaa>
     806:	07 c0       	rjmp	.+14     	; 0x816 <_Z16moveStraightGyrojb+0x1f4>
     808:	8f e1       	ldi	r24, 0x1F	; 31
     80a:	9e e4       	ldi	r25, 0x4E	; 78
     80c:	01 97       	sbiw	r24, 0x01	; 1
     80e:	f1 f7       	brne	.-4      	; 0x80c <_Z16moveStraightGyrojb+0x1ea>
     810:	00 c0       	rjmp	.+0      	; 0x812 <_Z16moveStraightGyrojb+0x1f0>
     812:	00 00       	nop
     814:	51 cf       	rjmp	.-350    	; 0x6b8 <_Z16moveStraightGyrojb+0x96>
     816:	64 96       	adiw	r28, 0x14	; 20
     818:	0f b6       	in	r0, 0x3f	; 63
     81a:	f8 94       	cli
     81c:	de bf       	out	0x3e, r29	; 62
     81e:	0f be       	out	0x3f, r0	; 63
     820:	cd bf       	out	0x3d, r28	; 61
     822:	df 91       	pop	r29
     824:	cf 91       	pop	r28
     826:	1f 91       	pop	r17
     828:	0f 91       	pop	r16
     82a:	ff 90       	pop	r15
     82c:	ef 90       	pop	r14
     82e:	df 90       	pop	r13
     830:	cf 90       	pop	r12
     832:	bf 90       	pop	r11
     834:	af 90       	pop	r10
     836:	9f 90       	pop	r9
     838:	8f 90       	pop	r8
     83a:	7f 90       	pop	r7
     83c:	6f 90       	pop	r6
     83e:	5f 90       	pop	r5
     840:	4f 90       	pop	r4
     842:	3f 90       	pop	r3
     844:	2f 90       	pop	r2
     846:	08 95       	ret

00000848 <_Z12leftTurnGyrov>:
     848:	9f 92       	push	r9
     84a:	af 92       	push	r10
     84c:	bf 92       	push	r11
     84e:	cf 92       	push	r12
     850:	df 92       	push	r13
     852:	ef 92       	push	r14
     854:	ff 92       	push	r15
     856:	0f 93       	push	r16
     858:	1f 93       	push	r17
     85a:	cf 93       	push	r28
     85c:	df 93       	push	r29
     85e:	cd b7       	in	r28, 0x3d	; 61
     860:	de b7       	in	r29, 0x3e	; 62
     862:	62 97       	sbiw	r28, 0x12	; 18
     864:	0f b6       	in	r0, 0x3f	; 63
     866:	f8 94       	cli
     868:	de bf       	out	0x3e, r29	; 62
     86a:	0f be       	out	0x3f, r0	; 63
     86c:	cd bf       	out	0x3d, r28	; 61
     86e:	0e 94 c2 01 	call	0x384	; 0x384 <_Z9readGyroZv>
     872:	5c 01       	movw	r10, r24
     874:	82 e4       	ldi	r24, 0x42	; 66
     876:	90 e6       	ldi	r25, 0x60	; 96
     878:	a5 ee       	ldi	r26, 0xE5	; 229
     87a:	bb e3       	ldi	r27, 0x3B	; 59
     87c:	89 83       	std	Y+1, r24	; 0x01
     87e:	9a 83       	std	Y+2, r25	; 0x02
     880:	ab 83       	std	Y+3, r26	; 0x03
     882:	bc 83       	std	Y+4, r27	; 0x04
     884:	82 e8       	ldi	r24, 0x82	; 130
     886:	98 ea       	ldi	r25, 0xA8	; 168
     888:	ab ef       	ldi	r26, 0xFB	; 251
     88a:	b7 e3       	ldi	r27, 0x37	; 55
     88c:	8d 83       	std	Y+5, r24	; 0x05
     88e:	9e 83       	std	Y+6, r25	; 0x06
     890:	af 83       	std	Y+7, r26	; 0x07
     892:	b8 87       	std	Y+8, r27	; 0x08
     894:	19 86       	std	Y+9, r1	; 0x09
     896:	1a 86       	std	Y+10, r1	; 0x0a
     898:	1b 86       	std	Y+11, r1	; 0x0b
     89a:	1c 86       	std	Y+12, r1	; 0x0c
     89c:	8e e7       	ldi	r24, 0x7E	; 126
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	9e 87       	std	Y+14, r25	; 0x0e
     8a2:	8d 87       	std	Y+13, r24	; 0x0d
     8a4:	80 e0       	ldi	r24, 0x00	; 0
     8a6:	92 e8       	ldi	r25, 0x82	; 130
     8a8:	af ef       	ldi	r26, 0xFF	; 255
     8aa:	bf e3       	ldi	r27, 0x3F	; 63
     8ac:	8f 87       	std	Y+15, r24	; 0x0f
     8ae:	98 8b       	std	Y+16, r25	; 0x10
     8b0:	a9 8b       	std	Y+17, r26	; 0x11
     8b2:	ba 8b       	std	Y+18, r27	; 0x12
     8b4:	00 e0       	ldi	r16, 0x00	; 0
     8b6:	10 e0       	ldi	r17, 0x00	; 0
     8b8:	0f 2e       	mov	r0, r31
     8ba:	f4 e6       	ldi	r31, 0x64	; 100
     8bc:	cf 2e       	mov	r12, r31
     8be:	d1 2c       	mov	r13, r1
     8c0:	f0 2d       	mov	r31, r0
     8c2:	0f 2e       	mov	r0, r31
     8c4:	fd ef       	ldi	r31, 0xFD	; 253
     8c6:	9f 2e       	mov	r9, r31
     8c8:	f0 2d       	mov	r31, r0
     8ca:	0e 94 c2 01 	call	0x384	; 0x384 <_Z9readGyroZv>
     8ce:	9c 01       	movw	r18, r24
     8d0:	2a 19       	sub	r18, r10
     8d2:	3b 09       	sbc	r19, r11
     8d4:	c9 01       	movw	r24, r18
     8d6:	b6 01       	movw	r22, r12
     8d8:	0e 94 23 09 	call	0x1246	; 0x1246 <__divmodhi4>
     8dc:	06 0f       	add	r16, r22
     8de:	17 1f       	adc	r17, r23
     8e0:	0d 3f       	cpi	r16, 0xFD	; 253
     8e2:	88 e0       	ldi	r24, 0x08	; 8
     8e4:	18 07       	cpc	r17, r24
     8e6:	c4 f4       	brge	.+48     	; 0x918 <__stack+0x19>
     8e8:	ae 01       	movw	r20, r28
     8ea:	4f 5f       	subi	r20, 0xFF	; 255
     8ec:	5f 4f       	sbci	r21, 0xFF	; 255
     8ee:	b9 01       	movw	r22, r18
     8f0:	88 eb       	ldi	r24, 0xB8	; 184
     8f2:	9b e0       	ldi	r25, 0x0B	; 11
     8f4:	0e 94 ed 01 	call	0x3da	; 0x3da <_Z14pidCalculationiiP10PID_STRUCT>
     8f8:	44 96       	adiw	r24, 0x14	; 20
     8fa:	7c 01       	movw	r14, r24
     8fc:	89 2d       	mov	r24, r9
     8fe:	8e 19       	sub	r24, r14
     900:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_Z14motorSpeedLefta>
     904:	8e 2d       	mov	r24, r14
     906:	0e 94 a0 02 	call	0x540	; 0x540 <_Z15motorSpeedRighta>
     90a:	8f e1       	ldi	r24, 0x1F	; 31
     90c:	9e e4       	ldi	r25, 0x4E	; 78
     90e:	01 97       	sbiw	r24, 0x01	; 1
     910:	f1 f7       	brne	.-4      	; 0x90e <__stack+0xf>
     912:	00 c0       	rjmp	.+0      	; 0x914 <__stack+0x15>
     914:	00 00       	nop
     916:	d9 cf       	rjmp	.-78     	; 0x8ca <_Z12leftTurnGyrov+0x82>
     918:	60 e0       	ldi	r22, 0x00	; 0
     91a:	80 e0       	ldi	r24, 0x00	; 0
     91c:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_Z14motorSpeedBothaa>
     920:	62 96       	adiw	r28, 0x12	; 18
     922:	0f b6       	in	r0, 0x3f	; 63
     924:	f8 94       	cli
     926:	de bf       	out	0x3e, r29	; 62
     928:	0f be       	out	0x3f, r0	; 63
     92a:	cd bf       	out	0x3d, r28	; 61
     92c:	df 91       	pop	r29
     92e:	cf 91       	pop	r28
     930:	1f 91       	pop	r17
     932:	0f 91       	pop	r16
     934:	ff 90       	pop	r15
     936:	ef 90       	pop	r14
     938:	df 90       	pop	r13
     93a:	cf 90       	pop	r12
     93c:	bf 90       	pop	r11
     93e:	af 90       	pop	r10
     940:	9f 90       	pop	r9
     942:	08 95       	ret

00000944 <_Z13rightTurnGyrov>:
     944:	af 92       	push	r10
     946:	bf 92       	push	r11
     948:	cf 92       	push	r12
     94a:	df 92       	push	r13
     94c:	ef 92       	push	r14
     94e:	ff 92       	push	r15
     950:	0f 93       	push	r16
     952:	1f 93       	push	r17
     954:	cf 93       	push	r28
     956:	df 93       	push	r29
     958:	cd b7       	in	r28, 0x3d	; 61
     95a:	de b7       	in	r29, 0x3e	; 62
     95c:	62 97       	sbiw	r28, 0x12	; 18
     95e:	0f b6       	in	r0, 0x3f	; 63
     960:	f8 94       	cli
     962:	de bf       	out	0x3e, r29	; 62
     964:	0f be       	out	0x3f, r0	; 63
     966:	cd bf       	out	0x3d, r28	; 61
     968:	0e 94 c2 01 	call	0x384	; 0x384 <_Z9readGyroZv>
     96c:	5c 01       	movw	r10, r24
     96e:	86 ea       	ldi	r24, 0xA6	; 166
     970:	9b e9       	ldi	r25, 0x9B	; 155
     972:	a4 ec       	ldi	r26, 0xC4	; 196
     974:	bb e3       	ldi	r27, 0x3B	; 59
     976:	89 83       	std	Y+1, r24	; 0x01
     978:	9a 83       	std	Y+2, r25	; 0x02
     97a:	ab 83       	std	Y+3, r26	; 0x03
     97c:	bc 83       	std	Y+4, r27	; 0x04
     97e:	8c ea       	ldi	r24, 0xAC	; 172
     980:	95 ec       	ldi	r25, 0xC5	; 197
     982:	a7 ea       	ldi	r26, 0xA7	; 167
     984:	b7 e3       	ldi	r27, 0x37	; 55
     986:	8d 83       	std	Y+5, r24	; 0x05
     988:	9e 83       	std	Y+6, r25	; 0x06
     98a:	af 83       	std	Y+7, r26	; 0x07
     98c:	b8 87       	std	Y+8, r27	; 0x08
     98e:	19 86       	std	Y+9, r1	; 0x09
     990:	1a 86       	std	Y+10, r1	; 0x0a
     992:	1b 86       	std	Y+11, r1	; 0x0b
     994:	1c 86       	std	Y+12, r1	; 0x0c
     996:	8e e7       	ldi	r24, 0x7E	; 126
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	9e 87       	std	Y+14, r25	; 0x0e
     99c:	8d 87       	std	Y+13, r24	; 0x0d
     99e:	80 e0       	ldi	r24, 0x00	; 0
     9a0:	9c ea       	ldi	r25, 0xAC	; 172
     9a2:	af ef       	ldi	r26, 0xFF	; 255
     9a4:	bf e3       	ldi	r27, 0x3F	; 63
     9a6:	8f 87       	std	Y+15, r24	; 0x0f
     9a8:	98 8b       	std	Y+16, r25	; 0x10
     9aa:	a9 8b       	std	Y+17, r26	; 0x11
     9ac:	ba 8b       	std	Y+18, r27	; 0x12
     9ae:	00 e0       	ldi	r16, 0x00	; 0
     9b0:	10 e0       	ldi	r17, 0x00	; 0
     9b2:	0f 2e       	mov	r0, r31
     9b4:	f4 e6       	ldi	r31, 0x64	; 100
     9b6:	cf 2e       	mov	r12, r31
     9b8:	d1 2c       	mov	r13, r1
     9ba:	f0 2d       	mov	r31, r0
     9bc:	0e 94 c2 01 	call	0x384	; 0x384 <_Z9readGyroZv>
     9c0:	9c 01       	movw	r18, r24
     9c2:	2a 19       	sub	r18, r10
     9c4:	3b 09       	sbc	r19, r11
     9c6:	c9 01       	movw	r24, r18
     9c8:	b6 01       	movw	r22, r12
     9ca:	0e 94 23 09 	call	0x1246	; 0x1246 <__divmodhi4>
     9ce:	06 0f       	add	r16, r22
     9d0:	17 1f       	adc	r17, r23
     9d2:	04 30       	cpi	r16, 0x04	; 4
     9d4:	87 ef       	ldi	r24, 0xF7	; 247
     9d6:	18 07       	cpc	r17, r24
     9d8:	c4 f0       	brlt	.+48     	; 0xa0a <_Z13rightTurnGyrov+0xc6>
     9da:	ae 01       	movw	r20, r28
     9dc:	4f 5f       	subi	r20, 0xFF	; 255
     9de:	5f 4f       	sbci	r21, 0xFF	; 255
     9e0:	b9 01       	movw	r22, r18
     9e2:	88 e4       	ldi	r24, 0x48	; 72
     9e4:	94 ef       	ldi	r25, 0xF4	; 244
     9e6:	0e 94 ed 01 	call	0x3da	; 0x3da <_Z14pidCalculationiiP10PID_STRUCT>
     9ea:	44 97       	sbiw	r24, 0x14	; 20
     9ec:	7c 01       	movw	r14, r24
     9ee:	81 95       	neg	r24
     9f0:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_Z14motorSpeedLefta>
     9f4:	8d ef       	ldi	r24, 0xFD	; 253
     9f6:	8e 0d       	add	r24, r14
     9f8:	0e 94 a0 02 	call	0x540	; 0x540 <_Z15motorSpeedRighta>
     9fc:	8f e1       	ldi	r24, 0x1F	; 31
     9fe:	9e e4       	ldi	r25, 0x4E	; 78
     a00:	01 97       	sbiw	r24, 0x01	; 1
     a02:	f1 f7       	brne	.-4      	; 0xa00 <_Z13rightTurnGyrov+0xbc>
     a04:	00 c0       	rjmp	.+0      	; 0xa06 <_Z13rightTurnGyrov+0xc2>
     a06:	00 00       	nop
     a08:	d9 cf       	rjmp	.-78     	; 0x9bc <_Z13rightTurnGyrov+0x78>
     a0a:	60 e0       	ldi	r22, 0x00	; 0
     a0c:	80 e0       	ldi	r24, 0x00	; 0
     a0e:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_Z14motorSpeedBothaa>
     a12:	62 96       	adiw	r28, 0x12	; 18
     a14:	0f b6       	in	r0, 0x3f	; 63
     a16:	f8 94       	cli
     a18:	de bf       	out	0x3e, r29	; 62
     a1a:	0f be       	out	0x3f, r0	; 63
     a1c:	cd bf       	out	0x3d, r28	; 61
     a1e:	df 91       	pop	r29
     a20:	cf 91       	pop	r28
     a22:	1f 91       	pop	r17
     a24:	0f 91       	pop	r16
     a26:	ff 90       	pop	r15
     a28:	ef 90       	pop	r14
     a2a:	df 90       	pop	r13
     a2c:	cf 90       	pop	r12
     a2e:	bf 90       	pop	r11
     a30:	af 90       	pop	r10
     a32:	08 95       	ret

00000a34 <_Z10readWalls2h>:
     a34:	ef 92       	push	r14
     a36:	ff 92       	push	r15
     a38:	0f 93       	push	r16
     a3a:	1f 93       	push	r17
     a3c:	cf 93       	push	r28
     a3e:	c8 2f       	mov	r28, r24
     a40:	80 e1       	ldi	r24, 0x10	; 16
     a42:	0e 94 98 01 	call	0x330	; 0x330 <_Z6readIRh>
     a46:	7c 01       	movw	r14, r24
     a48:	84 e0       	ldi	r24, 0x04	; 4
     a4a:	0e 94 98 01 	call	0x330	; 0x330 <_Z6readIRh>
     a4e:	8c 01       	movw	r16, r24
     a50:	81 e0       	ldi	r24, 0x01	; 1
     a52:	0e 94 98 01 	call	0x330	; 0x330 <_Z6readIRh>
     a56:	9c 01       	movw	r18, r24
     a58:	91 e0       	ldi	r25, 0x01	; 1
     a5a:	81 ef       	ldi	r24, 0xF1	; 241
     a5c:	e8 16       	cp	r14, r24
     a5e:	8a e0       	ldi	r24, 0x0A	; 10
     a60:	f8 06       	cpc	r15, r24
     a62:	08 f4       	brcc	.+2      	; 0xa66 <_Z10readWalls2h+0x32>
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	99 0f       	add	r25, r25
     a68:	01 3f       	cpi	r16, 0xF1	; 241
     a6a:	1a 40       	sbci	r17, 0x0A	; 10
     a6c:	08 f0       	brcs	.+2      	; 0xa70 <_Z10readWalls2h+0x3c>
     a6e:	9f 5f       	subi	r25, 0xFF	; 255
     a70:	89 2f       	mov	r24, r25
     a72:	88 0f       	add	r24, r24
     a74:	21 3f       	cpi	r18, 0xF1	; 241
     a76:	3a 40       	sbci	r19, 0x0A	; 10
     a78:	08 f0       	brcs	.+2      	; 0xa7c <_Z10readWalls2h+0x48>
     a7a:	8f 5f       	subi	r24, 0xFF	; 255
     a7c:	c1 30       	cpi	r28, 0x01	; 1
     a7e:	41 f0       	breq	.+16     	; 0xa90 <_Z10readWalls2h+0x5c>
     a80:	28 f0       	brcs	.+10     	; 0xa8c <_Z10readWalls2h+0x58>
     a82:	c2 30       	cpi	r28, 0x02	; 2
     a84:	39 f0       	breq	.+14     	; 0xa94 <_Z10readWalls2h+0x60>
     a86:	c3 30       	cpi	r28, 0x03	; 3
     a88:	39 f0       	breq	.+14     	; 0xa98 <_Z10readWalls2h+0x64>
     a8a:	07 c0       	rjmp	.+14     	; 0xa9a <_Z10readWalls2h+0x66>
     a8c:	c1 e0       	ldi	r28, 0x01	; 1
     a8e:	05 c0       	rjmp	.+10     	; 0xa9a <_Z10readWalls2h+0x66>
     a90:	c2 e0       	ldi	r28, 0x02	; 2
     a92:	03 c0       	rjmp	.+6      	; 0xa9a <_Z10readWalls2h+0x66>
     a94:	c3 e0       	ldi	r28, 0x03	; 3
     a96:	01 c0       	rjmp	.+2      	; 0xa9a <_Z10readWalls2h+0x66>
     a98:	c0 e0       	ldi	r28, 0x00	; 0
     a9a:	90 e1       	ldi	r25, 0x10	; 16
     a9c:	c9 9f       	mul	r28, r25
     a9e:	80 0d       	add	r24, r0
     aa0:	11 24       	eor	r1, r1
     aa2:	cf 91       	pop	r28
     aa4:	1f 91       	pop	r17
     aa6:	0f 91       	pop	r16
     aa8:	ff 90       	pop	r15
     aaa:	ef 90       	pop	r14
     aac:	08 95       	ret

00000aae <_Z8straightv>:
     aae:	61 e0       	ldi	r22, 0x01	; 1
     ab0:	8e e0       	ldi	r24, 0x0E	; 14
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	0e 94 11 03 	call	0x622	; 0x622 <_Z16moveStraightGyrojb>
     ab8:	08 95       	ret

00000aba <_Z7turn180v>:
}

void turn180(){
	leftTurnGyro();
     aba:	0e 94 24 04 	call	0x848	; 0x848 <_Z12leftTurnGyrov>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     abe:	2f ef       	ldi	r18, 0xFF	; 255
     ac0:	84 e3       	ldi	r24, 0x34	; 52
     ac2:	9c e0       	ldi	r25, 0x0C	; 12
     ac4:	21 50       	subi	r18, 0x01	; 1
     ac6:	80 40       	sbci	r24, 0x00	; 0
     ac8:	90 40       	sbci	r25, 0x00	; 0
     aca:	e1 f7       	brne	.-8      	; 0xac4 <_Z7turn180v+0xa>
     acc:	00 c0       	rjmp	.+0      	; 0xace <_Z7turn180v+0x14>
     ace:	00 00       	nop
	_delay_ms(SETTLE_DELAY);
	leftTurnGyro();
     ad0:	0e 94 24 04 	call	0x848	; 0x848 <_Z12leftTurnGyrov>
     ad4:	08 95       	ret

00000ad6 <_Z5northPh>:
}

void north(uint8_t* heading){
     ad6:	cf 93       	push	r28
     ad8:	df 93       	push	r29
     ada:	ec 01       	movw	r28, r24
	
	switch(*heading)
     adc:	88 81       	ld	r24, Y
     ade:	81 30       	cpi	r24, 0x01	; 1
     ae0:	91 f0       	breq	.+36     	; 0xb06 <_Z5northPh+0x30>
     ae2:	28 f0       	brcs	.+10     	; 0xaee <_Z5northPh+0x18>
     ae4:	82 30       	cpi	r24, 0x02	; 2
     ae6:	31 f1       	breq	.+76     	; 0xb34 <_Z5northPh+0x5e>
     ae8:	83 30       	cpi	r24, 0x03	; 3
     aea:	d9 f1       	breq	.+118    	; 0xb62 <_Z5northPh+0x8c>
     aec:	50 c0       	rjmp	.+160    	; 0xb8e <_Z5northPh+0xb8>
     aee:	2f ef       	ldi	r18, 0xFF	; 255
     af0:	84 e3       	ldi	r24, 0x34	; 52
     af2:	9c e0       	ldi	r25, 0x0C	; 12
     af4:	21 50       	subi	r18, 0x01	; 1
     af6:	80 40       	sbci	r24, 0x00	; 0
     af8:	90 40       	sbci	r25, 0x00	; 0
     afa:	e1 f7       	brne	.-8      	; 0xaf4 <_Z5northPh+0x1e>
     afc:	00 c0       	rjmp	.+0      	; 0xafe <_Z5northPh+0x28>
     afe:	00 00       	nop
	{
		case NORTH:
			_delay_ms(SETTLE_DELAY);
			straight();
     b00:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
     b04:	44 c0       	rjmp	.+136    	; 0xb8e <_Z5northPh+0xb8>
     b06:	2f ef       	ldi	r18, 0xFF	; 255
     b08:	84 e3       	ldi	r24, 0x34	; 52
     b0a:	9c e0       	ldi	r25, 0x0C	; 12
     b0c:	21 50       	subi	r18, 0x01	; 1
     b0e:	80 40       	sbci	r24, 0x00	; 0
     b10:	90 40       	sbci	r25, 0x00	; 0
     b12:	e1 f7       	brne	.-8      	; 0xb0c <_Z5northPh+0x36>
     b14:	00 c0       	rjmp	.+0      	; 0xb16 <_Z5northPh+0x40>
     b16:	00 00       	nop
void straight(){
	moveStraightGyro(14);
}

void leftTurn(){
	leftTurnGyro();
     b18:	0e 94 24 04 	call	0x848	; 0x848 <_Z12leftTurnGyrov>
     b1c:	2f ef       	ldi	r18, 0xFF	; 255
     b1e:	84 e3       	ldi	r24, 0x34	; 52
     b20:	9c e0       	ldi	r25, 0x0C	; 12
     b22:	21 50       	subi	r18, 0x01	; 1
     b24:	80 40       	sbci	r24, 0x00	; 0
     b26:	90 40       	sbci	r25, 0x00	; 0
     b28:	e1 f7       	brne	.-8      	; 0xb22 <_Z5northPh+0x4c>
     b2a:	00 c0       	rjmp	.+0      	; 0xb2c <_Z5northPh+0x56>
     b2c:	00 00       	nop
		break;
		case EAST:
			_delay_ms(SETTLE_DELAY);
			leftTurn();
			_delay_ms(SETTLE_DELAY);
			straight();
     b2e:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
     b32:	2d c0       	rjmp	.+90     	; 0xb8e <_Z5northPh+0xb8>
     b34:	2f ef       	ldi	r18, 0xFF	; 255
     b36:	84 e3       	ldi	r24, 0x34	; 52
     b38:	9c e0       	ldi	r25, 0x0C	; 12
     b3a:	21 50       	subi	r18, 0x01	; 1
     b3c:	80 40       	sbci	r24, 0x00	; 0
     b3e:	90 40       	sbci	r25, 0x00	; 0
     b40:	e1 f7       	brne	.-8      	; 0xb3a <_Z5northPh+0x64>
     b42:	00 c0       	rjmp	.+0      	; 0xb44 <_Z5northPh+0x6e>
     b44:	00 00       	nop
		case SOUTH:
			_delay_ms(SETTLE_DELAY);		
			turn180();
     b46:	0e 94 5d 05 	call	0xaba	; 0xaba <_Z7turn180v>
     b4a:	2f ef       	ldi	r18, 0xFF	; 255
     b4c:	84 e3       	ldi	r24, 0x34	; 52
     b4e:	9c e0       	ldi	r25, 0x0C	; 12
     b50:	21 50       	subi	r18, 0x01	; 1
     b52:	80 40       	sbci	r24, 0x00	; 0
     b54:	90 40       	sbci	r25, 0x00	; 0
     b56:	e1 f7       	brne	.-8      	; 0xb50 <_Z5northPh+0x7a>
     b58:	00 c0       	rjmp	.+0      	; 0xb5a <_Z5northPh+0x84>
     b5a:	00 00       	nop
			_delay_ms(SETTLE_DELAY);
			straight();
     b5c:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
     b60:	16 c0       	rjmp	.+44     	; 0xb8e <_Z5northPh+0xb8>
     b62:	2f ef       	ldi	r18, 0xFF	; 255
     b64:	84 e3       	ldi	r24, 0x34	; 52
     b66:	9c e0       	ldi	r25, 0x0C	; 12
     b68:	21 50       	subi	r18, 0x01	; 1
     b6a:	80 40       	sbci	r24, 0x00	; 0
     b6c:	90 40       	sbci	r25, 0x00	; 0
     b6e:	e1 f7       	brne	.-8      	; 0xb68 <_Z5northPh+0x92>
     b70:	00 c0       	rjmp	.+0      	; 0xb72 <_Z5northPh+0x9c>
     b72:	00 00       	nop
void leftTurn(){
	leftTurnGyro();
}

void rightTurn(){
	rightTurnGyro();
     b74:	0e 94 a2 04 	call	0x944	; 0x944 <_Z13rightTurnGyrov>
     b78:	2f ef       	ldi	r18, 0xFF	; 255
     b7a:	84 e3       	ldi	r24, 0x34	; 52
     b7c:	9c e0       	ldi	r25, 0x0C	; 12
     b7e:	21 50       	subi	r18, 0x01	; 1
     b80:	80 40       	sbci	r24, 0x00	; 0
     b82:	90 40       	sbci	r25, 0x00	; 0
     b84:	e1 f7       	brne	.-8      	; 0xb7e <_Z5northPh+0xa8>
     b86:	00 c0       	rjmp	.+0      	; 0xb88 <_Z5northPh+0xb2>
     b88:	00 00       	nop
		break;
		case WEST:
			_delay_ms(SETTLE_DELAY);		
			rightTurn();
			_delay_ms(SETTLE_DELAY);
			straight();
     b8a:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;	
	}
	
	*heading = NORTH;
     b8e:	18 82       	st	Y, r1
	return;
}
     b90:	df 91       	pop	r29
     b92:	cf 91       	pop	r28
     b94:	08 95       	ret

00000b96 <_Z4eastPh>:

void east(uint8_t* heading){
     b96:	cf 93       	push	r28
     b98:	df 93       	push	r29
     b9a:	ec 01       	movw	r28, r24
	switch(*heading)
     b9c:	88 81       	ld	r24, Y
     b9e:	81 30       	cpi	r24, 0x01	; 1
     ba0:	e9 f0       	breq	.+58     	; 0xbdc <_Z4eastPh+0x46>
     ba2:	28 f0       	brcs	.+10     	; 0xbae <_Z4eastPh+0x18>
     ba4:	82 30       	cpi	r24, 0x02	; 2
     ba6:	31 f1       	breq	.+76     	; 0xbf4 <_Z4eastPh+0x5e>
     ba8:	83 30       	cpi	r24, 0x03	; 3
     baa:	d9 f1       	breq	.+118    	; 0xc22 <_Z4eastPh+0x8c>
     bac:	50 c0       	rjmp	.+160    	; 0xc4e <_Z4eastPh+0xb8>
     bae:	2f ef       	ldi	r18, 0xFF	; 255
     bb0:	84 e3       	ldi	r24, 0x34	; 52
     bb2:	9c e0       	ldi	r25, 0x0C	; 12
     bb4:	21 50       	subi	r18, 0x01	; 1
     bb6:	80 40       	sbci	r24, 0x00	; 0
     bb8:	90 40       	sbci	r25, 0x00	; 0
     bba:	e1 f7       	brne	.-8      	; 0xbb4 <_Z4eastPh+0x1e>
     bbc:	00 c0       	rjmp	.+0      	; 0xbbe <_Z4eastPh+0x28>
     bbe:	00 00       	nop
void leftTurn(){
	leftTurnGyro();
}

void rightTurn(){
	rightTurnGyro();
     bc0:	0e 94 a2 04 	call	0x944	; 0x944 <_Z13rightTurnGyrov>
     bc4:	2f ef       	ldi	r18, 0xFF	; 255
     bc6:	84 e3       	ldi	r24, 0x34	; 52
     bc8:	9c e0       	ldi	r25, 0x0C	; 12
     bca:	21 50       	subi	r18, 0x01	; 1
     bcc:	80 40       	sbci	r24, 0x00	; 0
     bce:	90 40       	sbci	r25, 0x00	; 0
     bd0:	e1 f7       	brne	.-8      	; 0xbca <_Z4eastPh+0x34>
     bd2:	00 c0       	rjmp	.+0      	; 0xbd4 <_Z4eastPh+0x3e>
     bd4:	00 00       	nop
	{
		case NORTH:
			_delay_ms(SETTLE_DELAY);
			rightTurn();
			_delay_ms(SETTLE_DELAY);
			straight();
     bd6:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
     bda:	39 c0       	rjmp	.+114    	; 0xc4e <_Z4eastPh+0xb8>
     bdc:	2f ef       	ldi	r18, 0xFF	; 255
     bde:	84 e3       	ldi	r24, 0x34	; 52
     be0:	9c e0       	ldi	r25, 0x0C	; 12
     be2:	21 50       	subi	r18, 0x01	; 1
     be4:	80 40       	sbci	r24, 0x00	; 0
     be6:	90 40       	sbci	r25, 0x00	; 0
     be8:	e1 f7       	brne	.-8      	; 0xbe2 <_Z4eastPh+0x4c>
     bea:	00 c0       	rjmp	.+0      	; 0xbec <_Z4eastPh+0x56>
     bec:	00 00       	nop
		case EAST:
			_delay_ms(SETTLE_DELAY);
			straight();
     bee:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
     bf2:	2d c0       	rjmp	.+90     	; 0xc4e <_Z4eastPh+0xb8>
     bf4:	2f ef       	ldi	r18, 0xFF	; 255
     bf6:	84 e3       	ldi	r24, 0x34	; 52
     bf8:	9c e0       	ldi	r25, 0x0C	; 12
     bfa:	21 50       	subi	r18, 0x01	; 1
     bfc:	80 40       	sbci	r24, 0x00	; 0
     bfe:	90 40       	sbci	r25, 0x00	; 0
     c00:	e1 f7       	brne	.-8      	; 0xbfa <_Z4eastPh+0x64>
     c02:	00 c0       	rjmp	.+0      	; 0xc04 <_Z4eastPh+0x6e>
     c04:	00 00       	nop
void straight(){
	moveStraightGyro(14);
}

void leftTurn(){
	leftTurnGyro();
     c06:	0e 94 24 04 	call	0x848	; 0x848 <_Z12leftTurnGyrov>
     c0a:	2f ef       	ldi	r18, 0xFF	; 255
     c0c:	84 e3       	ldi	r24, 0x34	; 52
     c0e:	9c e0       	ldi	r25, 0x0C	; 12
     c10:	21 50       	subi	r18, 0x01	; 1
     c12:	80 40       	sbci	r24, 0x00	; 0
     c14:	90 40       	sbci	r25, 0x00	; 0
     c16:	e1 f7       	brne	.-8      	; 0xc10 <_Z4eastPh+0x7a>
     c18:	00 c0       	rjmp	.+0      	; 0xc1a <_Z4eastPh+0x84>
     c1a:	00 00       	nop
		break;
		case SOUTH:
			_delay_ms(SETTLE_DELAY);		
			leftTurn();
			_delay_ms(SETTLE_DELAY);
			straight();
     c1c:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
     c20:	16 c0       	rjmp	.+44     	; 0xc4e <_Z4eastPh+0xb8>
     c22:	2f ef       	ldi	r18, 0xFF	; 255
     c24:	84 e3       	ldi	r24, 0x34	; 52
     c26:	9c e0       	ldi	r25, 0x0C	; 12
     c28:	21 50       	subi	r18, 0x01	; 1
     c2a:	80 40       	sbci	r24, 0x00	; 0
     c2c:	90 40       	sbci	r25, 0x00	; 0
     c2e:	e1 f7       	brne	.-8      	; 0xc28 <_Z4eastPh+0x92>
     c30:	00 c0       	rjmp	.+0      	; 0xc32 <_Z4eastPh+0x9c>
     c32:	00 00       	nop
		case WEST:
			_delay_ms(SETTLE_DELAY);		
			turn180();
     c34:	0e 94 5d 05 	call	0xaba	; 0xaba <_Z7turn180v>
     c38:	2f ef       	ldi	r18, 0xFF	; 255
     c3a:	84 e3       	ldi	r24, 0x34	; 52
     c3c:	9c e0       	ldi	r25, 0x0C	; 12
     c3e:	21 50       	subi	r18, 0x01	; 1
     c40:	80 40       	sbci	r24, 0x00	; 0
     c42:	90 40       	sbci	r25, 0x00	; 0
     c44:	e1 f7       	brne	.-8      	; 0xc3e <_Z4eastPh+0xa8>
     c46:	00 c0       	rjmp	.+0      	; 0xc48 <_Z4eastPh+0xb2>
     c48:	00 00       	nop
			_delay_ms(SETTLE_DELAY);
			straight();
     c4a:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
	}	
	*heading = EAST;
     c4e:	81 e0       	ldi	r24, 0x01	; 1
     c50:	88 83       	st	Y, r24
	return;
}
     c52:	df 91       	pop	r29
     c54:	cf 91       	pop	r28
     c56:	08 95       	ret

00000c58 <_Z5southPh>:

void south(uint8_t* heading){
     c58:	cf 93       	push	r28
     c5a:	df 93       	push	r29
     c5c:	ec 01       	movw	r28, r24
	switch(*heading)
     c5e:	88 81       	ld	r24, Y
     c60:	81 30       	cpi	r24, 0x01	; 1
     c62:	e9 f0       	breq	.+58     	; 0xc9e <_Z5southPh+0x46>
     c64:	28 f0       	brcs	.+10     	; 0xc70 <_Z5southPh+0x18>
     c66:	82 30       	cpi	r24, 0x02	; 2
     c68:	89 f1       	breq	.+98     	; 0xccc <_Z5southPh+0x74>
     c6a:	83 30       	cpi	r24, 0x03	; 3
     c6c:	d9 f1       	breq	.+118    	; 0xce4 <_Z5southPh+0x8c>
     c6e:	50 c0       	rjmp	.+160    	; 0xd10 <_Z5southPh+0xb8>
     c70:	2f ef       	ldi	r18, 0xFF	; 255
     c72:	84 e3       	ldi	r24, 0x34	; 52
     c74:	9c e0       	ldi	r25, 0x0C	; 12
     c76:	21 50       	subi	r18, 0x01	; 1
     c78:	80 40       	sbci	r24, 0x00	; 0
     c7a:	90 40       	sbci	r25, 0x00	; 0
     c7c:	e1 f7       	brne	.-8      	; 0xc76 <_Z5southPh+0x1e>
     c7e:	00 c0       	rjmp	.+0      	; 0xc80 <_Z5southPh+0x28>
     c80:	00 00       	nop
	{
		case NORTH:
			_delay_ms(SETTLE_DELAY);		
			turn180();
     c82:	0e 94 5d 05 	call	0xaba	; 0xaba <_Z7turn180v>
     c86:	2f ef       	ldi	r18, 0xFF	; 255
     c88:	84 e3       	ldi	r24, 0x34	; 52
     c8a:	9c e0       	ldi	r25, 0x0C	; 12
     c8c:	21 50       	subi	r18, 0x01	; 1
     c8e:	80 40       	sbci	r24, 0x00	; 0
     c90:	90 40       	sbci	r25, 0x00	; 0
     c92:	e1 f7       	brne	.-8      	; 0xc8c <_Z5southPh+0x34>
     c94:	00 c0       	rjmp	.+0      	; 0xc96 <_Z5southPh+0x3e>
     c96:	00 00       	nop
			_delay_ms(SETTLE_DELAY);
			straight();
     c98:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
     c9c:	39 c0       	rjmp	.+114    	; 0xd10 <_Z5southPh+0xb8>
     c9e:	2f ef       	ldi	r18, 0xFF	; 255
     ca0:	84 e3       	ldi	r24, 0x34	; 52
     ca2:	9c e0       	ldi	r25, 0x0C	; 12
     ca4:	21 50       	subi	r18, 0x01	; 1
     ca6:	80 40       	sbci	r24, 0x00	; 0
     ca8:	90 40       	sbci	r25, 0x00	; 0
     caa:	e1 f7       	brne	.-8      	; 0xca4 <_Z5southPh+0x4c>
     cac:	00 c0       	rjmp	.+0      	; 0xcae <_Z5southPh+0x56>
     cae:	00 00       	nop
void leftTurn(){
	leftTurnGyro();
}

void rightTurn(){
	rightTurnGyro();
     cb0:	0e 94 a2 04 	call	0x944	; 0x944 <_Z13rightTurnGyrov>
     cb4:	2f ef       	ldi	r18, 0xFF	; 255
     cb6:	84 e3       	ldi	r24, 0x34	; 52
     cb8:	9c e0       	ldi	r25, 0x0C	; 12
     cba:	21 50       	subi	r18, 0x01	; 1
     cbc:	80 40       	sbci	r24, 0x00	; 0
     cbe:	90 40       	sbci	r25, 0x00	; 0
     cc0:	e1 f7       	brne	.-8      	; 0xcba <_Z5southPh+0x62>
     cc2:	00 c0       	rjmp	.+0      	; 0xcc4 <_Z5southPh+0x6c>
     cc4:	00 00       	nop
		break;
		case EAST:
			_delay_ms(SETTLE_DELAY);		
			rightTurn();
			_delay_ms(SETTLE_DELAY);
			straight();
     cc6:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
     cca:	22 c0       	rjmp	.+68     	; 0xd10 <_Z5southPh+0xb8>
     ccc:	2f ef       	ldi	r18, 0xFF	; 255
     cce:	84 e3       	ldi	r24, 0x34	; 52
     cd0:	9c e0       	ldi	r25, 0x0C	; 12
     cd2:	21 50       	subi	r18, 0x01	; 1
     cd4:	80 40       	sbci	r24, 0x00	; 0
     cd6:	90 40       	sbci	r25, 0x00	; 0
     cd8:	e1 f7       	brne	.-8      	; 0xcd2 <_Z5southPh+0x7a>
     cda:	00 c0       	rjmp	.+0      	; 0xcdc <_Z5southPh+0x84>
     cdc:	00 00       	nop
		case SOUTH:
			_delay_ms(SETTLE_DELAY);
			straight();
     cde:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
     ce2:	16 c0       	rjmp	.+44     	; 0xd10 <_Z5southPh+0xb8>
     ce4:	2f ef       	ldi	r18, 0xFF	; 255
     ce6:	84 e3       	ldi	r24, 0x34	; 52
     ce8:	9c e0       	ldi	r25, 0x0C	; 12
     cea:	21 50       	subi	r18, 0x01	; 1
     cec:	80 40       	sbci	r24, 0x00	; 0
     cee:	90 40       	sbci	r25, 0x00	; 0
     cf0:	e1 f7       	brne	.-8      	; 0xcea <_Z5southPh+0x92>
     cf2:	00 c0       	rjmp	.+0      	; 0xcf4 <_Z5southPh+0x9c>
     cf4:	00 00       	nop
void straight(){
	moveStraightGyro(14);
}

void leftTurn(){
	leftTurnGyro();
     cf6:	0e 94 24 04 	call	0x848	; 0x848 <_Z12leftTurnGyrov>
     cfa:	2f ef       	ldi	r18, 0xFF	; 255
     cfc:	84 e3       	ldi	r24, 0x34	; 52
     cfe:	9c e0       	ldi	r25, 0x0C	; 12
     d00:	21 50       	subi	r18, 0x01	; 1
     d02:	80 40       	sbci	r24, 0x00	; 0
     d04:	90 40       	sbci	r25, 0x00	; 0
     d06:	e1 f7       	brne	.-8      	; 0xd00 <_Z5southPh+0xa8>
     d08:	00 c0       	rjmp	.+0      	; 0xd0a <_Z5southPh+0xb2>
     d0a:	00 00       	nop
		break;
		case WEST:
			_delay_ms(SETTLE_DELAY);		
			leftTurn();
			_delay_ms(SETTLE_DELAY);
			straight();
     d0c:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
	}
	*heading = SOUTH;
     d10:	82 e0       	ldi	r24, 0x02	; 2
     d12:	88 83       	st	Y, r24
	return;	
}
     d14:	df 91       	pop	r29
     d16:	cf 91       	pop	r28
     d18:	08 95       	ret

00000d1a <_Z4westPh>:

void west(uint8_t* heading){
     d1a:	cf 93       	push	r28
     d1c:	df 93       	push	r29
     d1e:	ec 01       	movw	r28, r24
	switch(*heading)
     d20:	88 81       	ld	r24, Y
     d22:	81 30       	cpi	r24, 0x01	; 1
     d24:	f1 f0       	breq	.+60     	; 0xd62 <_Z4westPh+0x48>
     d26:	30 f0       	brcs	.+12     	; 0xd34 <_Z4westPh+0x1a>
     d28:	82 30       	cpi	r24, 0x02	; 2
     d2a:	91 f1       	breq	.+100    	; 0xd90 <_Z4westPh+0x76>
     d2c:	83 30       	cpi	r24, 0x03	; 3
     d2e:	09 f4       	brne	.+2      	; 0xd32 <_Z4westPh+0x18>
     d30:	46 c0       	rjmp	.+140    	; 0xdbe <_Z4westPh+0xa4>
     d32:	50 c0       	rjmp	.+160    	; 0xdd4 <_Z4westPh+0xba>
     d34:	2f ef       	ldi	r18, 0xFF	; 255
     d36:	84 e3       	ldi	r24, 0x34	; 52
     d38:	9c e0       	ldi	r25, 0x0C	; 12
     d3a:	21 50       	subi	r18, 0x01	; 1
     d3c:	80 40       	sbci	r24, 0x00	; 0
     d3e:	90 40       	sbci	r25, 0x00	; 0
     d40:	e1 f7       	brne	.-8      	; 0xd3a <_Z4westPh+0x20>
     d42:	00 c0       	rjmp	.+0      	; 0xd44 <_Z4westPh+0x2a>
     d44:	00 00       	nop
void straight(){
	moveStraightGyro(14);
}

void leftTurn(){
	leftTurnGyro();
     d46:	0e 94 24 04 	call	0x848	; 0x848 <_Z12leftTurnGyrov>
     d4a:	2f ef       	ldi	r18, 0xFF	; 255
     d4c:	84 e3       	ldi	r24, 0x34	; 52
     d4e:	9c e0       	ldi	r25, 0x0C	; 12
     d50:	21 50       	subi	r18, 0x01	; 1
     d52:	80 40       	sbci	r24, 0x00	; 0
     d54:	90 40       	sbci	r25, 0x00	; 0
     d56:	e1 f7       	brne	.-8      	; 0xd50 <_Z4westPh+0x36>
     d58:	00 c0       	rjmp	.+0      	; 0xd5a <_Z4westPh+0x40>
     d5a:	00 00       	nop
	{
		case NORTH:
			_delay_ms(SETTLE_DELAY);		
			leftTurn();
			_delay_ms(SETTLE_DELAY);
			straight();
     d5c:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
     d60:	39 c0       	rjmp	.+114    	; 0xdd4 <_Z4westPh+0xba>
     d62:	2f ef       	ldi	r18, 0xFF	; 255
     d64:	84 e3       	ldi	r24, 0x34	; 52
     d66:	9c e0       	ldi	r25, 0x0C	; 12
     d68:	21 50       	subi	r18, 0x01	; 1
     d6a:	80 40       	sbci	r24, 0x00	; 0
     d6c:	90 40       	sbci	r25, 0x00	; 0
     d6e:	e1 f7       	brne	.-8      	; 0xd68 <_Z4westPh+0x4e>
     d70:	00 c0       	rjmp	.+0      	; 0xd72 <_Z4westPh+0x58>
     d72:	00 00       	nop
		case EAST:
			_delay_ms(SETTLE_DELAY);		
			turn180();
     d74:	0e 94 5d 05 	call	0xaba	; 0xaba <_Z7turn180v>
     d78:	2f ef       	ldi	r18, 0xFF	; 255
     d7a:	84 e3       	ldi	r24, 0x34	; 52
     d7c:	9c e0       	ldi	r25, 0x0C	; 12
     d7e:	21 50       	subi	r18, 0x01	; 1
     d80:	80 40       	sbci	r24, 0x00	; 0
     d82:	90 40       	sbci	r25, 0x00	; 0
     d84:	e1 f7       	brne	.-8      	; 0xd7e <_Z4westPh+0x64>
     d86:	00 c0       	rjmp	.+0      	; 0xd88 <_Z4westPh+0x6e>
     d88:	00 00       	nop
			_delay_ms(SETTLE_DELAY);
			straight();
     d8a:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
     d8e:	22 c0       	rjmp	.+68     	; 0xdd4 <_Z4westPh+0xba>
     d90:	2f ef       	ldi	r18, 0xFF	; 255
     d92:	84 e3       	ldi	r24, 0x34	; 52
     d94:	9c e0       	ldi	r25, 0x0C	; 12
     d96:	21 50       	subi	r18, 0x01	; 1
     d98:	80 40       	sbci	r24, 0x00	; 0
     d9a:	90 40       	sbci	r25, 0x00	; 0
     d9c:	e1 f7       	brne	.-8      	; 0xd96 <_Z4westPh+0x7c>
     d9e:	00 c0       	rjmp	.+0      	; 0xda0 <_Z4westPh+0x86>
     da0:	00 00       	nop
void leftTurn(){
	leftTurnGyro();
}

void rightTurn(){
	rightTurnGyro();
     da2:	0e 94 a2 04 	call	0x944	; 0x944 <_Z13rightTurnGyrov>
     da6:	2f ef       	ldi	r18, 0xFF	; 255
     da8:	84 e3       	ldi	r24, 0x34	; 52
     daa:	9c e0       	ldi	r25, 0x0C	; 12
     dac:	21 50       	subi	r18, 0x01	; 1
     dae:	80 40       	sbci	r24, 0x00	; 0
     db0:	90 40       	sbci	r25, 0x00	; 0
     db2:	e1 f7       	brne	.-8      	; 0xdac <_Z4westPh+0x92>
     db4:	00 c0       	rjmp	.+0      	; 0xdb6 <_Z4westPh+0x9c>
     db6:	00 00       	nop
		break;
		case SOUTH:
			_delay_ms(SETTLE_DELAY);		
			rightTurn();
			_delay_ms(SETTLE_DELAY);
			straight();
     db8:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
     dbc:	0b c0       	rjmp	.+22     	; 0xdd4 <_Z4westPh+0xba>
     dbe:	2f ef       	ldi	r18, 0xFF	; 255
     dc0:	84 e3       	ldi	r24, 0x34	; 52
     dc2:	9c e0       	ldi	r25, 0x0C	; 12
     dc4:	21 50       	subi	r18, 0x01	; 1
     dc6:	80 40       	sbci	r24, 0x00	; 0
     dc8:	90 40       	sbci	r25, 0x00	; 0
     dca:	e1 f7       	brne	.-8      	; 0xdc4 <_Z4westPh+0xaa>
     dcc:	00 c0       	rjmp	.+0      	; 0xdce <_Z4westPh+0xb4>
     dce:	00 00       	nop
		case WEST:	
			_delay_ms(SETTLE_DELAY);
			straight();
     dd0:	0e 94 57 05 	call	0xaae	; 0xaae <_Z8straightv>
		break;
	}
	*heading = WEST;
     dd4:	83 e0       	ldi	r24, 0x03	; 3
     dd6:	88 83       	st	Y, r24
	return;	
}
     dd8:	df 91       	pop	r29
     dda:	cf 91       	pop	r28
     ddc:	08 95       	ret

00000dde <__vector_24>:
volatile bool moveWest = false;
volatile bool beep1 = false;
volatile bool beep2 = false;
volatile bool bombBeep = false;

ISR(TWI_vect){//Interupt routine for I2C slave mode
     dde:	1f 92       	push	r1
     de0:	0f 92       	push	r0
     de2:	0f b6       	in	r0, 0x3f	; 63
     de4:	0f 92       	push	r0
     de6:	11 24       	eor	r1, r1
     de8:	8f 93       	push	r24

	if(TWSR == TWI_STX_ADR_ACK || TWSR == TWI_STX_DATA_ACK){
     dea:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     dee:	88 3a       	cpi	r24, 0xA8	; 168
     df0:	21 f0       	breq	.+8      	; 0xdfa <__vector_24+0x1c>
     df2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     df6:	88 3b       	cpi	r24, 0xB8	; 184
     df8:	41 f4       	brne	.+16     	; 0xe0a <__vector_24+0x2c>
		TWDR = walls;
     dfa:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <walls>
     dfe:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		TWCR = (1<<TWEN)|                              // Enable TWI-interface and release TWI pins
			(1<<TWIE)|(1<<TWINT)|                      // Keep interrupt enabled and clear the flag
			(1<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Answer on next address match
			(0<<TWWC);
     e02:	85 ec       	ldi	r24, 0xC5	; 197
     e04:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e08:	6b c0       	rjmp	.+214    	; 0xee0 <__vector_24+0x102>
		
	}else if(TWSR == TWI_STX_DATA_NACK){
     e0a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     e0e:	80 3c       	cpi	r24, 0xC0	; 192
     e10:	41 f4       	brne	.+16     	; 0xe22 <__vector_24+0x44>
		TWDR = walls;
     e12:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <walls>
     e16:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		
		TWCR = (1<<TWEN)|                                 // Enable TWI-interface and release TWI pins
             (1<<TWIE)|(1<<TWINT)|                      // Keep interrupt enabled and clear the flag
             (1<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Answer on next address match
             (0<<TWWC);                                 //			
     e1a:	85 ec       	ldi	r24, 0xC5	; 197
     e1c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e20:	5f c0       	rjmp	.+190    	; 0xee0 <__vector_24+0x102>
	}else {//if(TWSR == TWI_SRX_ADR_DATA_ACK){
			
		command = TWDR;
     e22:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     e26:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <command>
			
		TWCR = (1<<TWEN)|                                 // TWI Interface enabled
			(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag to send byte
			(1<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send ACK after next reception
			(0<<TWWC);
     e2a:	85 ec       	ldi	r24, 0xC5	; 197
     e2c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
			
		ready = false;//Command received, not ready untill command finished
     e30:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <ready>
		if(command == 1){
     e34:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <command>
     e38:	81 30       	cpi	r24, 0x01	; 1
     e3a:	19 f4       	brne	.+6      	; 0xe42 <__vector_24+0x64>
			left = true;
     e3c:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <left>
     e40:	4f c0       	rjmp	.+158    	; 0xee0 <__vector_24+0x102>
		}else if(command == 2){
     e42:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <command>
     e46:	82 30       	cpi	r24, 0x02	; 2
     e48:	21 f4       	brne	.+8      	; 0xe52 <__vector_24+0x74>
			fwrd = true;
     e4a:	81 e0       	ldi	r24, 0x01	; 1
     e4c:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <fwrd>
     e50:	47 c0       	rjmp	.+142    	; 0xee0 <__vector_24+0x102>
		}else if(command == 3){
     e52:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <command>
     e56:	83 30       	cpi	r24, 0x03	; 3
     e58:	21 f4       	brne	.+8      	; 0xe62 <__vector_24+0x84>
			right = true;
     e5a:	81 e0       	ldi	r24, 0x01	; 1
     e5c:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <right>
     e60:	3f c0       	rjmp	.+126    	; 0xee0 <__vector_24+0x102>
		}else if(command == 4){
     e62:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <command>
     e66:	84 30       	cpi	r24, 0x04	; 4
     e68:	21 f4       	brne	.+8      	; 0xe72 <__vector_24+0x94>
			reverse = true;	
     e6a:	81 e0       	ldi	r24, 0x01	; 1
     e6c:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <reverse>
     e70:	37 c0       	rjmp	.+110    	; 0xee0 <__vector_24+0x102>
		}else if(command == 5){
     e72:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <command>
     e76:	85 30       	cpi	r24, 0x05	; 5
     e78:	21 f4       	brne	.+8      	; 0xe82 <__vector_24+0xa4>
			moveNorth = true;
     e7a:	81 e0       	ldi	r24, 0x01	; 1
     e7c:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <moveNorth>
     e80:	2f c0       	rjmp	.+94     	; 0xee0 <__vector_24+0x102>
		}else if(command == 6){
     e82:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <command>
     e86:	86 30       	cpi	r24, 0x06	; 6
     e88:	21 f4       	brne	.+8      	; 0xe92 <__vector_24+0xb4>
			moveEast = true;
     e8a:	81 e0       	ldi	r24, 0x01	; 1
     e8c:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <moveEast>
     e90:	27 c0       	rjmp	.+78     	; 0xee0 <__vector_24+0x102>
		}else if(command == 7){
     e92:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <command>
     e96:	87 30       	cpi	r24, 0x07	; 7
     e98:	21 f4       	brne	.+8      	; 0xea2 <__vector_24+0xc4>
			moveSouth = true;
     e9a:	81 e0       	ldi	r24, 0x01	; 1
     e9c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <moveSouth>
     ea0:	1f c0       	rjmp	.+62     	; 0xee0 <__vector_24+0x102>
		}else if(command == 8){
     ea2:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <command>
     ea6:	88 30       	cpi	r24, 0x08	; 8
     ea8:	21 f4       	brne	.+8      	; 0xeb2 <__vector_24+0xd4>
			moveWest = true;
     eaa:	81 e0       	ldi	r24, 0x01	; 1
     eac:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <moveWest>
     eb0:	17 c0       	rjmp	.+46     	; 0xee0 <__vector_24+0x102>
		}else if(command == 9){
     eb2:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <command>
     eb6:	89 30       	cpi	r24, 0x09	; 9
     eb8:	21 f4       	brne	.+8      	; 0xec2 <__vector_24+0xe4>
			beep1 = true;
     eba:	81 e0       	ldi	r24, 0x01	; 1
     ebc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <beep1>
     ec0:	0f c0       	rjmp	.+30     	; 0xee0 <__vector_24+0x102>
		}else if(command == 10){
     ec2:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <command>
     ec6:	8a 30       	cpi	r24, 0x0A	; 10
     ec8:	21 f4       	brne	.+8      	; 0xed2 <__vector_24+0xf4>
			beep2 = true;
     eca:	81 e0       	ldi	r24, 0x01	; 1
     ecc:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <beep2>
     ed0:	07 c0       	rjmp	.+14     	; 0xee0 <__vector_24+0x102>
		}else if(command == 42){
     ed2:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <command>
     ed6:	8a 32       	cpi	r24, 0x2A	; 42
     ed8:	19 f4       	brne	.+6      	; 0xee0 <__vector_24+0x102>
			bombBeep = true;
     eda:	81 e0       	ldi	r24, 0x01	; 1
     edc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
		}
	}
}
     ee0:	8f 91       	pop	r24
     ee2:	0f 90       	pop	r0
     ee4:	0f be       	out	0x3f, r0	; 63
     ee6:	0f 90       	pop	r0
     ee8:	1f 90       	pop	r1
     eea:	18 95       	reti

00000eec <main>:

uint8_t status;

int main()
{
	setUpInital();
     eec:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_Z11setUpInitalv>
	setUpADC();
     ef0:	0e 94 ed 00 	call	0x1da	; 0x1da <_Z8setUpADCv>
	setUpIMU();
     ef4:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <_Z8setUpIMUv>
	setupIR();
     ef8:	0e 94 46 01 	call	0x28c	; 0x28c <_Z7setupIRv>
	I2C_MODE_FAST
     efc:	82 e0       	ldi	r24, 0x02	; 2
     efe:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	//lowBatt();
	sei();//Enable interupts, this is for I2C slave mode
     f02:	78 94       	sei

	ready = false;
     f04:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <ready>

	for(;;){
		walls = readWalls2(direction);
		ready = true;
     f08:	c1 e0       	ldi	r28, 0x01	; 1
			leftTurnGyro();
			_delay_ms(500);
			moveStraightGyro(14);
			
			direction --;
			if(direction > 3 ) direction = 3;
     f0a:	d3 e0       	ldi	r29, 0x03	; 3
	sei();//Enable interupts, this is for I2C slave mode

	ready = false;

	for(;;){
		walls = readWalls2(direction);
     f0c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <direction>
     f10:	0e 94 1a 05 	call	0xa34	; 0xa34 <_Z10readWalls2h>
     f14:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <walls>
		ready = true;
     f18:	c0 93 0b 01 	sts	0x010B, r28	; 0x80010b <ready>
		PORTD |= 0b00000100;//Sets ready
     f1c:	5a 9a       	sbi	0x0b, 2	; 11
		while(ready){
     f1e:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <ready>
     f22:	88 23       	and	r24, r24
     f24:	51 f0       	breq	.+20     	; 0xf3a <main+0x4e>
     f26:	8f e1       	ldi	r24, 0x1F	; 31
     f28:	9e e4       	ldi	r25, 0x4E	; 78
     f2a:	01 97       	sbiw	r24, 0x01	; 1
     f2c:	f1 f7       	brne	.-4      	; 0xf2a <main+0x3e>
     f2e:	00 c0       	rjmp	.+0      	; 0xf30 <main+0x44>
     f30:	00 00       	nop
     f32:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <ready>
     f36:	81 11       	cpse	r24, r1
     f38:	f6 cf       	rjmp	.-20     	; 0xf26 <main+0x3a>
			_delay_ms(10);
			//walls = readWalls2(direction);
		}
		PORTD &= 0b11111011;//Sets not ready line
     f3a:	5a 98       	cbi	0x0b, 2	; 11
		if(left){
     f3c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <left>
     f40:	88 23       	and	r24, r24
     f42:	21 f1       	breq	.+72     	; 0xf8c <main+0xa0>
     f44:	9f ef       	ldi	r25, 0xFF	; 255
     f46:	21 ee       	ldi	r18, 0xE1	; 225
     f48:	84 e0       	ldi	r24, 0x04	; 4
     f4a:	91 50       	subi	r25, 0x01	; 1
     f4c:	20 40       	sbci	r18, 0x00	; 0
     f4e:	80 40       	sbci	r24, 0x00	; 0
     f50:	e1 f7       	brne	.-8      	; 0xf4a <main+0x5e>
     f52:	00 c0       	rjmp	.+0      	; 0xf54 <main+0x68>
     f54:	00 00       	nop
			_delay_ms(200);
			leftTurnGyro();
     f56:	0e 94 24 04 	call	0x848	; 0x848 <_Z12leftTurnGyrov>
     f5a:	9f ef       	ldi	r25, 0xFF	; 255
     f5c:	24 e3       	ldi	r18, 0x34	; 52
     f5e:	8c e0       	ldi	r24, 0x0C	; 12
     f60:	91 50       	subi	r25, 0x01	; 1
     f62:	20 40       	sbci	r18, 0x00	; 0
     f64:	80 40       	sbci	r24, 0x00	; 0
     f66:	e1 f7       	brne	.-8      	; 0xf60 <main+0x74>
     f68:	00 c0       	rjmp	.+0      	; 0xf6a <main+0x7e>
     f6a:	00 00       	nop
			_delay_ms(500);
			moveStraightGyro(14);
     f6c:	6c 2f       	mov	r22, r28
     f6e:	8e e0       	ldi	r24, 0x0E	; 14
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	0e 94 11 03 	call	0x622	; 0x622 <_Z16moveStraightGyrojb>
			
			direction --;
     f76:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <direction>
     f7a:	81 50       	subi	r24, 0x01	; 1
			if(direction > 3 ) direction = 3;
     f7c:	84 30       	cpi	r24, 0x04	; 4
     f7e:	18 f4       	brcc	.+6      	; 0xf86 <main+0x9a>
			_delay_ms(200);
			leftTurnGyro();
			_delay_ms(500);
			moveStraightGyro(14);
			
			direction --;
     f80:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <direction>
     f84:	47 c1       	rjmp	.+654    	; 0x1214 <main+0x328>
			if(direction > 3 ) direction = 3;
     f86:	d0 93 0e 01 	sts	0x010E, r29	; 0x80010e <direction>
     f8a:	44 c1       	rjmp	.+648    	; 0x1214 <main+0x328>
			
		}else if(fwrd){
     f8c:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <fwrd>
     f90:	88 23       	and	r24, r24
     f92:	79 f0       	breq	.+30     	; 0xfb2 <main+0xc6>
     f94:	9f ef       	ldi	r25, 0xFF	; 255
     f96:	21 ee       	ldi	r18, 0xE1	; 225
     f98:	84 e0       	ldi	r24, 0x04	; 4
     f9a:	91 50       	subi	r25, 0x01	; 1
     f9c:	20 40       	sbci	r18, 0x00	; 0
     f9e:	80 40       	sbci	r24, 0x00	; 0
     fa0:	e1 f7       	brne	.-8      	; 0xf9a <main+0xae>
     fa2:	00 c0       	rjmp	.+0      	; 0xfa4 <main+0xb8>
     fa4:	00 00       	nop
			_delay_ms(200);
			moveStraightGyro(14);
     fa6:	6c 2f       	mov	r22, r28
     fa8:	8e e0       	ldi	r24, 0x0E	; 14
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	0e 94 11 03 	call	0x622	; 0x622 <_Z16moveStraightGyrojb>
     fb0:	31 c1       	rjmp	.+610    	; 0x1214 <main+0x328>
		}else if(right){
     fb2:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <right>
     fb6:	88 23       	and	r24, r24
     fb8:	21 f1       	breq	.+72     	; 0x1002 <main+0x116>
     fba:	9f ef       	ldi	r25, 0xFF	; 255
     fbc:	21 ee       	ldi	r18, 0xE1	; 225
     fbe:	84 e0       	ldi	r24, 0x04	; 4
     fc0:	91 50       	subi	r25, 0x01	; 1
     fc2:	20 40       	sbci	r18, 0x00	; 0
     fc4:	80 40       	sbci	r24, 0x00	; 0
     fc6:	e1 f7       	brne	.-8      	; 0xfc0 <main+0xd4>
     fc8:	00 c0       	rjmp	.+0      	; 0xfca <main+0xde>
     fca:	00 00       	nop
			_delay_ms(200);
			rightTurnGyro();
     fcc:	0e 94 a2 04 	call	0x944	; 0x944 <_Z13rightTurnGyrov>
     fd0:	9f ef       	ldi	r25, 0xFF	; 255
     fd2:	24 e3       	ldi	r18, 0x34	; 52
     fd4:	8c e0       	ldi	r24, 0x0C	; 12
     fd6:	91 50       	subi	r25, 0x01	; 1
     fd8:	20 40       	sbci	r18, 0x00	; 0
     fda:	80 40       	sbci	r24, 0x00	; 0
     fdc:	e1 f7       	brne	.-8      	; 0xfd6 <main+0xea>
     fde:	00 c0       	rjmp	.+0      	; 0xfe0 <main+0xf4>
     fe0:	00 00       	nop
			_delay_ms(500);
			moveStraightGyro(14);
     fe2:	6c 2f       	mov	r22, r28
     fe4:	8e e0       	ldi	r24, 0x0E	; 14
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	0e 94 11 03 	call	0x622	; 0x622 <_Z16moveStraightGyrojb>
			
			direction++;
     fec:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <direction>
     ff0:	8f 5f       	subi	r24, 0xFF	; 255
			
			if(direction > 3)direction = 0;
     ff2:	84 30       	cpi	r24, 0x04	; 4
     ff4:	18 f4       	brcc	.+6      	; 0xffc <main+0x110>
			_delay_ms(200);
			rightTurnGyro();
			_delay_ms(500);
			moveStraightGyro(14);
			
			direction++;
     ff6:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <direction>
     ffa:	0c c1       	rjmp	.+536    	; 0x1214 <main+0x328>
			
			if(direction > 3)direction = 0;
     ffc:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <direction>
    1000:	09 c1       	rjmp	.+530    	; 0x1214 <main+0x328>
		}else if(reverse){
    1002:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <reverse>
    1006:	88 23       	and	r24, r24
    1008:	c1 f0       	breq	.+48     	; 0x103a <main+0x14e>
    100a:	9f ef       	ldi	r25, 0xFF	; 255
    100c:	21 ee       	ldi	r18, 0xE1	; 225
    100e:	84 e0       	ldi	r24, 0x04	; 4
    1010:	91 50       	subi	r25, 0x01	; 1
    1012:	20 40       	sbci	r18, 0x00	; 0
    1014:	80 40       	sbci	r24, 0x00	; 0
    1016:	e1 f7       	brne	.-8      	; 0x1010 <main+0x124>
    1018:	00 c0       	rjmp	.+0      	; 0x101a <main+0x12e>
    101a:	00 00       	nop
			_delay_ms(200);
			turn180();
    101c:	0e 94 5d 05 	call	0xaba	; 0xaba <_Z7turn180v>
			
			direction += 2;
    1020:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <direction>
    1024:	92 e0       	ldi	r25, 0x02	; 2
    1026:	98 0f       	add	r25, r24
			
			if(direction > 3)direction = direction - 4;
    1028:	94 30       	cpi	r25, 0x04	; 4
    102a:	18 f4       	brcc	.+6      	; 0x1032 <main+0x146>
			if(direction > 3)direction = 0;
		}else if(reverse){
			_delay_ms(200);
			turn180();
			
			direction += 2;
    102c:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <direction>
    1030:	f1 c0       	rjmp	.+482    	; 0x1214 <main+0x328>
			
			if(direction > 3)direction = direction - 4;
    1032:	82 50       	subi	r24, 0x02	; 2
    1034:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <direction>
    1038:	ed c0       	rjmp	.+474    	; 0x1214 <main+0x328>
			 
		}else if(moveNorth){
    103a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <moveNorth>
    103e:	88 23       	and	r24, r24
    1040:	71 f0       	breq	.+28     	; 0x105e <main+0x172>
    1042:	9f ef       	ldi	r25, 0xFF	; 255
    1044:	21 ee       	ldi	r18, 0xE1	; 225
    1046:	84 e0       	ldi	r24, 0x04	; 4
    1048:	91 50       	subi	r25, 0x01	; 1
    104a:	20 40       	sbci	r18, 0x00	; 0
    104c:	80 40       	sbci	r24, 0x00	; 0
    104e:	e1 f7       	brne	.-8      	; 0x1048 <main+0x15c>
    1050:	00 c0       	rjmp	.+0      	; 0x1052 <main+0x166>
    1052:	00 00       	nop
			_delay_ms(200);
			north(&direction);
    1054:	8e e0       	ldi	r24, 0x0E	; 14
    1056:	91 e0       	ldi	r25, 0x01	; 1
    1058:	0e 94 6b 05 	call	0xad6	; 0xad6 <_Z5northPh>
    105c:	db c0       	rjmp	.+438    	; 0x1214 <main+0x328>
		}else if(moveEast){
    105e:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <moveEast>
    1062:	88 23       	and	r24, r24
    1064:	71 f0       	breq	.+28     	; 0x1082 <main+0x196>
    1066:	9f ef       	ldi	r25, 0xFF	; 255
    1068:	21 ee       	ldi	r18, 0xE1	; 225
    106a:	84 e0       	ldi	r24, 0x04	; 4
    106c:	91 50       	subi	r25, 0x01	; 1
    106e:	20 40       	sbci	r18, 0x00	; 0
    1070:	80 40       	sbci	r24, 0x00	; 0
    1072:	e1 f7       	brne	.-8      	; 0x106c <main+0x180>
    1074:	00 c0       	rjmp	.+0      	; 0x1076 <main+0x18a>
    1076:	00 00       	nop
			_delay_ms(200);
			east(&direction);
    1078:	8e e0       	ldi	r24, 0x0E	; 14
    107a:	91 e0       	ldi	r25, 0x01	; 1
    107c:	0e 94 cb 05 	call	0xb96	; 0xb96 <_Z4eastPh>
    1080:	c9 c0       	rjmp	.+402    	; 0x1214 <main+0x328>
		}else if(moveSouth){
    1082:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <moveSouth>
    1086:	88 23       	and	r24, r24
    1088:	71 f0       	breq	.+28     	; 0x10a6 <main+0x1ba>
    108a:	9f ef       	ldi	r25, 0xFF	; 255
    108c:	21 ee       	ldi	r18, 0xE1	; 225
    108e:	84 e0       	ldi	r24, 0x04	; 4
    1090:	91 50       	subi	r25, 0x01	; 1
    1092:	20 40       	sbci	r18, 0x00	; 0
    1094:	80 40       	sbci	r24, 0x00	; 0
    1096:	e1 f7       	brne	.-8      	; 0x1090 <main+0x1a4>
    1098:	00 c0       	rjmp	.+0      	; 0x109a <main+0x1ae>
    109a:	00 00       	nop
			_delay_ms(200);
			south(&direction);
    109c:	8e e0       	ldi	r24, 0x0E	; 14
    109e:	91 e0       	ldi	r25, 0x01	; 1
    10a0:	0e 94 2c 06 	call	0xc58	; 0xc58 <_Z5southPh>
    10a4:	b7 c0       	rjmp	.+366    	; 0x1214 <main+0x328>
		}else if(moveWest){
    10a6:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <moveWest>
    10aa:	88 23       	and	r24, r24
    10ac:	71 f0       	breq	.+28     	; 0x10ca <main+0x1de>
    10ae:	9f ef       	ldi	r25, 0xFF	; 255
    10b0:	21 ee       	ldi	r18, 0xE1	; 225
    10b2:	84 e0       	ldi	r24, 0x04	; 4
    10b4:	91 50       	subi	r25, 0x01	; 1
    10b6:	20 40       	sbci	r18, 0x00	; 0
    10b8:	80 40       	sbci	r24, 0x00	; 0
    10ba:	e1 f7       	brne	.-8      	; 0x10b4 <main+0x1c8>
    10bc:	00 c0       	rjmp	.+0      	; 0x10be <main+0x1d2>
    10be:	00 00       	nop
			_delay_ms(200);
			west(&direction);
    10c0:	8e e0       	ldi	r24, 0x0E	; 14
    10c2:	91 e0       	ldi	r25, 0x01	; 1
    10c4:	0e 94 8d 06 	call	0xd1a	; 0xd1a <_Z4westPh>
    10c8:	a5 c0       	rjmp	.+330    	; 0x1214 <main+0x328>
		}else if(beep1){
    10ca:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <beep1>
    10ce:	88 23       	and	r24, r24
    10d0:	19 f0       	breq	.+6      	; 0x10d8 <main+0x1ec>
			beep();
    10d2:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
    10d6:	9e c0       	rjmp	.+316    	; 0x1214 <main+0x328>
		}else if(beep2){
    10d8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <beep2>
    10dc:	88 23       	and	r24, r24
    10de:	71 f0       	breq	.+28     	; 0x10fc <main+0x210>
			beep();
    10e0:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
    10e4:	9f ef       	ldi	r25, 0xFF	; 255
    10e6:	21 ee       	ldi	r18, 0xE1	; 225
    10e8:	84 e0       	ldi	r24, 0x04	; 4
    10ea:	91 50       	subi	r25, 0x01	; 1
    10ec:	20 40       	sbci	r18, 0x00	; 0
    10ee:	80 40       	sbci	r24, 0x00	; 0
    10f0:	e1 f7       	brne	.-8      	; 0x10ea <main+0x1fe>
    10f2:	00 c0       	rjmp	.+0      	; 0x10f4 <main+0x208>
    10f4:	00 00       	nop
			_delay_ms(200);
			beep();
    10f6:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
    10fa:	8c c0       	rjmp	.+280    	; 0x1214 <main+0x328>
		}else if(bombBeep){
    10fc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
    1100:	88 23       	and	r24, r24
    1102:	09 f4       	brne	.+2      	; 0x1106 <main+0x21a>
    1104:	87 c0       	rjmp	.+270    	; 0x1214 <main+0x328>
			beep();
    1106:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
    110a:	9f ef       	ldi	r25, 0xFF	; 255
    110c:	24 e3       	ldi	r18, 0x34	; 52
    110e:	8c e0       	ldi	r24, 0x0C	; 12
    1110:	91 50       	subi	r25, 0x01	; 1
    1112:	20 40       	sbci	r18, 0x00	; 0
    1114:	80 40       	sbci	r24, 0x00	; 0
    1116:	e1 f7       	brne	.-8      	; 0x1110 <main+0x224>
    1118:	00 c0       	rjmp	.+0      	; 0x111a <main+0x22e>
    111a:	00 00       	nop
			_delay_ms(500);
			beep();
    111c:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
    1120:	9f ef       	ldi	r25, 0xFF	; 255
    1122:	23 ec       	ldi	r18, 0xC3	; 195
    1124:	89 e0       	ldi	r24, 0x09	; 9
    1126:	91 50       	subi	r25, 0x01	; 1
    1128:	20 40       	sbci	r18, 0x00	; 0
    112a:	80 40       	sbci	r24, 0x00	; 0
    112c:	e1 f7       	brne	.-8      	; 0x1126 <main+0x23a>
    112e:	00 c0       	rjmp	.+0      	; 0x1130 <main+0x244>
    1130:	00 00       	nop
			_delay_ms(400);
			beep();
    1132:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
    1136:	9f e7       	ldi	r25, 0x7F	; 127
    1138:	2b e8       	ldi	r18, 0x8B	; 139
    113a:	88 e0       	ldi	r24, 0x08	; 8
    113c:	91 50       	subi	r25, 0x01	; 1
    113e:	20 40       	sbci	r18, 0x00	; 0
    1140:	80 40       	sbci	r24, 0x00	; 0
    1142:	e1 f7       	brne	.-8      	; 0x113c <main+0x250>
    1144:	00 c0       	rjmp	.+0      	; 0x1146 <main+0x25a>
    1146:	00 00       	nop
			_delay_ms(350);
			beep();
    1148:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
    114c:	9f ef       	ldi	r25, 0xFF	; 255
    114e:	22 e5       	ldi	r18, 0x52	; 82
    1150:	87 e0       	ldi	r24, 0x07	; 7
    1152:	91 50       	subi	r25, 0x01	; 1
    1154:	20 40       	sbci	r18, 0x00	; 0
    1156:	80 40       	sbci	r24, 0x00	; 0
    1158:	e1 f7       	brne	.-8      	; 0x1152 <main+0x266>
    115a:	00 c0       	rjmp	.+0      	; 0x115c <main+0x270>
    115c:	00 00       	nop
			_delay_ms(300);
			beep();
    115e:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
    1162:	9f e7       	ldi	r25, 0x7F	; 127
    1164:	2a e1       	ldi	r18, 0x1A	; 26
    1166:	86 e0       	ldi	r24, 0x06	; 6
    1168:	91 50       	subi	r25, 0x01	; 1
    116a:	20 40       	sbci	r18, 0x00	; 0
    116c:	80 40       	sbci	r24, 0x00	; 0
    116e:	e1 f7       	brne	.-8      	; 0x1168 <main+0x27c>
    1170:	00 c0       	rjmp	.+0      	; 0x1172 <main+0x286>
    1172:	00 00       	nop
			_delay_ms(250);
			beep();
    1174:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
    1178:	9f ef       	ldi	r25, 0xFF	; 255
    117a:	21 ee       	ldi	r18, 0xE1	; 225
    117c:	84 e0       	ldi	r24, 0x04	; 4
    117e:	91 50       	subi	r25, 0x01	; 1
    1180:	20 40       	sbci	r18, 0x00	; 0
    1182:	80 40       	sbci	r24, 0x00	; 0
    1184:	e1 f7       	brne	.-8      	; 0x117e <main+0x292>
    1186:	00 c0       	rjmp	.+0      	; 0x1188 <main+0x29c>
    1188:	00 00       	nop
			_delay_ms(200);
			beep();
    118a:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
    118e:	9f e7       	ldi	r25, 0x7F	; 127
    1190:	29 ea       	ldi	r18, 0xA9	; 169
    1192:	83 e0       	ldi	r24, 0x03	; 3
    1194:	91 50       	subi	r25, 0x01	; 1
    1196:	20 40       	sbci	r18, 0x00	; 0
    1198:	80 40       	sbci	r24, 0x00	; 0
    119a:	e1 f7       	brne	.-8      	; 0x1194 <main+0x2a8>
    119c:	00 c0       	rjmp	.+0      	; 0x119e <main+0x2b2>
    119e:	00 00       	nop
			_delay_ms(150);
			beep();
    11a0:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
    11a4:	9f ef       	ldi	r25, 0xFF	; 255
    11a6:	20 e7       	ldi	r18, 0x70	; 112
    11a8:	82 e0       	ldi	r24, 0x02	; 2
    11aa:	91 50       	subi	r25, 0x01	; 1
    11ac:	20 40       	sbci	r18, 0x00	; 0
    11ae:	80 40       	sbci	r24, 0x00	; 0
    11b0:	e1 f7       	brne	.-8      	; 0x11aa <main+0x2be>
    11b2:	00 c0       	rjmp	.+0      	; 0x11b4 <main+0x2c8>
    11b4:	00 00       	nop
			_delay_ms(100);
			beep();
    11b6:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
    11ba:	9f e7       	ldi	r25, 0x7F	; 127
    11bc:	28 e3       	ldi	r18, 0x38	; 56
    11be:	81 e0       	ldi	r24, 0x01	; 1
    11c0:	91 50       	subi	r25, 0x01	; 1
    11c2:	20 40       	sbci	r18, 0x00	; 0
    11c4:	80 40       	sbci	r24, 0x00	; 0
    11c6:	e1 f7       	brne	.-8      	; 0x11c0 <main+0x2d4>
    11c8:	00 c0       	rjmp	.+0      	; 0x11ca <main+0x2de>
    11ca:	00 00       	nop
			_delay_ms(50);
			beep();
    11cc:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
    11d0:	9f e7       	ldi	r25, 0x7F	; 127
    11d2:	28 e3       	ldi	r18, 0x38	; 56
    11d4:	81 e0       	ldi	r24, 0x01	; 1
    11d6:	91 50       	subi	r25, 0x01	; 1
    11d8:	20 40       	sbci	r18, 0x00	; 0
    11da:	80 40       	sbci	r24, 0x00	; 0
    11dc:	e1 f7       	brne	.-8      	; 0x11d6 <main+0x2ea>
    11de:	00 c0       	rjmp	.+0      	; 0x11e0 <main+0x2f4>
    11e0:	00 00       	nop
			_delay_ms(50);
			beep();
    11e2:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
    11e6:	9f e7       	ldi	r25, 0x7F	; 127
    11e8:	28 e3       	ldi	r18, 0x38	; 56
    11ea:	81 e0       	ldi	r24, 0x01	; 1
    11ec:	91 50       	subi	r25, 0x01	; 1
    11ee:	20 40       	sbci	r18, 0x00	; 0
    11f0:	80 40       	sbci	r24, 0x00	; 0
    11f2:	e1 f7       	brne	.-8      	; 0x11ec <main+0x300>
    11f4:	00 c0       	rjmp	.+0      	; 0x11f6 <main+0x30a>
    11f6:	00 00       	nop
			_delay_ms(50);
			
			beep();
    11f8:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
			beep();
    11fc:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
			beep();
    1200:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
			beep();
    1204:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
			beep();
    1208:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
			beep();
    120c:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
			beep();
    1210:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z4beepv>
		}
		
		ready = true;
    1214:	c0 93 0b 01 	sts	0x010B, r28	; 0x80010b <ready>
		
		left = false;
    1218:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <left>
		fwrd = false;
    121c:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <fwrd>
		right = false;
    1220:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <right>
		reverse = false;
    1224:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <reverse>
		moveNorth = false;
    1228:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <moveNorth>
		moveEast = false;
    122c:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <moveEast>
		moveSouth = false;
    1230:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <moveSouth>
		moveWest = false;
    1234:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <moveWest>
		beep1 = false;
    1238:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <beep1>
		beep2 = false;
    123c:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <beep2>
		bombBeep = false;
    1240:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
	//lowBatt();
	sei();//Enable interupts, this is for I2C slave mode

	ready = false;

	for(;;){
    1244:	63 ce       	rjmp	.-826    	; 0xf0c <main+0x20>

00001246 <__divmodhi4>:
    1246:	97 fb       	bst	r25, 7
    1248:	07 2e       	mov	r0, r23
    124a:	16 f4       	brtc	.+4      	; 0x1250 <__divmodhi4+0xa>
    124c:	00 94       	com	r0
    124e:	07 d0       	rcall	.+14     	; 0x125e <__divmodhi4_neg1>
    1250:	77 fd       	sbrc	r23, 7
    1252:	09 d0       	rcall	.+18     	; 0x1266 <__divmodhi4_neg2>
    1254:	0e 94 37 09 	call	0x126e	; 0x126e <__udivmodhi4>
    1258:	07 fc       	sbrc	r0, 7
    125a:	05 d0       	rcall	.+10     	; 0x1266 <__divmodhi4_neg2>
    125c:	3e f4       	brtc	.+14     	; 0x126c <__divmodhi4_exit>

0000125e <__divmodhi4_neg1>:
    125e:	90 95       	com	r25
    1260:	81 95       	neg	r24
    1262:	9f 4f       	sbci	r25, 0xFF	; 255
    1264:	08 95       	ret

00001266 <__divmodhi4_neg2>:
    1266:	70 95       	com	r23
    1268:	61 95       	neg	r22
    126a:	7f 4f       	sbci	r23, 0xFF	; 255

0000126c <__divmodhi4_exit>:
    126c:	08 95       	ret

0000126e <__udivmodhi4>:
    126e:	aa 1b       	sub	r26, r26
    1270:	bb 1b       	sub	r27, r27
    1272:	51 e1       	ldi	r21, 0x11	; 17
    1274:	07 c0       	rjmp	.+14     	; 0x1284 <__udivmodhi4_ep>

00001276 <__udivmodhi4_loop>:
    1276:	aa 1f       	adc	r26, r26
    1278:	bb 1f       	adc	r27, r27
    127a:	a6 17       	cp	r26, r22
    127c:	b7 07       	cpc	r27, r23
    127e:	10 f0       	brcs	.+4      	; 0x1284 <__udivmodhi4_ep>
    1280:	a6 1b       	sub	r26, r22
    1282:	b7 0b       	sbc	r27, r23

00001284 <__udivmodhi4_ep>:
    1284:	88 1f       	adc	r24, r24
    1286:	99 1f       	adc	r25, r25
    1288:	5a 95       	dec	r21
    128a:	a9 f7       	brne	.-22     	; 0x1276 <__udivmodhi4_loop>
    128c:	80 95       	com	r24
    128e:	90 95       	com	r25
    1290:	bc 01       	movw	r22, r24
    1292:	cd 01       	movw	r24, r26
    1294:	08 95       	ret

00001296 <__fixsfsi>:
    1296:	0e 94 52 09 	call	0x12a4	; 0x12a4 <__fixunssfsi>
    129a:	68 94       	set
    129c:	b1 11       	cpse	r27, r1
    129e:	0c 94 09 0a 	jmp	0x1412	; 0x1412 <__fp_szero>
    12a2:	08 95       	ret

000012a4 <__fixunssfsi>:
    12a4:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__fp_splitA>
    12a8:	88 f0       	brcs	.+34     	; 0x12cc <__fixunssfsi+0x28>
    12aa:	9f 57       	subi	r25, 0x7F	; 127
    12ac:	98 f0       	brcs	.+38     	; 0x12d4 <__fixunssfsi+0x30>
    12ae:	b9 2f       	mov	r27, r25
    12b0:	99 27       	eor	r25, r25
    12b2:	b7 51       	subi	r27, 0x17	; 23
    12b4:	b0 f0       	brcs	.+44     	; 0x12e2 <__fixunssfsi+0x3e>
    12b6:	e1 f0       	breq	.+56     	; 0x12f0 <__fixunssfsi+0x4c>
    12b8:	66 0f       	add	r22, r22
    12ba:	77 1f       	adc	r23, r23
    12bc:	88 1f       	adc	r24, r24
    12be:	99 1f       	adc	r25, r25
    12c0:	1a f0       	brmi	.+6      	; 0x12c8 <__fixunssfsi+0x24>
    12c2:	ba 95       	dec	r27
    12c4:	c9 f7       	brne	.-14     	; 0x12b8 <__fixunssfsi+0x14>
    12c6:	14 c0       	rjmp	.+40     	; 0x12f0 <__fixunssfsi+0x4c>
    12c8:	b1 30       	cpi	r27, 0x01	; 1
    12ca:	91 f0       	breq	.+36     	; 0x12f0 <__fixunssfsi+0x4c>
    12cc:	0e 94 08 0a 	call	0x1410	; 0x1410 <__fp_zero>
    12d0:	b1 e0       	ldi	r27, 0x01	; 1
    12d2:	08 95       	ret
    12d4:	0c 94 08 0a 	jmp	0x1410	; 0x1410 <__fp_zero>
    12d8:	67 2f       	mov	r22, r23
    12da:	78 2f       	mov	r23, r24
    12dc:	88 27       	eor	r24, r24
    12de:	b8 5f       	subi	r27, 0xF8	; 248
    12e0:	39 f0       	breq	.+14     	; 0x12f0 <__fixunssfsi+0x4c>
    12e2:	b9 3f       	cpi	r27, 0xF9	; 249
    12e4:	cc f3       	brlt	.-14     	; 0x12d8 <__fixunssfsi+0x34>
    12e6:	86 95       	lsr	r24
    12e8:	77 95       	ror	r23
    12ea:	67 95       	ror	r22
    12ec:	b3 95       	inc	r27
    12ee:	d9 f7       	brne	.-10     	; 0x12e6 <__fixunssfsi+0x42>
    12f0:	3e f4       	brtc	.+14     	; 0x1300 <__fixunssfsi+0x5c>
    12f2:	90 95       	com	r25
    12f4:	80 95       	com	r24
    12f6:	70 95       	com	r23
    12f8:	61 95       	neg	r22
    12fa:	7f 4f       	sbci	r23, 0xFF	; 255
    12fc:	8f 4f       	sbci	r24, 0xFF	; 255
    12fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1300:	08 95       	ret

00001302 <__floatunsisf>:
    1302:	e8 94       	clt
    1304:	09 c0       	rjmp	.+18     	; 0x1318 <__floatsisf+0x12>

00001306 <__floatsisf>:
    1306:	97 fb       	bst	r25, 7
    1308:	3e f4       	brtc	.+14     	; 0x1318 <__floatsisf+0x12>
    130a:	90 95       	com	r25
    130c:	80 95       	com	r24
    130e:	70 95       	com	r23
    1310:	61 95       	neg	r22
    1312:	7f 4f       	sbci	r23, 0xFF	; 255
    1314:	8f 4f       	sbci	r24, 0xFF	; 255
    1316:	9f 4f       	sbci	r25, 0xFF	; 255
    1318:	99 23       	and	r25, r25
    131a:	a9 f0       	breq	.+42     	; 0x1346 <__floatsisf+0x40>
    131c:	f9 2f       	mov	r31, r25
    131e:	96 e9       	ldi	r25, 0x96	; 150
    1320:	bb 27       	eor	r27, r27
    1322:	93 95       	inc	r25
    1324:	f6 95       	lsr	r31
    1326:	87 95       	ror	r24
    1328:	77 95       	ror	r23
    132a:	67 95       	ror	r22
    132c:	b7 95       	ror	r27
    132e:	f1 11       	cpse	r31, r1
    1330:	f8 cf       	rjmp	.-16     	; 0x1322 <__floatsisf+0x1c>
    1332:	fa f4       	brpl	.+62     	; 0x1372 <__floatsisf+0x6c>
    1334:	bb 0f       	add	r27, r27
    1336:	11 f4       	brne	.+4      	; 0x133c <__floatsisf+0x36>
    1338:	60 ff       	sbrs	r22, 0
    133a:	1b c0       	rjmp	.+54     	; 0x1372 <__floatsisf+0x6c>
    133c:	6f 5f       	subi	r22, 0xFF	; 255
    133e:	7f 4f       	sbci	r23, 0xFF	; 255
    1340:	8f 4f       	sbci	r24, 0xFF	; 255
    1342:	9f 4f       	sbci	r25, 0xFF	; 255
    1344:	16 c0       	rjmp	.+44     	; 0x1372 <__floatsisf+0x6c>
    1346:	88 23       	and	r24, r24
    1348:	11 f0       	breq	.+4      	; 0x134e <__floatsisf+0x48>
    134a:	96 e9       	ldi	r25, 0x96	; 150
    134c:	11 c0       	rjmp	.+34     	; 0x1370 <__floatsisf+0x6a>
    134e:	77 23       	and	r23, r23
    1350:	21 f0       	breq	.+8      	; 0x135a <__floatsisf+0x54>
    1352:	9e e8       	ldi	r25, 0x8E	; 142
    1354:	87 2f       	mov	r24, r23
    1356:	76 2f       	mov	r23, r22
    1358:	05 c0       	rjmp	.+10     	; 0x1364 <__floatsisf+0x5e>
    135a:	66 23       	and	r22, r22
    135c:	71 f0       	breq	.+28     	; 0x137a <__floatsisf+0x74>
    135e:	96 e8       	ldi	r25, 0x86	; 134
    1360:	86 2f       	mov	r24, r22
    1362:	70 e0       	ldi	r23, 0x00	; 0
    1364:	60 e0       	ldi	r22, 0x00	; 0
    1366:	2a f0       	brmi	.+10     	; 0x1372 <__floatsisf+0x6c>
    1368:	9a 95       	dec	r25
    136a:	66 0f       	add	r22, r22
    136c:	77 1f       	adc	r23, r23
    136e:	88 1f       	adc	r24, r24
    1370:	da f7       	brpl	.-10     	; 0x1368 <__floatsisf+0x62>
    1372:	88 0f       	add	r24, r24
    1374:	96 95       	lsr	r25
    1376:	87 95       	ror	r24
    1378:	97 f9       	bld	r25, 7
    137a:	08 95       	ret

0000137c <__fp_inf>:
    137c:	97 f9       	bld	r25, 7
    137e:	9f 67       	ori	r25, 0x7F	; 127
    1380:	80 e8       	ldi	r24, 0x80	; 128
    1382:	70 e0       	ldi	r23, 0x00	; 0
    1384:	60 e0       	ldi	r22, 0x00	; 0
    1386:	08 95       	ret

00001388 <__fp_nan>:
    1388:	9f ef       	ldi	r25, 0xFF	; 255
    138a:	80 ec       	ldi	r24, 0xC0	; 192
    138c:	08 95       	ret

0000138e <__fp_pscA>:
    138e:	00 24       	eor	r0, r0
    1390:	0a 94       	dec	r0
    1392:	16 16       	cp	r1, r22
    1394:	17 06       	cpc	r1, r23
    1396:	18 06       	cpc	r1, r24
    1398:	09 06       	cpc	r0, r25
    139a:	08 95       	ret

0000139c <__fp_pscB>:
    139c:	00 24       	eor	r0, r0
    139e:	0a 94       	dec	r0
    13a0:	12 16       	cp	r1, r18
    13a2:	13 06       	cpc	r1, r19
    13a4:	14 06       	cpc	r1, r20
    13a6:	05 06       	cpc	r0, r21
    13a8:	08 95       	ret

000013aa <__fp_round>:
    13aa:	09 2e       	mov	r0, r25
    13ac:	03 94       	inc	r0
    13ae:	00 0c       	add	r0, r0
    13b0:	11 f4       	brne	.+4      	; 0x13b6 <__fp_round+0xc>
    13b2:	88 23       	and	r24, r24
    13b4:	52 f0       	brmi	.+20     	; 0x13ca <__fp_round+0x20>
    13b6:	bb 0f       	add	r27, r27
    13b8:	40 f4       	brcc	.+16     	; 0x13ca <__fp_round+0x20>
    13ba:	bf 2b       	or	r27, r31
    13bc:	11 f4       	brne	.+4      	; 0x13c2 <__fp_round+0x18>
    13be:	60 ff       	sbrs	r22, 0
    13c0:	04 c0       	rjmp	.+8      	; 0x13ca <__fp_round+0x20>
    13c2:	6f 5f       	subi	r22, 0xFF	; 255
    13c4:	7f 4f       	sbci	r23, 0xFF	; 255
    13c6:	8f 4f       	sbci	r24, 0xFF	; 255
    13c8:	9f 4f       	sbci	r25, 0xFF	; 255
    13ca:	08 95       	ret

000013cc <__fp_split3>:
    13cc:	57 fd       	sbrc	r21, 7
    13ce:	90 58       	subi	r25, 0x80	; 128
    13d0:	44 0f       	add	r20, r20
    13d2:	55 1f       	adc	r21, r21
    13d4:	59 f0       	breq	.+22     	; 0x13ec <__fp_splitA+0x10>
    13d6:	5f 3f       	cpi	r21, 0xFF	; 255
    13d8:	71 f0       	breq	.+28     	; 0x13f6 <__fp_splitA+0x1a>
    13da:	47 95       	ror	r20

000013dc <__fp_splitA>:
    13dc:	88 0f       	add	r24, r24
    13de:	97 fb       	bst	r25, 7
    13e0:	99 1f       	adc	r25, r25
    13e2:	61 f0       	breq	.+24     	; 0x13fc <__fp_splitA+0x20>
    13e4:	9f 3f       	cpi	r25, 0xFF	; 255
    13e6:	79 f0       	breq	.+30     	; 0x1406 <__fp_splitA+0x2a>
    13e8:	87 95       	ror	r24
    13ea:	08 95       	ret
    13ec:	12 16       	cp	r1, r18
    13ee:	13 06       	cpc	r1, r19
    13f0:	14 06       	cpc	r1, r20
    13f2:	55 1f       	adc	r21, r21
    13f4:	f2 cf       	rjmp	.-28     	; 0x13da <__fp_split3+0xe>
    13f6:	46 95       	lsr	r20
    13f8:	f1 df       	rcall	.-30     	; 0x13dc <__fp_splitA>
    13fa:	08 c0       	rjmp	.+16     	; 0x140c <__fp_splitA+0x30>
    13fc:	16 16       	cp	r1, r22
    13fe:	17 06       	cpc	r1, r23
    1400:	18 06       	cpc	r1, r24
    1402:	99 1f       	adc	r25, r25
    1404:	f1 cf       	rjmp	.-30     	; 0x13e8 <__fp_splitA+0xc>
    1406:	86 95       	lsr	r24
    1408:	71 05       	cpc	r23, r1
    140a:	61 05       	cpc	r22, r1
    140c:	08 94       	sec
    140e:	08 95       	ret

00001410 <__fp_zero>:
    1410:	e8 94       	clt

00001412 <__fp_szero>:
    1412:	bb 27       	eor	r27, r27
    1414:	66 27       	eor	r22, r22
    1416:	77 27       	eor	r23, r23
    1418:	cb 01       	movw	r24, r22
    141a:	97 f9       	bld	r25, 7
    141c:	08 95       	ret

0000141e <__mulsf3>:
    141e:	0e 94 22 0a 	call	0x1444	; 0x1444 <__mulsf3x>
    1422:	0c 94 d5 09 	jmp	0x13aa	; 0x13aa <__fp_round>
    1426:	0e 94 c7 09 	call	0x138e	; 0x138e <__fp_pscA>
    142a:	38 f0       	brcs	.+14     	; 0x143a <__mulsf3+0x1c>
    142c:	0e 94 ce 09 	call	0x139c	; 0x139c <__fp_pscB>
    1430:	20 f0       	brcs	.+8      	; 0x143a <__mulsf3+0x1c>
    1432:	95 23       	and	r25, r21
    1434:	11 f0       	breq	.+4      	; 0x143a <__mulsf3+0x1c>
    1436:	0c 94 be 09 	jmp	0x137c	; 0x137c <__fp_inf>
    143a:	0c 94 c4 09 	jmp	0x1388	; 0x1388 <__fp_nan>
    143e:	11 24       	eor	r1, r1
    1440:	0c 94 09 0a 	jmp	0x1412	; 0x1412 <__fp_szero>

00001444 <__mulsf3x>:
    1444:	0e 94 e6 09 	call	0x13cc	; 0x13cc <__fp_split3>
    1448:	70 f3       	brcs	.-36     	; 0x1426 <__mulsf3+0x8>

0000144a <__mulsf3_pse>:
    144a:	95 9f       	mul	r25, r21
    144c:	c1 f3       	breq	.-16     	; 0x143e <__mulsf3+0x20>
    144e:	95 0f       	add	r25, r21
    1450:	50 e0       	ldi	r21, 0x00	; 0
    1452:	55 1f       	adc	r21, r21
    1454:	62 9f       	mul	r22, r18
    1456:	f0 01       	movw	r30, r0
    1458:	72 9f       	mul	r23, r18
    145a:	bb 27       	eor	r27, r27
    145c:	f0 0d       	add	r31, r0
    145e:	b1 1d       	adc	r27, r1
    1460:	63 9f       	mul	r22, r19
    1462:	aa 27       	eor	r26, r26
    1464:	f0 0d       	add	r31, r0
    1466:	b1 1d       	adc	r27, r1
    1468:	aa 1f       	adc	r26, r26
    146a:	64 9f       	mul	r22, r20
    146c:	66 27       	eor	r22, r22
    146e:	b0 0d       	add	r27, r0
    1470:	a1 1d       	adc	r26, r1
    1472:	66 1f       	adc	r22, r22
    1474:	82 9f       	mul	r24, r18
    1476:	22 27       	eor	r18, r18
    1478:	b0 0d       	add	r27, r0
    147a:	a1 1d       	adc	r26, r1
    147c:	62 1f       	adc	r22, r18
    147e:	73 9f       	mul	r23, r19
    1480:	b0 0d       	add	r27, r0
    1482:	a1 1d       	adc	r26, r1
    1484:	62 1f       	adc	r22, r18
    1486:	83 9f       	mul	r24, r19
    1488:	a0 0d       	add	r26, r0
    148a:	61 1d       	adc	r22, r1
    148c:	22 1f       	adc	r18, r18
    148e:	74 9f       	mul	r23, r20
    1490:	33 27       	eor	r19, r19
    1492:	a0 0d       	add	r26, r0
    1494:	61 1d       	adc	r22, r1
    1496:	23 1f       	adc	r18, r19
    1498:	84 9f       	mul	r24, r20
    149a:	60 0d       	add	r22, r0
    149c:	21 1d       	adc	r18, r1
    149e:	82 2f       	mov	r24, r18
    14a0:	76 2f       	mov	r23, r22
    14a2:	6a 2f       	mov	r22, r26
    14a4:	11 24       	eor	r1, r1
    14a6:	9f 57       	subi	r25, 0x7F	; 127
    14a8:	50 40       	sbci	r21, 0x00	; 0
    14aa:	9a f0       	brmi	.+38     	; 0x14d2 <__mulsf3_pse+0x88>
    14ac:	f1 f0       	breq	.+60     	; 0x14ea <__mulsf3_pse+0xa0>
    14ae:	88 23       	and	r24, r24
    14b0:	4a f0       	brmi	.+18     	; 0x14c4 <__mulsf3_pse+0x7a>
    14b2:	ee 0f       	add	r30, r30
    14b4:	ff 1f       	adc	r31, r31
    14b6:	bb 1f       	adc	r27, r27
    14b8:	66 1f       	adc	r22, r22
    14ba:	77 1f       	adc	r23, r23
    14bc:	88 1f       	adc	r24, r24
    14be:	91 50       	subi	r25, 0x01	; 1
    14c0:	50 40       	sbci	r21, 0x00	; 0
    14c2:	a9 f7       	brne	.-22     	; 0x14ae <__mulsf3_pse+0x64>
    14c4:	9e 3f       	cpi	r25, 0xFE	; 254
    14c6:	51 05       	cpc	r21, r1
    14c8:	80 f0       	brcs	.+32     	; 0x14ea <__mulsf3_pse+0xa0>
    14ca:	0c 94 be 09 	jmp	0x137c	; 0x137c <__fp_inf>
    14ce:	0c 94 09 0a 	jmp	0x1412	; 0x1412 <__fp_szero>
    14d2:	5f 3f       	cpi	r21, 0xFF	; 255
    14d4:	e4 f3       	brlt	.-8      	; 0x14ce <__mulsf3_pse+0x84>
    14d6:	98 3e       	cpi	r25, 0xE8	; 232
    14d8:	d4 f3       	brlt	.-12     	; 0x14ce <__mulsf3_pse+0x84>
    14da:	86 95       	lsr	r24
    14dc:	77 95       	ror	r23
    14de:	67 95       	ror	r22
    14e0:	b7 95       	ror	r27
    14e2:	f7 95       	ror	r31
    14e4:	e7 95       	ror	r30
    14e6:	9f 5f       	subi	r25, 0xFF	; 255
    14e8:	c1 f7       	brne	.-16     	; 0x14da <__mulsf3_pse+0x90>
    14ea:	fe 2b       	or	r31, r30
    14ec:	88 0f       	add	r24, r24
    14ee:	91 1d       	adc	r25, r1
    14f0:	96 95       	lsr	r25
    14f2:	87 95       	ror	r24
    14f4:	97 f9       	bld	r25, 7
    14f6:	08 95       	ret

000014f8 <_exit>:
    14f8:	f8 94       	cli

000014fa <__stop_program>:
    14fa:	ff cf       	rjmp	.-2      	; 0x14fa <__stop_program>
