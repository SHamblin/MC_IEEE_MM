
MicroMouse+_6_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000a02  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009ae  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000a02  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a34  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000130  00000000  00000000  00000a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001cc4  00000000  00000000  00000ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000559  00000000  00000000  00002864  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ed0  00000000  00000000  00002dbd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000334  00000000  00000000  00003c90  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000900  00000000  00000000  00003fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001a30  00000000  00000000  000048c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000158  00000000  00000000  000062f4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a0 30       	cpi	r26, 0x00	; 0
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 ca 02 	call	0x594	; 0x594 <main>
  88:	0c 94 d5 04 	jmp	0x9aa	; 0x9aa <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <_Z8I2CStarth>:
			motorSpeedRight(speedR);
		}
		
		_delay_ms(10);		
	}
}
  90:	94 ea       	ldi	r25, 0xA4	; 164
  92:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  96:	ec eb       	ldi	r30, 0xBC	; 188
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	90 81       	ld	r25, Z
  9c:	99 23       	and	r25, r25
  9e:	ec f7       	brge	.-6      	; 0x9a <_Z8I2CStarth+0xa>
  a0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
  a4:	84 e8       	ldi	r24, 0x84	; 132
  a6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  aa:	ec eb       	ldi	r30, 0xBC	; 188
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	80 81       	ld	r24, Z
  b0:	88 23       	and	r24, r24
  b2:	ec f7       	brge	.-6      	; 0xae <_Z8I2CStarth+0x1e>
  b4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  b8:	08 95       	ret

000000ba <_Z11I2CDataSendh>:
  ba:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
  be:	84 e8       	ldi	r24, 0x84	; 132
  c0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  c4:	ec eb       	ldi	r30, 0xBC	; 188
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	88 23       	and	r24, r24
  cc:	ec f7       	brge	.-6      	; 0xc8 <_Z11I2CDataSendh+0xe>
  ce:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  d2:	08 95       	ret

000000d4 <_Z11I2CDataReadb>:
  d4:	88 23       	and	r24, r24
  d6:	21 f0       	breq	.+8      	; 0xe0 <_Z11I2CDataReadb+0xc>
  d8:	84 ec       	ldi	r24, 0xC4	; 196
  da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  de:	03 c0       	rjmp	.+6      	; 0xe6 <_Z11I2CDataReadb+0x12>
  e0:	84 e8       	ldi	r24, 0x84	; 132
  e2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  e6:	84 e6       	ldi	r24, 0x64	; 100
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	ec eb       	ldi	r30, 0xBC	; 188
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	20 81       	ld	r18, Z
  f0:	22 23       	and	r18, r18
  f2:	14 f0       	brlt	.+4      	; 0xf8 <_Z11I2CDataReadb+0x24>
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	d9 f7       	brne	.-10     	; 0xee <_Z11I2CDataReadb+0x1a>
  f8:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
  fc:	08 95       	ret

000000fe <_Z8I2CPurgeh>:
  fe:	48 e2       	ldi	r20, 0x28	; 40
 100:	4a 95       	dec	r20
 102:	f1 f7       	brne	.-4      	; 0x100 <_Z8I2CPurgeh+0x2>
 104:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 108:	3d 9a       	sbi	0x07, 5	; 7
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	9c 01       	movw	r18, r24
 10e:	22 0f       	add	r18, r18
 110:	33 1f       	adc	r19, r19
 112:	22 0f       	add	r18, r18
 114:	33 1f       	adc	r19, r19
 116:	22 0f       	add	r18, r18
 118:	33 1f       	adc	r19, r19
 11a:	82 0f       	add	r24, r18
 11c:	93 1f       	adc	r25, r19
 11e:	18 16       	cp	r1, r24
 120:	19 06       	cpc	r1, r25
 122:	8c f4       	brge	.+34     	; 0x146 <_Z8I2CPurgeh+0x48>
 124:	20 e0       	ldi	r18, 0x00	; 0
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	45 9a       	sbi	0x08, 5	; 8
 12a:	42 e1       	ldi	r20, 0x12	; 18
 12c:	4a 95       	dec	r20
 12e:	f1 f7       	brne	.-4      	; 0x12c <_Z8I2CPurgeh+0x2e>
 130:	00 c0       	rjmp	.+0      	; 0x132 <_Z8I2CPurgeh+0x34>
 132:	45 98       	cbi	0x08, 5	; 8
 134:	42 e1       	ldi	r20, 0x12	; 18
 136:	4a 95       	dec	r20
 138:	f1 f7       	brne	.-4      	; 0x136 <_Z8I2CPurgeh+0x38>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <_Z8I2CPurgeh+0x3e>
 13c:	2f 5f       	subi	r18, 0xFF	; 255
 13e:	3f 4f       	sbci	r19, 0xFF	; 255
 140:	28 17       	cp	r18, r24
 142:	39 07       	cpc	r19, r25
 144:	89 f7       	brne	.-30     	; 0x128 <_Z8I2CPurgeh+0x2a>
 146:	80 e3       	ldi	r24, 0x30	; 48
 148:	88 b9       	out	0x08, r24	; 8
 14a:	88 e2       	ldi	r24, 0x28	; 40
 14c:	8a 95       	dec	r24
 14e:	f1 f7       	brne	.-4      	; 0x14c <_Z8I2CPurgeh+0x4e>
 150:	08 95       	ret

00000152 <_Z14IRsensorSelecth>:
 152:	cf 93       	push	r28
 154:	c8 2f       	mov	r28, r24
 156:	8e ee       	ldi	r24, 0xEE	; 238
 158:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
 15c:	c2 30       	cpi	r28, 0x02	; 2
 15e:	81 f0       	breq	.+32     	; 0x180 <_Z14IRsensorSelecth+0x2e>
 160:	18 f4       	brcc	.+6      	; 0x168 <_Z14IRsensorSelecth+0x16>
 162:	c1 30       	cpi	r28, 0x01	; 1
 164:	89 f0       	breq	.+34     	; 0x188 <_Z14IRsensorSelecth+0x36>
 166:	13 c0       	rjmp	.+38     	; 0x18e <_Z14IRsensorSelecth+0x3c>
 168:	c4 30       	cpi	r28, 0x04	; 4
 16a:	31 f0       	breq	.+12     	; 0x178 <_Z14IRsensorSelecth+0x26>
 16c:	c0 31       	cpi	r28, 0x10	; 16
 16e:	79 f4       	brne	.+30     	; 0x18e <_Z14IRsensorSelecth+0x3c>
 170:	80 e1       	ldi	r24, 0x10	; 16
 172:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 176:	0b c0       	rjmp	.+22     	; 0x18e <_Z14IRsensorSelecth+0x3c>
 178:	84 e0       	ldi	r24, 0x04	; 4
 17a:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 17e:	07 c0       	rjmp	.+14     	; 0x18e <_Z14IRsensorSelecth+0x3c>
 180:	82 e0       	ldi	r24, 0x02	; 2
 182:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 186:	03 c0       	rjmp	.+6      	; 0x18e <_Z14IRsensorSelecth+0x3c>
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 18e:	84 e9       	ldi	r24, 0x94	; 148
 190:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <_Z11initalSetUpv>:
 198:	8f e1       	ldi	r24, 0x1F	; 31
 19a:	9e e4       	ldi	r25, 0x4E	; 78
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <_Z11initalSetUpv+0x4>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <_Z11initalSetUpv+0xa>
 1a2:	00 00       	nop
 1a4:	87 b1       	in	r24, 0x07	; 7
 1a6:	80 7f       	andi	r24, 0xF0	; 240
 1a8:	87 b9       	out	0x07, r24	; 7
 1aa:	18 b8       	out	0x08, r1	; 8
 1ac:	88 b1       	in	r24, 0x08	; 8
 1ae:	8f 60       	ori	r24, 0x0F	; 15
 1b0:	88 b9       	out	0x08, r24	; 8
 1b2:	08 95       	ret

000001b4 <_Z7setupIRv>:
 1b4:	ef 92       	push	r14
 1b6:	ff 92       	push	r15
 1b8:	1f 93       	push	r17
 1ba:	cf 93       	push	r28
 1bc:	df 93       	push	r29
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	0e 94 7f 00 	call	0xfe	; 0xfe <_Z8I2CPurgeh>
 1c4:	c0 e0       	ldi	r28, 0x00	; 0
 1c6:	d0 e0       	ldi	r29, 0x00	; 0
 1c8:	0f 2e       	mov	r0, r31
 1ca:	fc eb       	ldi	r31, 0xBC	; 188
 1cc:	ef 2e       	mov	r14, r31
 1ce:	f1 2c       	mov	r15, r1
 1d0:	f0 2d       	mov	r31, r0
 1d2:	14 e9       	ldi	r17, 0x94	; 148
 1d4:	c1 30       	cpi	r28, 0x01	; 1
 1d6:	d1 05       	cpc	r29, r1
 1d8:	49 f0       	breq	.+18     	; 0x1ec <_Z7setupIRv+0x38>
 1da:	c2 30       	cpi	r28, 0x02	; 2
 1dc:	d1 05       	cpc	r29, r1
 1de:	51 f0       	breq	.+20     	; 0x1f4 <_Z7setupIRv+0x40>
 1e0:	20 97       	sbiw	r28, 0x00	; 0
 1e2:	59 f4       	brne	.+22     	; 0x1fa <_Z7setupIRv+0x46>
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	0e 94 a9 00 	call	0x152	; 0x152 <_Z14IRsensorSelecth>
 1ea:	07 c0       	rjmp	.+14     	; 0x1fa <_Z7setupIRv+0x46>
 1ec:	84 e0       	ldi	r24, 0x04	; 4
 1ee:	0e 94 a9 00 	call	0x152	; 0x152 <_Z14IRsensorSelecth>
 1f2:	03 c0       	rjmp	.+6      	; 0x1fa <_Z7setupIRv+0x46>
 1f4:	80 e1       	ldi	r24, 0x10	; 16
 1f6:	0e 94 a9 00 	call	0x152	; 0x152 <_Z14IRsensorSelecth>
 1fa:	82 e0       	ldi	r24, 0x02	; 2
 1fc:	0e 94 7f 00 	call	0xfe	; 0xfe <_Z8I2CPurgeh>
 200:	86 e2       	ldi	r24, 0x26	; 38
 202:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
 206:	82 e8       	ldi	r24, 0x82	; 130
 208:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 20c:	85 e0       	ldi	r24, 0x05	; 5
 20e:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 212:	f7 01       	movw	r30, r14
 214:	10 83       	st	Z, r17
 216:	fa e1       	ldi	r31, 0x1A	; 26
 218:	fa 95       	dec	r31
 21a:	f1 f7       	brne	.-4      	; 0x218 <_Z7setupIRv+0x64>
 21c:	00 c0       	rjmp	.+0      	; 0x21e <_Z7setupIRv+0x6a>
 21e:	86 e2       	ldi	r24, 0x26	; 38
 220:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
 224:	83 e8       	ldi	r24, 0x83	; 131
 226:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 22a:	84 e1       	ldi	r24, 0x14	; 20
 22c:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 230:	f7 01       	movw	r30, r14
 232:	10 83       	st	Z, r17
 234:	fa e1       	ldi	r31, 0x1A	; 26
 236:	fa 95       	dec	r31
 238:	f1 f7       	brne	.-4      	; 0x236 <_Z7setupIRv+0x82>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <_Z7setupIRv+0x88>
 23c:	86 e2       	ldi	r24, 0x26	; 38
 23e:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
 242:	80 e8       	ldi	r24, 0x80	; 128
 244:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 248:	83 e0       	ldi	r24, 0x03	; 3
 24a:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 24e:	f7 01       	movw	r30, r14
 250:	10 83       	st	Z, r17
 252:	fa e1       	ldi	r31, 0x1A	; 26
 254:	fa 95       	dec	r31
 256:	f1 f7       	brne	.-4      	; 0x254 <_Z7setupIRv+0xa0>
 258:	00 c0       	rjmp	.+0      	; 0x25a <_Z7setupIRv+0xa6>
 25a:	21 96       	adiw	r28, 0x01	; 1
 25c:	c3 30       	cpi	r28, 0x03	; 3
 25e:	d1 05       	cpc	r29, r1
 260:	09 f0       	breq	.+2      	; 0x264 <_Z7setupIRv+0xb0>
 262:	b8 cf       	rjmp	.-144    	; 0x1d4 <_Z7setupIRv+0x20>
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	1f 91       	pop	r17
 26a:	ff 90       	pop	r15
 26c:	ef 90       	pop	r14
 26e:	08 95       	ret

00000270 <_Z14motorSpeedLefta>:
 270:	68 2f       	mov	r22, r24
 272:	84 b1       	in	r24, 0x04	; 4
 274:	86 60       	ori	r24, 0x06	; 6
 276:	84 b9       	out	0x04, r24	; 4
 278:	83 e0       	ldi	r24, 0x03	; 3
 27a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 27e:	66 23       	and	r22, r22
 280:	c4 f4       	brge	.+48     	; 0x2b2 <_Z14motorSpeedLefta+0x42>
 282:	61 95       	neg	r22
 284:	81 e8       	ldi	r24, 0x81	; 129
 286:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 28a:	06 2e       	mov	r0, r22
 28c:	00 0c       	add	r0, r0
 28e:	77 0b       	sbc	r23, r23
 290:	88 0b       	sbc	r24, r24
 292:	99 0b       	sbc	r25, r25
 294:	0e 94 b8 03 	call	0x770	; 0x770 <__floatsisf>
 298:	23 e3       	ldi	r18, 0x33	; 51
 29a:	33 e3       	ldi	r19, 0x33	; 51
 29c:	43 e2       	ldi	r20, 0x23	; 35
 29e:	50 e4       	ldi	r21, 0x40	; 64
 2a0:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__mulsf3>
 2a4:	0e 94 87 03 	call	0x70e	; 0x70e <__fixunssfsi>
 2a8:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 2ac:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 2b0:	08 95       	ret
 2b2:	61 11       	cpse	r22, r1
 2b4:	04 c0       	rjmp	.+8      	; 0x2be <_Z14motorSpeedLefta+0x4e>
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 2bc:	08 95       	ret
 2be:	81 e2       	ldi	r24, 0x21	; 33
 2c0:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 2c4:	06 2e       	mov	r0, r22
 2c6:	00 0c       	add	r0, r0
 2c8:	77 0b       	sbc	r23, r23
 2ca:	88 0b       	sbc	r24, r24
 2cc:	99 0b       	sbc	r25, r25
 2ce:	0e 94 b8 03 	call	0x770	; 0x770 <__floatsisf>
 2d2:	23 e3       	ldi	r18, 0x33	; 51
 2d4:	33 e3       	ldi	r19, 0x33	; 51
 2d6:	43 e2       	ldi	r20, 0x23	; 35
 2d8:	50 e4       	ldi	r21, 0x40	; 64
 2da:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__mulsf3>
 2de:	0e 94 87 03 	call	0x70e	; 0x70e <__fixunssfsi>
 2e2:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 2e6:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 2ea:	08 95       	ret

000002ec <_Z6readIRh>:
 2ec:	0f 93       	push	r16
 2ee:	1f 93       	push	r17
 2f0:	cf 93       	push	r28
 2f2:	df 93       	push	r29
 2f4:	0e 94 a9 00 	call	0x152	; 0x152 <_Z14IRsensorSelecth>
 2f8:	86 e2       	ldi	r24, 0x26	; 38
 2fa:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
 2fe:	87 e8       	ldi	r24, 0x87	; 135
 300:	0e 94 5d 00 	call	0xba	; 0xba <_Z11I2CDataSendh>
 304:	0c eb       	ldi	r16, 0xBC	; 188
 306:	10 e0       	ldi	r17, 0x00	; 0
 308:	d4 e9       	ldi	r29, 0x94	; 148
 30a:	f8 01       	movw	r30, r16
 30c:	d0 83       	st	Z, r29
 30e:	fa e1       	ldi	r31, 0x1A	; 26
 310:	fa 95       	dec	r31
 312:	f1 f7       	brne	.-4      	; 0x310 <_Z6readIRh+0x24>
 314:	00 c0       	rjmp	.+0      	; 0x316 <_Z6readIRh+0x2a>
 316:	87 e2       	ldi	r24, 0x27	; 39
 318:	0e 94 48 00 	call	0x90	; 0x90 <_Z8I2CStarth>
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z11I2CDataReadb>
 322:	c8 2f       	mov	r28, r24
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z11I2CDataReadb>
 32a:	f8 01       	movw	r30, r16
 32c:	d0 83       	st	Z, r29
 32e:	fa e1       	ldi	r31, 0x1A	; 26
 330:	fa 95       	dec	r31
 332:	f1 f7       	brne	.-4      	; 0x330 <_Z6readIRh+0x44>
 334:	00 c0       	rjmp	.+0      	; 0x336 <_Z6readIRh+0x4a>
 336:	2c 2f       	mov	r18, r28
 338:	30 e0       	ldi	r19, 0x00	; 0
 33a:	32 2f       	mov	r19, r18
 33c:	22 27       	eor	r18, r18
 33e:	a9 01       	movw	r20, r18
 340:	48 0f       	add	r20, r24
 342:	51 1d       	adc	r21, r1
 344:	ca 01       	movw	r24, r20
 346:	df 91       	pop	r29
 348:	cf 91       	pop	r28
 34a:	1f 91       	pop	r17
 34c:	0f 91       	pop	r16
 34e:	08 95       	ret

00000350 <_Z6delaySj>:
 350:	00 97       	sbiw	r24, 0x00	; 0
 352:	59 f0       	breq	.+22     	; 0x36a <_Z6delaySj+0x1a>
 354:	2f ef       	ldi	r18, 0xFF	; 255
 356:	39 e6       	ldi	r19, 0x69	; 105
 358:	48 e1       	ldi	r20, 0x18	; 24
 35a:	21 50       	subi	r18, 0x01	; 1
 35c:	30 40       	sbci	r19, 0x00	; 0
 35e:	40 40       	sbci	r20, 0x00	; 0
 360:	e1 f7       	brne	.-8      	; 0x35a <_Z6delaySj+0xa>
 362:	00 c0       	rjmp	.+0      	; 0x364 <_Z6delaySj+0x14>
 364:	00 00       	nop
 366:	01 97       	sbiw	r24, 0x01	; 1
 368:	a9 f7       	brne	.-22     	; 0x354 <_Z6delaySj+0x4>
 36a:	08 95       	ret

0000036c <_Z14motorSpeedLefthb>:
 36c:	94 b1       	in	r25, 0x04	; 4
 36e:	96 60       	ori	r25, 0x06	; 6
 370:	94 b9       	out	0x04, r25	; 4
 372:	93 e0       	ldi	r25, 0x03	; 3
 374:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 378:	66 23       	and	r22, r22
 37a:	49 f0       	breq	.+18     	; 0x38e <_Z14motorSpeedLefthb+0x22>
 37c:	91 e8       	ldi	r25, 0x81	; 129
 37e:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 388:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 38c:	08 95       	ret
 38e:	81 11       	cpse	r24, r1
 390:	04 c0       	rjmp	.+8      	; 0x39a <_Z14motorSpeedLefthb+0x2e>
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 398:	08 95       	ret
 39a:	91 e2       	ldi	r25, 0x21	; 33
 39c:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 3a6:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 3aa:	08 95       	ret

000003ac <_Z15motorSpeedRighthb>:
 3ac:	9a b1       	in	r25, 0x0a	; 10
 3ae:	90 66       	ori	r25, 0x60	; 96
 3b0:	9a b9       	out	0x0a, r25	; 10
 3b2:	93 e0       	ldi	r25, 0x03	; 3
 3b4:	95 bd       	out	0x25, r25	; 37
 3b6:	66 23       	and	r22, r22
 3b8:	21 f0       	breq	.+8      	; 0x3c2 <_Z15motorSpeedRighthb+0x16>
 3ba:	91 e2       	ldi	r25, 0x21	; 33
 3bc:	94 bd       	out	0x24, r25	; 36
 3be:	88 bd       	out	0x28, r24	; 40
 3c0:	08 95       	ret
 3c2:	81 11       	cpse	r24, r1
 3c4:	03 c0       	rjmp	.+6      	; 0x3cc <_Z15motorSpeedRighthb+0x20>
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	84 bd       	out	0x24, r24	; 36
 3ca:	08 95       	ret
 3cc:	91 e8       	ldi	r25, 0x81	; 129
 3ce:	94 bd       	out	0x24, r25	; 36
 3d0:	87 bd       	out	0x27, r24	; 39
 3d2:	08 95       	ret

000003d4 <_Z13moveStraight2v>:

void moveStraight2(){
 3d4:	cf 93       	push	r28
 3d6:	df 93       	push	r29
 3d8:	00 d0       	rcall	.+0      	; 0x3da <_Z13moveStraight2v+0x6>
 3da:	00 d0       	rcall	.+0      	; 0x3dc <_Z13moveStraight2v+0x8>
 3dc:	cd b7       	in	r28, 0x3d	; 61
 3de:	de b7       	in	r29, 0x3e	; 62
	//motorSpeed(25,25);
	#define speedL 63
	#define speedR 70
	//motorSpeed(speedL,speedR);
	motorSpeedLeft(speedL,false);
 3e0:	60 e0       	ldi	r22, 0x00	; 0
 3e2:	8f e3       	ldi	r24, 0x3F	; 63
 3e4:	0e 94 b6 01 	call	0x36c	; 0x36c <_Z14motorSpeedLefthb>
	motorSpeedRight(speedR,false);
 3e8:	60 e0       	ldi	r22, 0x00	; 0
 3ea:	86 e4       	ldi	r24, 0x46	; 70
 3ec:	0e 94 d6 01 	call	0x3ac	; 0x3ac <_Z15motorSpeedRighthb>
	int16_t distanceL = 0;
	int16_t distanceR = 0;
	int16_t distanceFront = 0;
	float error = 0;
	float lastError = 0;
	float sumError = 0;
 3f0:	81 2c       	mov	r8, r1
 3f2:	91 2c       	mov	r9, r1
 3f4:	54 01       	movw	r10, r8
	
	int16_t distanceL = 0;
	int16_t distanceR = 0;
	int16_t distanceFront = 0;
	float error = 0;
	float lastError = 0;
 3f6:	41 2c       	mov	r4, r1
 3f8:	31 2c       	mov	r3, r1
 3fa:	d1 2c       	mov	r13, r1
 3fc:	c1 2c       	mov	r12, r1
 3fe:	21 2c       	mov	r2, r1
		i_term = sumError * 0.1;
		
		if ( speedR + error < 0) error = -speedR;
		motorSpeedRight((speedR + p_term) + dTerm + i_term, false);
		if ( speedL - error < 0) error = speedL;
		motorSpeedLeft((speedL - p_term) - dTerm - i_term,false);
 400:	0f 2e       	mov	r0, r31
 402:	ff e3       	ldi	r31, 0x3F	; 63
 404:	5f 2e       	mov	r5, r31
 406:	f0 2d       	mov	r31, r0
 408:	59 82       	std	Y+1, r5	; 0x01
 40a:	64 2c       	mov	r6, r4
 40c:	7d 2c       	mov	r7, r13
 40e:	fc 2c       	mov	r15, r12
	//for(;;){
	//	_delay_ms(10);
	//}
	
	for(;;){
		distanceL = readIR(IR_LEFT);
 410:	80 e1       	ldi	r24, 0x10	; 16
 412:	0e 94 76 01 	call	0x2ec	; 0x2ec <_Z6readIRh>
 416:	8c 01       	movw	r16, r24
		distanceR = readIR(IR_RIGHT);
 418:	81 e0       	ldi	r24, 0x01	; 1
 41a:	0e 94 76 01 	call	0x2ec	; 0x2ec <_Z6readIRh>
 41e:	9b 83       	std	Y+3, r25	; 0x03
 420:	8a 83       	std	Y+2, r24	; 0x02
		distanceFront = readIR(IR_FRONT);
 422:	84 e0       	ldi	r24, 0x04	; 4
 424:	0e 94 76 01 	call	0x2ec	; 0x2ec <_Z6readIRh>
		//error *= 0.05;
		
		
		//if(distanceR > FAR_R && distanceL > FAR_L){
		distanceL += 300;//2000;//7000;//14000
		error = distanceR - distanceL;
 428:	04 5d       	subi	r16, 0xD4	; 212
 42a:	1e 4f       	sbci	r17, 0xFE	; 254
 42c:	2a 81       	ldd	r18, Y+2	; 0x02
 42e:	3b 81       	ldd	r19, Y+3	; 0x03
 430:	20 1b       	sub	r18, r16
 432:	31 0b       	sbc	r19, r17
 434:	b9 01       	movw	r22, r18
 436:	33 0f       	add	r19, r19
 438:	88 0b       	sbc	r24, r24
 43a:	99 0b       	sbc	r25, r25
 43c:	0e 94 b8 03 	call	0x770	; 0x770 <__floatsisf>
 440:	6c 83       	std	Y+4, r22	; 0x04
 442:	7a 83       	std	Y+2, r23	; 0x02
 444:	18 2f       	mov	r17, r24
 446:	09 2f       	mov	r16, r25
		p_term = error * 0.005;//0.01;//0.005;//0.003
 448:	2a e0       	ldi	r18, 0x0A	; 10
 44a:	37 ed       	ldi	r19, 0xD7	; 215
 44c:	43 ea       	ldi	r20, 0xA3	; 163
 44e:	5b e3       	ldi	r21, 0x3B	; 59
 450:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__mulsf3>
 454:	0e 94 80 03 	call	0x700	; 0x700 <__fixsfsi>
 458:	6c 3e       	cpi	r22, 0xEC	; 236
 45a:	3f ef       	ldi	r19, 0xFF	; 255
 45c:	73 07       	cpc	r23, r19
 45e:	14 f4       	brge	.+4      	; 0x464 <__FUSE_REGION_LENGTH__+0x64>
 460:	6c ee       	ldi	r22, 0xEC	; 236
 462:	7f ef       	ldi	r23, 0xFF	; 255
 464:	2b 01       	movw	r4, r22
 466:	65 31       	cpi	r22, 0x15	; 21
 468:	71 05       	cpc	r23, r1
 46a:	24 f0       	brlt	.+8      	; 0x474 <__FUSE_REGION_LENGTH__+0x74>
 46c:	0f 2e       	mov	r0, r31
 46e:	f4 e1       	ldi	r31, 0x14	; 20
 470:	4f 2e       	mov	r4, r31
 472:	f0 2d       	mov	r31, r0
			p_term = P_MAX;
		}else if(p_term < -P_MAX){
			p_term = -P_MAX;
		}
		
		dTerm = 0.0 * (lastError - error);
 474:	2c 81       	ldd	r18, Y+4	; 0x04
 476:	3a 81       	ldd	r19, Y+2	; 0x02
 478:	41 2f       	mov	r20, r17
 47a:	50 2f       	mov	r21, r16
 47c:	66 2d       	mov	r22, r6
 47e:	73 2d       	mov	r23, r3
 480:	87 2d       	mov	r24, r7
 482:	9f 2d       	mov	r25, r15
 484:	0e 94 0e 03 	call	0x61c	; 0x61c <__subsf3>
 488:	20 e0       	ldi	r18, 0x00	; 0
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	a9 01       	movw	r20, r18
 48e:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__mulsf3>
 492:	0e 94 80 03 	call	0x700	; 0x700 <__fixsfsi>
 496:	f6 2e       	mov	r15, r22
			//error = 0;
		}else if(error < 10){
			//error = -10;
		}
		
		sumError = sumError + error;
 498:	2c 81       	ldd	r18, Y+4	; 0x04
 49a:	3a 81       	ldd	r19, Y+2	; 0x02
 49c:	41 2f       	mov	r20, r17
 49e:	50 2f       	mov	r21, r16
 4a0:	c5 01       	movw	r24, r10
 4a2:	b4 01       	movw	r22, r8
 4a4:	0e 94 0f 03 	call	0x61e	; 0x61e <__addsf3>
 4a8:	4b 01       	movw	r8, r22
 4aa:	5c 01       	movw	r10, r24
		i_term = sumError * 0.1;
 4ac:	2d ec       	ldi	r18, 0xCD	; 205
 4ae:	3c ec       	ldi	r19, 0xCC	; 204
 4b0:	4c ec       	ldi	r20, 0xCC	; 204
 4b2:	5d e3       	ldi	r21, 0x3D	; 61
 4b4:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__mulsf3>
 4b8:	0e 94 80 03 	call	0x700	; 0x700 <__fixsfsi>
 4bc:	76 2e       	mov	r7, r22
		
		if ( speedR + error < 0) error = -speedR;
 4be:	20 e0       	ldi	r18, 0x00	; 0
 4c0:	30 e0       	ldi	r19, 0x00	; 0
 4c2:	4c e8       	ldi	r20, 0x8C	; 140
 4c4:	52 e4       	ldi	r21, 0x42	; 66
 4c6:	6c 81       	ldd	r22, Y+4	; 0x04
 4c8:	7a 81       	ldd	r23, Y+2	; 0x02
 4ca:	81 2f       	mov	r24, r17
 4cc:	90 2f       	mov	r25, r16
 4ce:	0e 94 0f 03 	call	0x61e	; 0x61e <__addsf3>
 4d2:	20 e0       	ldi	r18, 0x00	; 0
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	a9 01       	movw	r20, r18
 4d8:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <__cmpsf2>
 4dc:	88 23       	and	r24, r24
 4de:	c4 f1       	brlt	.+112    	; 0x550 <__FUSE_REGION_LENGTH__+0x150>
		motorSpeedRight((speedR + p_term) + dTerm + i_term, false);
 4e0:	c4 2c       	mov	r12, r4
 4e2:	ef 2c       	mov	r14, r15
 4e4:	d7 2c       	mov	r13, r7
 4e6:	87 2d       	mov	r24, r7
 4e8:	8f 0d       	add	r24, r15
 4ea:	8a 5b       	subi	r24, 0xBA	; 186
 4ec:	60 e0       	ldi	r22, 0x00	; 0
 4ee:	84 0d       	add	r24, r4
 4f0:	0e 94 d6 01 	call	0x3ac	; 0x3ac <_Z15motorSpeedRighthb>
		if ( speedL - error < 0) error = speedL;
 4f4:	2c 81       	ldd	r18, Y+4	; 0x04
 4f6:	3a 81       	ldd	r19, Y+2	; 0x02
 4f8:	41 2f       	mov	r20, r17
 4fa:	50 2f       	mov	r21, r16
 4fc:	60 e0       	ldi	r22, 0x00	; 0
 4fe:	70 e0       	ldi	r23, 0x00	; 0
 500:	8c e7       	ldi	r24, 0x7C	; 124
 502:	92 e4       	ldi	r25, 0x42	; 66
 504:	0e 94 0e 03 	call	0x61c	; 0x61c <__subsf3>
 508:	20 e0       	ldi	r18, 0x00	; 0
 50a:	30 e0       	ldi	r19, 0x00	; 0
 50c:	a9 01       	movw	r20, r18
 50e:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <__cmpsf2>
 512:	88 23       	and	r24, r24
 514:	5c f4       	brge	.+22     	; 0x52c <__FUSE_REGION_LENGTH__+0x12c>
 516:	61 2c       	mov	r6, r1
 518:	31 2c       	mov	r3, r1
 51a:	0f 2e       	mov	r0, r31
 51c:	fc e7       	ldi	r31, 0x7C	; 124
 51e:	7f 2e       	mov	r7, r31
 520:	f0 2d       	mov	r31, r0
 522:	0f 2e       	mov	r0, r31
 524:	f2 e4       	ldi	r31, 0x42	; 66
 526:	ff 2e       	mov	r15, r31
 528:	f0 2d       	mov	r31, r0
 52a:	04 c0       	rjmp	.+8      	; 0x534 <__FUSE_REGION_LENGTH__+0x134>
		//error *= 0.05;
		
		
		//if(distanceR > FAR_R && distanceL > FAR_L){
		distanceL += 300;//2000;//7000;//14000
		error = distanceR - distanceL;
 52c:	6c 80       	ldd	r6, Y+4	; 0x04
 52e:	3a 80       	ldd	r3, Y+2	; 0x02
 530:	71 2e       	mov	r7, r17
 532:	f0 2e       	mov	r15, r16
		i_term = sumError * 0.1;
		
		if ( speedR + error < 0) error = -speedR;
		motorSpeedRight((speedR + p_term) + dTerm + i_term, false);
		if ( speedL - error < 0) error = speedL;
		motorSpeedLeft((speedL - p_term) - dTerm - i_term,false);
 534:	89 81       	ldd	r24, Y+1	; 0x01
 536:	8d 19       	sub	r24, r13
 538:	ec 0c       	add	r14, r12
 53a:	60 e0       	ldi	r22, 0x00	; 0
 53c:	8e 19       	sub	r24, r14
 53e:	0e 94 b6 01 	call	0x36c	; 0x36c <_Z14motorSpeedLefthb>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 542:	8f e1       	ldi	r24, 0x1F	; 31
 544:	9e e4       	ldi	r25, 0x4E	; 78
 546:	01 97       	sbiw	r24, 0x01	; 1
 548:	f1 f7       	brne	.-4      	; 0x546 <__FUSE_REGION_LENGTH__+0x146>
 54a:	00 c0       	rjmp	.+0      	; 0x54c <__FUSE_REGION_LENGTH__+0x14c>
 54c:	00 00       	nop
 54e:	60 cf       	rjmp	.-320    	; 0x410 <__FUSE_REGION_LENGTH__+0x10>
		
		sumError = sumError + error;
		i_term = sumError * 0.1;
		
		if ( speedR + error < 0) error = -speedR;
		motorSpeedRight((speedR + p_term) + dTerm + i_term, false);
 550:	c4 2c       	mov	r12, r4
 552:	ef 2c       	mov	r14, r15
 554:	d7 2c       	mov	r13, r7
 556:	87 2d       	mov	r24, r7
 558:	8f 0d       	add	r24, r15
 55a:	8a 5b       	subi	r24, 0xBA	; 186
 55c:	60 e0       	ldi	r22, 0x00	; 0
 55e:	84 0d       	add	r24, r4
 560:	0e 94 d6 01 	call	0x3ac	; 0x3ac <_Z15motorSpeedRighthb>
		}
		
		sumError = sumError + error;
		i_term = sumError * 0.1;
		
		if ( speedR + error < 0) error = -speedR;
 564:	61 2c       	mov	r6, r1
 566:	31 2c       	mov	r3, r1
 568:	0f 2e       	mov	r0, r31
 56a:	fc e8       	ldi	r31, 0x8C	; 140
 56c:	7f 2e       	mov	r7, r31
 56e:	f0 2d       	mov	r31, r0
 570:	0f 2e       	mov	r0, r31
 572:	f2 ec       	ldi	r31, 0xC2	; 194
 574:	ff 2e       	mov	r15, r31
 576:	f0 2d       	mov	r31, r0
 578:	dd cf       	rjmp	.-70     	; 0x534 <__FUSE_REGION_LENGTH__+0x134>

0000057a <_Z4beepv>:
		_delay_ms(10);
	}
}

void beep(){
	DDRD  |= 0b00010000;
 57a:	54 9a       	sbi	0x0a, 4	; 10
	PORTD |= 0b00010000;
 57c:	5c 9a       	sbi	0x0b, 4	; 11
 57e:	2f ef       	ldi	r18, 0xFF	; 255
 580:	80 e7       	ldi	r24, 0x70	; 112
 582:	92 e0       	ldi	r25, 0x02	; 2
 584:	21 50       	subi	r18, 0x01	; 1
 586:	80 40       	sbci	r24, 0x00	; 0
 588:	90 40       	sbci	r25, 0x00	; 0
 58a:	e1 f7       	brne	.-8      	; 0x584 <_Z4beepv+0xa>
 58c:	00 c0       	rjmp	.+0      	; 0x58e <_Z4beepv+0x14>
 58e:	00 00       	nop
	
	_delay_ms(100);
	
	PORTD &= 0b11101111;
 590:	5c 98       	cbi	0x0b, 4	; 11
 592:	08 95       	ret

00000594 <main>:
#include "MMLib.h"//Include for custom MM library
uint8_t IRDistance[5];//Global int for IR values

int main()
{
	initalSetUp();
 594:	0e 94 cc 00 	call	0x198	; 0x198 <_Z11initalSetUpv>
	setupIR();
 598:	0e 94 da 00 	call	0x1b4	; 0x1b4 <_Z7setupIRv>
	I2C_MODE_FAST
 59c:	82 e0       	ldi	r24, 0x02	; 2
 59e:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	//motorSpeed(100,100);
	//for(;;){_delay_ms(10);}
	int presses = 0;
 5a2:	80 e0       	ldi	r24, 0x00	; 0
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	05 c0       	rjmp	.+10     	; 0x5b2 <main+0x1e>
		}else{
			presses = 0;
		}
	}
	
	while(BUTTON_1 > 0){ 
 5a8:	32 99       	sbic	0x06, 2	; 6
 5aa:	10 c0       	rjmp	.+32     	; 0x5cc <main+0x38>
 5ac:	1a c0       	rjmp	.+52     	; 0x5e2 <main+0x4e>
		_delay_ms(10);
		
		if(BUTTON_1 > 0){
			presses++;
		}else{
			presses = 0;
 5ae:	80 e0       	ldi	r24, 0x00	; 0
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	ef e1       	ldi	r30, 0x1F	; 31
 5b4:	fe e4       	ldi	r31, 0x4E	; 78
 5b6:	31 97       	sbiw	r30, 0x01	; 1
 5b8:	f1 f7       	brne	.-4      	; 0x5b6 <main+0x22>
 5ba:	00 c0       	rjmp	.+0      	; 0x5bc <main+0x28>
 5bc:	00 00       	nop
	//for(;;){_delay_ms(10);}
	int presses = 0;
	while( presses < 4 ){//This block keeps the code from running until a button is pressed
		_delay_ms(10);
		
		if(BUTTON_1 > 0){
 5be:	32 9b       	sbis	0x06, 2	; 6
 5c0:	f6 cf       	rjmp	.-20     	; 0x5ae <main+0x1a>
			presses++;
 5c2:	01 96       	adiw	r24, 0x01	; 1
	setupIR();
	I2C_MODE_FAST
	//motorSpeed(100,100);
	//for(;;){_delay_ms(10);}
	int presses = 0;
	while( presses < 4 ){//This block keeps the code from running until a button is pressed
 5c4:	84 30       	cpi	r24, 0x04	; 4
 5c6:	91 05       	cpc	r25, r1
 5c8:	a4 f3       	brlt	.-24     	; 0x5b2 <main+0x1e>
 5ca:	ee cf       	rjmp	.-36     	; 0x5a8 <main+0x14>
 5cc:	ff e7       	ldi	r31, 0x7F	; 127
 5ce:	28 e3       	ldi	r18, 0x38	; 56
 5d0:	81 e0       	ldi	r24, 0x01	; 1
 5d2:	f1 50       	subi	r31, 0x01	; 1
 5d4:	20 40       	sbci	r18, 0x00	; 0
 5d6:	80 40       	sbci	r24, 0x00	; 0
 5d8:	e1 f7       	brne	.-8      	; 0x5d2 <main+0x3e>
 5da:	00 c0       	rjmp	.+0      	; 0x5dc <main+0x48>
 5dc:	00 00       	nop
		}else{
			presses = 0;
		}
	}
	
	while(BUTTON_1 > 0){ 
 5de:	32 99       	sbic	0x06, 2	; 6
 5e0:	f5 cf       	rjmp	.-22     	; 0x5cc <main+0x38>
	//	_delay_ms(250);
	//} 
	//motorSpeedLeft(25);//With out a buzzer this confirms that the code is running
	//_delay_ms(250);
	//motorSpeedLeft(0);
	beep();
 5e2:	0e 94 bd 02 	call	0x57a	; 0x57a <_Z4beepv>
	//motorTicksPerSecond(6,6);
	delayS(2);
 5e6:	82 e0       	ldi	r24, 0x02	; 2
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	0e 94 a8 01 	call	0x350	; 0x350 <_Z6delaySj>
	//moveStraight(200,10);
	//sensorTestCalibration();
	moveStraight2();
 5ee:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <_Z13moveStraight2v>
	//motorSpeed(29,24);
	//delayS(20);
	
	//motorTicks(3000,3000);
	
	I2C_MODE_NORMAL
 5f2:	80 e2       	ldi	r24, 0x20	; 32
 5f4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	
	delayS(200);
 5f8:	88 ec       	ldi	r24, 0xC8	; 200
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	0e 94 a8 01 	call	0x350	; 0x350 <_Z6delaySj>
	
	int dis = 0;	
	
	for(;;){
		dis = readIR(IR_RIGHT);
 600:	81 e0       	ldi	r24, 0x01	; 1
 602:	0e 94 76 01 	call	0x2ec	; 0x2ec <_Z6readIRh>
		
		if(dis > 3000){
 606:	89 3b       	cpi	r24, 0xB9	; 185
 608:	9b 40       	sbci	r25, 0x0B	; 11
 60a:	24 f0       	brlt	.+8      	; 0x614 <main+0x80>
			motorSpeedLeft(25);//Too far
 60c:	89 e1       	ldi	r24, 0x19	; 25
 60e:	0e 94 38 01 	call	0x270	; 0x270 <_Z14motorSpeedLefta>
 612:	f6 cf       	rjmp	.-20     	; 0x600 <main+0x6c>
		}else{
			motorSpeedLeft(28);
 614:	8c e1       	ldi	r24, 0x1C	; 28
 616:	0e 94 38 01 	call	0x270	; 0x270 <_Z14motorSpeedLefta>
 61a:	f2 cf       	rjmp	.-28     	; 0x600 <main+0x6c>

0000061c <__subsf3>:
 61c:	50 58       	subi	r21, 0x80	; 128

0000061e <__addsf3>:
 61e:	bb 27       	eor	r27, r27
 620:	aa 27       	eor	r26, r26
 622:	0e 94 26 03 	call	0x64c	; 0x64c <__addsf3x>
 626:	0c 94 2e 04 	jmp	0x85c	; 0x85c <__fp_round>
 62a:	0e 94 20 04 	call	0x840	; 0x840 <__fp_pscA>
 62e:	38 f0       	brcs	.+14     	; 0x63e <__addsf3+0x20>
 630:	0e 94 27 04 	call	0x84e	; 0x84e <__fp_pscB>
 634:	20 f0       	brcs	.+8      	; 0x63e <__addsf3+0x20>
 636:	39 f4       	brne	.+14     	; 0x646 <__addsf3+0x28>
 638:	9f 3f       	cpi	r25, 0xFF	; 255
 63a:	19 f4       	brne	.+6      	; 0x642 <__addsf3+0x24>
 63c:	26 f4       	brtc	.+8      	; 0x646 <__addsf3+0x28>
 63e:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__fp_nan>
 642:	0e f4       	brtc	.+2      	; 0x646 <__addsf3+0x28>
 644:	e0 95       	com	r30
 646:	e7 fb       	bst	r30, 7
 648:	0c 94 17 04 	jmp	0x82e	; 0x82e <__fp_inf>

0000064c <__addsf3x>:
 64c:	e9 2f       	mov	r30, r25
 64e:	0e 94 3f 04 	call	0x87e	; 0x87e <__fp_split3>
 652:	58 f3       	brcs	.-42     	; 0x62a <__addsf3+0xc>
 654:	ba 17       	cp	r27, r26
 656:	62 07       	cpc	r22, r18
 658:	73 07       	cpc	r23, r19
 65a:	84 07       	cpc	r24, r20
 65c:	95 07       	cpc	r25, r21
 65e:	20 f0       	brcs	.+8      	; 0x668 <__addsf3x+0x1c>
 660:	79 f4       	brne	.+30     	; 0x680 <__addsf3x+0x34>
 662:	a6 f5       	brtc	.+104    	; 0x6cc <__addsf3x+0x80>
 664:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__fp_zero>
 668:	0e f4       	brtc	.+2      	; 0x66c <__addsf3x+0x20>
 66a:	e0 95       	com	r30
 66c:	0b 2e       	mov	r0, r27
 66e:	ba 2f       	mov	r27, r26
 670:	a0 2d       	mov	r26, r0
 672:	0b 01       	movw	r0, r22
 674:	b9 01       	movw	r22, r18
 676:	90 01       	movw	r18, r0
 678:	0c 01       	movw	r0, r24
 67a:	ca 01       	movw	r24, r20
 67c:	a0 01       	movw	r20, r0
 67e:	11 24       	eor	r1, r1
 680:	ff 27       	eor	r31, r31
 682:	59 1b       	sub	r21, r25
 684:	99 f0       	breq	.+38     	; 0x6ac <__addsf3x+0x60>
 686:	59 3f       	cpi	r21, 0xF9	; 249
 688:	50 f4       	brcc	.+20     	; 0x69e <__addsf3x+0x52>
 68a:	50 3e       	cpi	r21, 0xE0	; 224
 68c:	68 f1       	brcs	.+90     	; 0x6e8 <__addsf3x+0x9c>
 68e:	1a 16       	cp	r1, r26
 690:	f0 40       	sbci	r31, 0x00	; 0
 692:	a2 2f       	mov	r26, r18
 694:	23 2f       	mov	r18, r19
 696:	34 2f       	mov	r19, r20
 698:	44 27       	eor	r20, r20
 69a:	58 5f       	subi	r21, 0xF8	; 248
 69c:	f3 cf       	rjmp	.-26     	; 0x684 <__addsf3x+0x38>
 69e:	46 95       	lsr	r20
 6a0:	37 95       	ror	r19
 6a2:	27 95       	ror	r18
 6a4:	a7 95       	ror	r26
 6a6:	f0 40       	sbci	r31, 0x00	; 0
 6a8:	53 95       	inc	r21
 6aa:	c9 f7       	brne	.-14     	; 0x69e <__addsf3x+0x52>
 6ac:	7e f4       	brtc	.+30     	; 0x6cc <__addsf3x+0x80>
 6ae:	1f 16       	cp	r1, r31
 6b0:	ba 0b       	sbc	r27, r26
 6b2:	62 0b       	sbc	r22, r18
 6b4:	73 0b       	sbc	r23, r19
 6b6:	84 0b       	sbc	r24, r20
 6b8:	ba f0       	brmi	.+46     	; 0x6e8 <__addsf3x+0x9c>
 6ba:	91 50       	subi	r25, 0x01	; 1
 6bc:	a1 f0       	breq	.+40     	; 0x6e6 <__addsf3x+0x9a>
 6be:	ff 0f       	add	r31, r31
 6c0:	bb 1f       	adc	r27, r27
 6c2:	66 1f       	adc	r22, r22
 6c4:	77 1f       	adc	r23, r23
 6c6:	88 1f       	adc	r24, r24
 6c8:	c2 f7       	brpl	.-16     	; 0x6ba <__addsf3x+0x6e>
 6ca:	0e c0       	rjmp	.+28     	; 0x6e8 <__addsf3x+0x9c>
 6cc:	ba 0f       	add	r27, r26
 6ce:	62 1f       	adc	r22, r18
 6d0:	73 1f       	adc	r23, r19
 6d2:	84 1f       	adc	r24, r20
 6d4:	48 f4       	brcc	.+18     	; 0x6e8 <__addsf3x+0x9c>
 6d6:	87 95       	ror	r24
 6d8:	77 95       	ror	r23
 6da:	67 95       	ror	r22
 6dc:	b7 95       	ror	r27
 6de:	f7 95       	ror	r31
 6e0:	9e 3f       	cpi	r25, 0xFE	; 254
 6e2:	08 f0       	brcs	.+2      	; 0x6e6 <__addsf3x+0x9a>
 6e4:	b0 cf       	rjmp	.-160    	; 0x646 <__addsf3+0x28>
 6e6:	93 95       	inc	r25
 6e8:	88 0f       	add	r24, r24
 6ea:	08 f0       	brcs	.+2      	; 0x6ee <__addsf3x+0xa2>
 6ec:	99 27       	eor	r25, r25
 6ee:	ee 0f       	add	r30, r30
 6f0:	97 95       	ror	r25
 6f2:	87 95       	ror	r24
 6f4:	08 95       	ret

000006f6 <__cmpsf2>:
 6f6:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <__fp_cmp>
 6fa:	08 f4       	brcc	.+2      	; 0x6fe <__cmpsf2+0x8>
 6fc:	81 e0       	ldi	r24, 0x01	; 1
 6fe:	08 95       	ret

00000700 <__fixsfsi>:
 700:	0e 94 87 03 	call	0x70e	; 0x70e <__fixunssfsi>
 704:	68 94       	set
 706:	b1 11       	cpse	r27, r1
 708:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_szero>
 70c:	08 95       	ret

0000070e <__fixunssfsi>:
 70e:	0e 94 47 04 	call	0x88e	; 0x88e <__fp_splitA>
 712:	88 f0       	brcs	.+34     	; 0x736 <__fixunssfsi+0x28>
 714:	9f 57       	subi	r25, 0x7F	; 127
 716:	98 f0       	brcs	.+38     	; 0x73e <__fixunssfsi+0x30>
 718:	b9 2f       	mov	r27, r25
 71a:	99 27       	eor	r25, r25
 71c:	b7 51       	subi	r27, 0x17	; 23
 71e:	b0 f0       	brcs	.+44     	; 0x74c <__fixunssfsi+0x3e>
 720:	e1 f0       	breq	.+56     	; 0x75a <__fixunssfsi+0x4c>
 722:	66 0f       	add	r22, r22
 724:	77 1f       	adc	r23, r23
 726:	88 1f       	adc	r24, r24
 728:	99 1f       	adc	r25, r25
 72a:	1a f0       	brmi	.+6      	; 0x732 <__fixunssfsi+0x24>
 72c:	ba 95       	dec	r27
 72e:	c9 f7       	brne	.-14     	; 0x722 <__fixunssfsi+0x14>
 730:	14 c0       	rjmp	.+40     	; 0x75a <__fixunssfsi+0x4c>
 732:	b1 30       	cpi	r27, 0x01	; 1
 734:	91 f0       	breq	.+36     	; 0x75a <__fixunssfsi+0x4c>
 736:	0e 94 61 04 	call	0x8c2	; 0x8c2 <__fp_zero>
 73a:	b1 e0       	ldi	r27, 0x01	; 1
 73c:	08 95       	ret
 73e:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__fp_zero>
 742:	67 2f       	mov	r22, r23
 744:	78 2f       	mov	r23, r24
 746:	88 27       	eor	r24, r24
 748:	b8 5f       	subi	r27, 0xF8	; 248
 74a:	39 f0       	breq	.+14     	; 0x75a <__fixunssfsi+0x4c>
 74c:	b9 3f       	cpi	r27, 0xF9	; 249
 74e:	cc f3       	brlt	.-14     	; 0x742 <__fixunssfsi+0x34>
 750:	86 95       	lsr	r24
 752:	77 95       	ror	r23
 754:	67 95       	ror	r22
 756:	b3 95       	inc	r27
 758:	d9 f7       	brne	.-10     	; 0x750 <__fixunssfsi+0x42>
 75a:	3e f4       	brtc	.+14     	; 0x76a <__fixunssfsi+0x5c>
 75c:	90 95       	com	r25
 75e:	80 95       	com	r24
 760:	70 95       	com	r23
 762:	61 95       	neg	r22
 764:	7f 4f       	sbci	r23, 0xFF	; 255
 766:	8f 4f       	sbci	r24, 0xFF	; 255
 768:	9f 4f       	sbci	r25, 0xFF	; 255
 76a:	08 95       	ret

0000076c <__floatunsisf>:
 76c:	e8 94       	clt
 76e:	09 c0       	rjmp	.+18     	; 0x782 <__floatsisf+0x12>

00000770 <__floatsisf>:
 770:	97 fb       	bst	r25, 7
 772:	3e f4       	brtc	.+14     	; 0x782 <__floatsisf+0x12>
 774:	90 95       	com	r25
 776:	80 95       	com	r24
 778:	70 95       	com	r23
 77a:	61 95       	neg	r22
 77c:	7f 4f       	sbci	r23, 0xFF	; 255
 77e:	8f 4f       	sbci	r24, 0xFF	; 255
 780:	9f 4f       	sbci	r25, 0xFF	; 255
 782:	99 23       	and	r25, r25
 784:	a9 f0       	breq	.+42     	; 0x7b0 <__floatsisf+0x40>
 786:	f9 2f       	mov	r31, r25
 788:	96 e9       	ldi	r25, 0x96	; 150
 78a:	bb 27       	eor	r27, r27
 78c:	93 95       	inc	r25
 78e:	f6 95       	lsr	r31
 790:	87 95       	ror	r24
 792:	77 95       	ror	r23
 794:	67 95       	ror	r22
 796:	b7 95       	ror	r27
 798:	f1 11       	cpse	r31, r1
 79a:	f8 cf       	rjmp	.-16     	; 0x78c <__floatsisf+0x1c>
 79c:	fa f4       	brpl	.+62     	; 0x7dc <__floatsisf+0x6c>
 79e:	bb 0f       	add	r27, r27
 7a0:	11 f4       	brne	.+4      	; 0x7a6 <__floatsisf+0x36>
 7a2:	60 ff       	sbrs	r22, 0
 7a4:	1b c0       	rjmp	.+54     	; 0x7dc <__floatsisf+0x6c>
 7a6:	6f 5f       	subi	r22, 0xFF	; 255
 7a8:	7f 4f       	sbci	r23, 0xFF	; 255
 7aa:	8f 4f       	sbci	r24, 0xFF	; 255
 7ac:	9f 4f       	sbci	r25, 0xFF	; 255
 7ae:	16 c0       	rjmp	.+44     	; 0x7dc <__floatsisf+0x6c>
 7b0:	88 23       	and	r24, r24
 7b2:	11 f0       	breq	.+4      	; 0x7b8 <__floatsisf+0x48>
 7b4:	96 e9       	ldi	r25, 0x96	; 150
 7b6:	11 c0       	rjmp	.+34     	; 0x7da <__floatsisf+0x6a>
 7b8:	77 23       	and	r23, r23
 7ba:	21 f0       	breq	.+8      	; 0x7c4 <__floatsisf+0x54>
 7bc:	9e e8       	ldi	r25, 0x8E	; 142
 7be:	87 2f       	mov	r24, r23
 7c0:	76 2f       	mov	r23, r22
 7c2:	05 c0       	rjmp	.+10     	; 0x7ce <__floatsisf+0x5e>
 7c4:	66 23       	and	r22, r22
 7c6:	71 f0       	breq	.+28     	; 0x7e4 <__floatsisf+0x74>
 7c8:	96 e8       	ldi	r25, 0x86	; 134
 7ca:	86 2f       	mov	r24, r22
 7cc:	70 e0       	ldi	r23, 0x00	; 0
 7ce:	60 e0       	ldi	r22, 0x00	; 0
 7d0:	2a f0       	brmi	.+10     	; 0x7dc <__floatsisf+0x6c>
 7d2:	9a 95       	dec	r25
 7d4:	66 0f       	add	r22, r22
 7d6:	77 1f       	adc	r23, r23
 7d8:	88 1f       	adc	r24, r24
 7da:	da f7       	brpl	.-10     	; 0x7d2 <__floatsisf+0x62>
 7dc:	88 0f       	add	r24, r24
 7de:	96 95       	lsr	r25
 7e0:	87 95       	ror	r24
 7e2:	97 f9       	bld	r25, 7
 7e4:	08 95       	ret

000007e6 <__fp_cmp>:
 7e6:	99 0f       	add	r25, r25
 7e8:	00 08       	sbc	r0, r0
 7ea:	55 0f       	add	r21, r21
 7ec:	aa 0b       	sbc	r26, r26
 7ee:	e0 e8       	ldi	r30, 0x80	; 128
 7f0:	fe ef       	ldi	r31, 0xFE	; 254
 7f2:	16 16       	cp	r1, r22
 7f4:	17 06       	cpc	r1, r23
 7f6:	e8 07       	cpc	r30, r24
 7f8:	f9 07       	cpc	r31, r25
 7fa:	c0 f0       	brcs	.+48     	; 0x82c <__fp_cmp+0x46>
 7fc:	12 16       	cp	r1, r18
 7fe:	13 06       	cpc	r1, r19
 800:	e4 07       	cpc	r30, r20
 802:	f5 07       	cpc	r31, r21
 804:	98 f0       	brcs	.+38     	; 0x82c <__fp_cmp+0x46>
 806:	62 1b       	sub	r22, r18
 808:	73 0b       	sbc	r23, r19
 80a:	84 0b       	sbc	r24, r20
 80c:	95 0b       	sbc	r25, r21
 80e:	39 f4       	brne	.+14     	; 0x81e <__fp_cmp+0x38>
 810:	0a 26       	eor	r0, r26
 812:	61 f0       	breq	.+24     	; 0x82c <__fp_cmp+0x46>
 814:	23 2b       	or	r18, r19
 816:	24 2b       	or	r18, r20
 818:	25 2b       	or	r18, r21
 81a:	21 f4       	brne	.+8      	; 0x824 <__fp_cmp+0x3e>
 81c:	08 95       	ret
 81e:	0a 26       	eor	r0, r26
 820:	09 f4       	brne	.+2      	; 0x824 <__fp_cmp+0x3e>
 822:	a1 40       	sbci	r26, 0x01	; 1
 824:	a6 95       	lsr	r26
 826:	8f ef       	ldi	r24, 0xFF	; 255
 828:	81 1d       	adc	r24, r1
 82a:	81 1d       	adc	r24, r1
 82c:	08 95       	ret

0000082e <__fp_inf>:
 82e:	97 f9       	bld	r25, 7
 830:	9f 67       	ori	r25, 0x7F	; 127
 832:	80 e8       	ldi	r24, 0x80	; 128
 834:	70 e0       	ldi	r23, 0x00	; 0
 836:	60 e0       	ldi	r22, 0x00	; 0
 838:	08 95       	ret

0000083a <__fp_nan>:
 83a:	9f ef       	ldi	r25, 0xFF	; 255
 83c:	80 ec       	ldi	r24, 0xC0	; 192
 83e:	08 95       	ret

00000840 <__fp_pscA>:
 840:	00 24       	eor	r0, r0
 842:	0a 94       	dec	r0
 844:	16 16       	cp	r1, r22
 846:	17 06       	cpc	r1, r23
 848:	18 06       	cpc	r1, r24
 84a:	09 06       	cpc	r0, r25
 84c:	08 95       	ret

0000084e <__fp_pscB>:
 84e:	00 24       	eor	r0, r0
 850:	0a 94       	dec	r0
 852:	12 16       	cp	r1, r18
 854:	13 06       	cpc	r1, r19
 856:	14 06       	cpc	r1, r20
 858:	05 06       	cpc	r0, r21
 85a:	08 95       	ret

0000085c <__fp_round>:
 85c:	09 2e       	mov	r0, r25
 85e:	03 94       	inc	r0
 860:	00 0c       	add	r0, r0
 862:	11 f4       	brne	.+4      	; 0x868 <__fp_round+0xc>
 864:	88 23       	and	r24, r24
 866:	52 f0       	brmi	.+20     	; 0x87c <__fp_round+0x20>
 868:	bb 0f       	add	r27, r27
 86a:	40 f4       	brcc	.+16     	; 0x87c <__fp_round+0x20>
 86c:	bf 2b       	or	r27, r31
 86e:	11 f4       	brne	.+4      	; 0x874 <__fp_round+0x18>
 870:	60 ff       	sbrs	r22, 0
 872:	04 c0       	rjmp	.+8      	; 0x87c <__fp_round+0x20>
 874:	6f 5f       	subi	r22, 0xFF	; 255
 876:	7f 4f       	sbci	r23, 0xFF	; 255
 878:	8f 4f       	sbci	r24, 0xFF	; 255
 87a:	9f 4f       	sbci	r25, 0xFF	; 255
 87c:	08 95       	ret

0000087e <__fp_split3>:
 87e:	57 fd       	sbrc	r21, 7
 880:	90 58       	subi	r25, 0x80	; 128
 882:	44 0f       	add	r20, r20
 884:	55 1f       	adc	r21, r21
 886:	59 f0       	breq	.+22     	; 0x89e <__fp_splitA+0x10>
 888:	5f 3f       	cpi	r21, 0xFF	; 255
 88a:	71 f0       	breq	.+28     	; 0x8a8 <__fp_splitA+0x1a>
 88c:	47 95       	ror	r20

0000088e <__fp_splitA>:
 88e:	88 0f       	add	r24, r24
 890:	97 fb       	bst	r25, 7
 892:	99 1f       	adc	r25, r25
 894:	61 f0       	breq	.+24     	; 0x8ae <__fp_splitA+0x20>
 896:	9f 3f       	cpi	r25, 0xFF	; 255
 898:	79 f0       	breq	.+30     	; 0x8b8 <__fp_splitA+0x2a>
 89a:	87 95       	ror	r24
 89c:	08 95       	ret
 89e:	12 16       	cp	r1, r18
 8a0:	13 06       	cpc	r1, r19
 8a2:	14 06       	cpc	r1, r20
 8a4:	55 1f       	adc	r21, r21
 8a6:	f2 cf       	rjmp	.-28     	; 0x88c <__fp_split3+0xe>
 8a8:	46 95       	lsr	r20
 8aa:	f1 df       	rcall	.-30     	; 0x88e <__fp_splitA>
 8ac:	08 c0       	rjmp	.+16     	; 0x8be <__fp_splitA+0x30>
 8ae:	16 16       	cp	r1, r22
 8b0:	17 06       	cpc	r1, r23
 8b2:	18 06       	cpc	r1, r24
 8b4:	99 1f       	adc	r25, r25
 8b6:	f1 cf       	rjmp	.-30     	; 0x89a <__fp_splitA+0xc>
 8b8:	86 95       	lsr	r24
 8ba:	71 05       	cpc	r23, r1
 8bc:	61 05       	cpc	r22, r1
 8be:	08 94       	sec
 8c0:	08 95       	ret

000008c2 <__fp_zero>:
 8c2:	e8 94       	clt

000008c4 <__fp_szero>:
 8c4:	bb 27       	eor	r27, r27
 8c6:	66 27       	eor	r22, r22
 8c8:	77 27       	eor	r23, r23
 8ca:	cb 01       	movw	r24, r22
 8cc:	97 f9       	bld	r25, 7
 8ce:	08 95       	ret

000008d0 <__mulsf3>:
 8d0:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <__mulsf3x>
 8d4:	0c 94 2e 04 	jmp	0x85c	; 0x85c <__fp_round>
 8d8:	0e 94 20 04 	call	0x840	; 0x840 <__fp_pscA>
 8dc:	38 f0       	brcs	.+14     	; 0x8ec <__mulsf3+0x1c>
 8de:	0e 94 27 04 	call	0x84e	; 0x84e <__fp_pscB>
 8e2:	20 f0       	brcs	.+8      	; 0x8ec <__mulsf3+0x1c>
 8e4:	95 23       	and	r25, r21
 8e6:	11 f0       	breq	.+4      	; 0x8ec <__mulsf3+0x1c>
 8e8:	0c 94 17 04 	jmp	0x82e	; 0x82e <__fp_inf>
 8ec:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__fp_nan>
 8f0:	11 24       	eor	r1, r1
 8f2:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_szero>

000008f6 <__mulsf3x>:
 8f6:	0e 94 3f 04 	call	0x87e	; 0x87e <__fp_split3>
 8fa:	70 f3       	brcs	.-36     	; 0x8d8 <__mulsf3+0x8>

000008fc <__mulsf3_pse>:
 8fc:	95 9f       	mul	r25, r21
 8fe:	c1 f3       	breq	.-16     	; 0x8f0 <__mulsf3+0x20>
 900:	95 0f       	add	r25, r21
 902:	50 e0       	ldi	r21, 0x00	; 0
 904:	55 1f       	adc	r21, r21
 906:	62 9f       	mul	r22, r18
 908:	f0 01       	movw	r30, r0
 90a:	72 9f       	mul	r23, r18
 90c:	bb 27       	eor	r27, r27
 90e:	f0 0d       	add	r31, r0
 910:	b1 1d       	adc	r27, r1
 912:	63 9f       	mul	r22, r19
 914:	aa 27       	eor	r26, r26
 916:	f0 0d       	add	r31, r0
 918:	b1 1d       	adc	r27, r1
 91a:	aa 1f       	adc	r26, r26
 91c:	64 9f       	mul	r22, r20
 91e:	66 27       	eor	r22, r22
 920:	b0 0d       	add	r27, r0
 922:	a1 1d       	adc	r26, r1
 924:	66 1f       	adc	r22, r22
 926:	82 9f       	mul	r24, r18
 928:	22 27       	eor	r18, r18
 92a:	b0 0d       	add	r27, r0
 92c:	a1 1d       	adc	r26, r1
 92e:	62 1f       	adc	r22, r18
 930:	73 9f       	mul	r23, r19
 932:	b0 0d       	add	r27, r0
 934:	a1 1d       	adc	r26, r1
 936:	62 1f       	adc	r22, r18
 938:	83 9f       	mul	r24, r19
 93a:	a0 0d       	add	r26, r0
 93c:	61 1d       	adc	r22, r1
 93e:	22 1f       	adc	r18, r18
 940:	74 9f       	mul	r23, r20
 942:	33 27       	eor	r19, r19
 944:	a0 0d       	add	r26, r0
 946:	61 1d       	adc	r22, r1
 948:	23 1f       	adc	r18, r19
 94a:	84 9f       	mul	r24, r20
 94c:	60 0d       	add	r22, r0
 94e:	21 1d       	adc	r18, r1
 950:	82 2f       	mov	r24, r18
 952:	76 2f       	mov	r23, r22
 954:	6a 2f       	mov	r22, r26
 956:	11 24       	eor	r1, r1
 958:	9f 57       	subi	r25, 0x7F	; 127
 95a:	50 40       	sbci	r21, 0x00	; 0
 95c:	9a f0       	brmi	.+38     	; 0x984 <__stack+0x85>
 95e:	f1 f0       	breq	.+60     	; 0x99c <__stack+0x9d>
 960:	88 23       	and	r24, r24
 962:	4a f0       	brmi	.+18     	; 0x976 <__stack+0x77>
 964:	ee 0f       	add	r30, r30
 966:	ff 1f       	adc	r31, r31
 968:	bb 1f       	adc	r27, r27
 96a:	66 1f       	adc	r22, r22
 96c:	77 1f       	adc	r23, r23
 96e:	88 1f       	adc	r24, r24
 970:	91 50       	subi	r25, 0x01	; 1
 972:	50 40       	sbci	r21, 0x00	; 0
 974:	a9 f7       	brne	.-22     	; 0x960 <__stack+0x61>
 976:	9e 3f       	cpi	r25, 0xFE	; 254
 978:	51 05       	cpc	r21, r1
 97a:	80 f0       	brcs	.+32     	; 0x99c <__stack+0x9d>
 97c:	0c 94 17 04 	jmp	0x82e	; 0x82e <__fp_inf>
 980:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__fp_szero>
 984:	5f 3f       	cpi	r21, 0xFF	; 255
 986:	e4 f3       	brlt	.-8      	; 0x980 <__stack+0x81>
 988:	98 3e       	cpi	r25, 0xE8	; 232
 98a:	d4 f3       	brlt	.-12     	; 0x980 <__stack+0x81>
 98c:	86 95       	lsr	r24
 98e:	77 95       	ror	r23
 990:	67 95       	ror	r22
 992:	b7 95       	ror	r27
 994:	f7 95       	ror	r31
 996:	e7 95       	ror	r30
 998:	9f 5f       	subi	r25, 0xFF	; 255
 99a:	c1 f7       	brne	.-16     	; 0x98c <__stack+0x8d>
 99c:	fe 2b       	or	r31, r30
 99e:	88 0f       	add	r24, r24
 9a0:	91 1d       	adc	r25, r1
 9a2:	96 95       	lsr	r25
 9a4:	87 95       	ror	r24
 9a6:	97 f9       	bld	r25, 7
 9a8:	08 95       	ret

000009aa <_exit>:
 9aa:	f8 94       	cli

000009ac <__stop_program>:
 9ac:	ff cf       	rjmp	.-2      	; 0x9ac <__stop_program>
